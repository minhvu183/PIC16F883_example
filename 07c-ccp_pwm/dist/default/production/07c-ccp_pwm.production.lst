

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 10:29:06 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F883 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0089                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     008F                     	;# 
    89     0090                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0093                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0095                     	;# 
    97     0096                     	;# 
    98     0097                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009A                     	;# 
   102     009B                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     0105                     	;# 
   108     0107                     	;# 
   109     0108                     	;# 
   110     0109                     	;# 
   111     010C                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     0185                     	;# 
   117     0187                     	;# 
   118     0188                     	;# 
   119     0189                     	;# 
   120     018C                     	;# 
   121     018D                     	;# 
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     008F                     	;# 
   165     0090                     	;# 
   166     0091                     	;# 
   167     0092                     	;# 
   168     0093                     	;# 
   169     0093                     	;# 
   170     0093                     	;# 
   171     0094                     	;# 
   172     0095                     	;# 
   173     0096                     	;# 
   174     0097                     	;# 
   175     0098                     	;# 
   176     0099                     	;# 
   177     009A                     	;# 
   178     009B                     	;# 
   179     009C                     	;# 
   180     009D                     	;# 
   181     009E                     	;# 
   182     009F                     	;# 
   183     0105                     	;# 
   184     0107                     	;# 
   185     0108                     	;# 
   186     0109                     	;# 
   187     010C                     	;# 
   188     010C                     	;# 
   189     010D                     	;# 
   190     010E                     	;# 
   191     010F                     	;# 
   192     0185                     	;# 
   193     0187                     	;# 
   194     0188                     	;# 
   195     0189                     	;# 
   196     018C                     	;# 
   197     018D                     	;# 
   198                           
   199                           	psect	nvCOMMON
   200     0077                     __pnvCOMMON:
   201     0077                     _duty:
   202     0077                     	ds	2
   203     0015                     _CCPR1L	set	21
   204     0092                     _TMR2ON	set	146
   205     0091                     _T2CKPS1	set	145
   206     0090                     _T2CKPS0	set	144
   207     00B8                     _CCP1M0	set	184
   208     00B9                     _CCP1M1	set	185
   209     00BA                     _CCP1M2	set	186
   210     00BB                     _CCP1M3	set	187
   211     00BC                     _DC1B0	set	188
   212     00BD                     _DC1B1	set	189
   213     0092                     _PR2	set	146
   214     043A                     _TRISC2	set	1082
   215                           
   216                           	psect	cinit
   217     07FD                     start_initialization:	
   218                           ; #config settings
   219                           
   220     07FD                     __initialization:
   221     07FD                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224     07FD                     __end_of__initialization:
   225     07FD  0183               	clrf	3
   226     07FE  118A  2F8F         	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	cstackCOMMON
   229     0070                     __pcstackCOMMON:
   230     0070                     ?_set_duty:
   231     0070                     ?_main:	
   232                           ; 1 bytes @ 0x0
   233                           
   234     0070                     set_duty@duty_cycle:	
   235                           ; 1 bytes @ 0x0
   236                           
   237                           
   238                           ; 2 bytes @ 0x0
   239     0070                     	ds	2
   240     0072                     ??_set_duty:
   241                           
   242                           ; 1 bytes @ 0x2
   243     0072                     	ds	2
   244     0074                     ??_main:
   245                           
   246                           ; 1 bytes @ 0x4
   247     0074                     	ds	3
   248                           
   249                           	psect	maintext
   250     078F                     __pmaintext:	
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 15 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0, pclath, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : B00/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   270 ;;      Params:         0       0       0       0
   271 ;;      Locals:         0       0       0       0
   272 ;;      Temps:          3       0       0       0
   273 ;;      Totals:         3       0       0       0
   274 ;;Total ram usage:        3 bytes
   275 ;; Hardware stack levels required when called: 1
   276 ;; This function calls:
   277 ;;		_set_duty
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283     078F                     _main:	
   284                           ;psect for function _main
   285                           
   286     078F                     l633:	
   287                           ;incstack = 0
   288                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   289                           
   290                           
   291                           ;main.c: 17:     CCP1M3 = 1;
   292     078F  1283               	bcf	3,5	;RP0=0, select bank0
   293     0790  1303               	bcf	3,6	;RP1=0, select bank0
   294     0791  1597               	bsf	23,3	;volatile
   295                           
   296                           ;main.c: 18:     CCP1M2 = 1;
   297     0792  1517               	bsf	23,2	;volatile
   298                           
   299                           ;main.c: 19:     CCP1M1 = 0;
   300     0793  1097               	bcf	23,1	;volatile
   301                           
   302                           ;main.c: 20:     CCP1M0 = 0;
   303     0794  1017               	bcf	23,0	;volatile
   304                           
   305                           ;main.c: 22:     TRISC2 = 0;
   306     0795  1683               	bsf	3,5	;RP0=1, select bank1
   307     0796  1303               	bcf	3,6	;RP1=0, select bank1
   308     0797  1107               	bcf	7,2	;volatile
   309     0798                     l635:
   310                           
   311                           ;main.c: 24:     PR2 = 124;
   312     0798  307C               	movlw	124
   313     0799  0092               	movwf	18	;volatile
   314     079A                     l637:
   315                           
   316                           ;main.c: 26:     T2CKPS0 = 1;
   317     079A  1283               	bcf	3,5	;RP0=0, select bank0
   318     079B  1303               	bcf	3,6	;RP1=0, select bank0
   319     079C  1412               	bsf	18,0	;volatile
   320     079D                     l639:
   321                           
   322                           ;main.c: 27:     T2CKPS1 = 0;
   323     079D  1092               	bcf	18,1	;volatile
   324     079E                     l641:
   325                           
   326                           ;main.c: 29:     DC1B1 = (_Bool)350 & 2;
   327     079E  1297               	bcf	23,5	;volatile
   328     079F                     l643:
   329                           
   330                           ;main.c: 30:     DC1B0 = (_Bool)350 & 1;
   331     079F  1617               	bsf	23,4	;volatile
   332                           
   333                           ;main.c: 32:     CCPR1L = 350 >> 2;
   334     07A0  3057               	movlw	87
   335     07A1  0095               	movwf	21	;volatile
   336     07A2                     l645:
   337                           
   338                           ;main.c: 34:     TMR2ON = 1;
   339     07A2  1512               	bsf	18,2	;volatile
   340     07A3                     l647:
   341                           
   342                           ;main.c: 38:         duty = 0;
   343     07A3  01F7               	clrf	_duty
   344     07A4  01F8               	clrf	_duty+1
   345                           
   346                           ;main.c: 39:         while(duty<500){
   347     07A5  2FBB               	goto	l655
   348     07A6                     l649:
   349                           
   350                           ;main.c: 40:            set_duty(duty);
   351     07A6  0878               	movf	_duty+1,w
   352     07A7  00F1               	movwf	set_duty@duty_cycle+1
   353     07A8  0877               	movf	_duty,w
   354     07A9  00F0               	movwf	set_duty@duty_cycle
   355     07AA  118A  276E  118A   	fcall	_set_duty
   356     07AD                     l651:
   357                           
   358                           ;main.c: 41:            duty++;
   359     07AD  3001               	movlw	1
   360     07AE  07F7               	addwf	_duty,f
   361     07AF  1803               	skipnc
   362     07B0  0AF8               	incf	_duty+1,f
   363     07B1  3000               	movlw	0
   364     07B2  07F8               	addwf	_duty+1,f
   365     07B3                     l653:
   366                           
   367                           ;main.c: 42:            _delay((unsigned long)((5)*(4000000/4000.0)));
   368     07B3  3007               	movlw	7
   369     07B4  00F5               	movwf	??_main+1
   370     07B5  307D               	movlw	125
   371     07B6  00F4               	movwf	??_main
   372     07B7                     u137:
   373     07B7  0BF4               	decfsz	??_main,f
   374     07B8  2FB7               	goto	u137
   375     07B9  0BF5               	decfsz	??_main+1,f
   376     07BA  2FB7               	goto	u137
   377     07BB                     l655:
   378                           
   379                           ;main.c: 39:         while(duty<500){
   380     07BB  3001               	movlw	1
   381     07BC  0278               	subwf	_duty+1,w
   382     07BD  30F4               	movlw	244
   383     07BE  1903               	skipnz
   384     07BF  0277               	subwf	_duty,w
   385     07C0  1C03               	skipc
   386     07C1  2FC3               	goto	u111
   387     07C2  2FC4               	goto	u110
   388     07C3                     u111:
   389     07C3  2FA6               	goto	l649
   390     07C4                     u110:
   391     07C4                     l657:
   392                           
   393                           ;main.c: 44:         _delay((unsigned long)((200)*(4000000/4000.0)));
   394     07C4  3002               	movlw	2
   395     07C5  00F6               	movwf	??_main+2
   396     07C6  3004               	movlw	4
   397     07C7  00F5               	movwf	??_main+1
   398     07C8  30BA               	movlw	186
   399     07C9  00F4               	movwf	??_main
   400     07CA                     u147:
   401     07CA  0BF4               	decfsz	??_main,f
   402     07CB  2FCA               	goto	u147
   403     07CC  0BF5               	decfsz	??_main+1,f
   404     07CD  2FCA               	goto	u147
   405     07CE  0BF6               	decfsz	??_main+2,f
   406     07CF  2FCA               	goto	u147
   407     07D0  0000               	nop
   408                           
   409                           ;main.c: 46:         while(duty>0){
   410     07D1  2FE7               	goto	l665
   411     07D2                     l659:
   412                           
   413                           ;main.c: 47:            set_duty(duty);
   414     07D2  0878               	movf	_duty+1,w
   415     07D3  00F1               	movwf	set_duty@duty_cycle+1
   416     07D4  0877               	movf	_duty,w
   417     07D5  00F0               	movwf	set_duty@duty_cycle
   418     07D6  118A  276E  118A   	fcall	_set_duty
   419     07D9                     l661:
   420                           
   421                           ;main.c: 48:            duty--;
   422     07D9  3001               	movlw	1
   423     07DA  02F7               	subwf	_duty,f
   424     07DB  3000               	movlw	0
   425     07DC  1C03               	skipc
   426     07DD  03F8               	decf	_duty+1,f
   427     07DE  02F8               	subwf	_duty+1,f
   428     07DF                     l663:
   429                           
   430                           ;main.c: 49:            _delay((unsigned long)((5)*(4000000/4000.0)));
   431     07DF  3007               	movlw	7
   432     07E0  00F5               	movwf	??_main+1
   433     07E1  307D               	movlw	125
   434     07E2  00F4               	movwf	??_main
   435     07E3                     u157:
   436     07E3  0BF4               	decfsz	??_main,f
   437     07E4  2FE3               	goto	u157
   438     07E5  0BF5               	decfsz	??_main+1,f
   439     07E6  2FE3               	goto	u157
   440     07E7                     l665:
   441                           
   442                           ;main.c: 46:         while(duty>0){
   443     07E7  0877               	movf	_duty,w
   444     07E8  0478               	iorwf	_duty+1,w
   445     07E9  1D03               	btfss	3,2
   446     07EA  2FEC               	goto	u121
   447     07EB  2FED               	goto	u120
   448     07EC                     u121:
   449     07EC  2FD2               	goto	l659
   450     07ED                     u120:
   451     07ED                     l667:
   452                           
   453                           ;main.c: 51:         _delay((unsigned long)((200)*(4000000/4000.0)));
   454     07ED  3002               	movlw	2
   455     07EE  00F6               	movwf	??_main+2
   456     07EF  3004               	movlw	4
   457     07F0  00F5               	movwf	??_main+1
   458     07F1  30BA               	movlw	186
   459     07F2  00F4               	movwf	??_main
   460     07F3                     u167:
   461     07F3  0BF4               	decfsz	??_main,f
   462     07F4  2FF3               	goto	u167
   463     07F5  0BF5               	decfsz	??_main+1,f
   464     07F6  2FF3               	goto	u167
   465     07F7  0BF6               	decfsz	??_main+2,f
   466     07F8  2FF3               	goto	u167
   467     07F9  0000               	nop
   468     07FA  2FA3               	goto	l647
   469     07FB  118A  2800         	ljmp	start
   470     07FD                     __end_of_main:
   471                           
   472                           	psect	text1
   473     076E                     __ptext1:	
   474 ;; *************** function _set_duty *****************
   475 ;; Defined at:
   476 ;;		line 9 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;  duty_cycle      2    0[COMMON] unsigned short 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;		None
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   490 ;;      Params:         2       0       0       0
   491 ;;      Locals:         0       0       0       0
   492 ;;      Temps:          2       0       0       0
   493 ;;      Totals:         4       0       0       0
   494 ;;Total ram usage:        4 bytes
   495 ;; Hardware stack levels used: 1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503     076E                     _set_duty:	
   504                           ;psect for function _set_duty
   505                           
   506     076E                     l629:	
   507                           ;incstack = 0
   508                           ; Regs used in _set_duty: [wreg+status,2+status,0]
   509                           
   510                           
   511                           ;main.c: 10:     DC1B1 = (_Bool)(duty_cycle & 2);
   512     076E  18F0               	btfsc	set_duty@duty_cycle,1
   513     076F  2F71               	goto	u71
   514     0770  2F75               	goto	u70
   515     0771                     u71:
   516     0771  1283               	bcf	3,5	;RP0=0, select bank0
   517     0772  1303               	bcf	3,6	;RP1=0, select bank0
   518     0773  1697               	bsf	23,5	;volatile
   519     0774  2F78               	goto	u84
   520     0775                     u70:
   521     0775  1283               	bcf	3,5	;RP0=0, select bank0
   522     0776  1303               	bcf	3,6	;RP1=0, select bank0
   523     0777  1297               	bcf	23,5	;volatile
   524     0778                     u84:
   525                           
   526                           ;main.c: 11:     DC1B0 = (_Bool)(duty_cycle & 1);
   527     0778  1870               	btfsc	set_duty@duty_cycle,0
   528     0779  2F7B               	goto	u91
   529     077A  2F7F               	goto	u90
   530     077B                     u91:
   531     077B  1283               	bcf	3,5	;RP0=0, select bank0
   532     077C  1303               	bcf	3,6	;RP1=0, select bank0
   533     077D  1617               	bsf	23,4	;volatile
   534     077E  2F82               	goto	u104
   535     077F                     u90:
   536     077F  1283               	bcf	3,5	;RP0=0, select bank0
   537     0780  1303               	bcf	3,6	;RP1=0, select bank0
   538     0781  1217               	bcf	23,4	;volatile
   539     0782                     u104:
   540     0782                     l631:
   541                           
   542                           ;main.c: 13:     CCPR1L = (uint8_t)(duty_cycle >> 2);
   543     0782  0871               	movf	set_duty@duty_cycle+1,w
   544     0783  00F3               	movwf	??_set_duty+1
   545     0784  0870               	movf	set_duty@duty_cycle,w
   546     0785  00F2               	movwf	??_set_duty
   547     0786  1003               	clrc
   548     0787  0CF3               	rrf	??_set_duty+1,f
   549     0788  0CF2               	rrf	??_set_duty,f
   550     0789  1003               	clrc
   551     078A  0CF3               	rrf	??_set_duty+1,f
   552     078B  0CF2               	rrf	??_set_duty,f
   553     078C  0872               	movf	??_set_duty,w
   554     078D  0095               	movwf	21	;volatile
   555     078E                     l31:
   556     078E  0008               	return
   557     078F                     __end_of_set_duty:
   558     007E                     btemp	set	126	;btemp
   559     007E                     wtemp0	set	126
   560                           
   561                           	psect	config
   562                           
   563                           ;Config register CONFIG1 @ 0x2007
   564                           ;	Oscillator Selection bits
   565                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   566                           ;	Watchdog Timer Enable bit
   567                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   568                           ;	Power-up Timer Enable bit
   569                           ;	PWRTE = ON, PWRT enabled
   570                           ;	RE3/MCLR pin function select bit
   571                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   572                           ;	Code Protection bit
   573                           ;	CP = OFF, Program memory code protection is disabled
   574                           ;	Data Code Protection bit
   575                           ;	CPD = OFF, Data memory code protection is disabled
   576                           ;	Brown Out Reset Selection bits
   577                           ;	BOREN = ON, BOR enabled
   578                           ;	Internal External Switchover bit
   579                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   580                           ;	Fail-Safe Clock Monitor Enabled bit
   581                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   582                           ;	Low Voltage Programming Enable bit
   583                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   584                           ;	In-Circuit Debugger Mode bit
   585                           ;	DEBUG = 0x1, unprogrammed default
   586     2007                     	org	8199
   587     2007  23E4               	dw	9188
   588                           
   589                           ;Config register CONFIG2 @ 0x2008
   590                           ;	Brown-out Reset Selection bit
   591                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   592                           ;	Flash Program Memory Self Write Enable bits
   593                           ;	WRT = OFF, Write protection off
   594     2008                     	org	8200
   595     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_set_duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     218
                                              4 COMMON     3     3      0
                           _set_duty
 ---------------------------------------------------------------------------------
 (1) _set_duty                                             4     2      2     218
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _set_duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       9       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       9      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 10:29:06 2024

                     l31 078E                       u70 0775                       u71 0771  
                     u90 077F                       u91 077B                       u84 0778  
                    l631 0782                      l641 079E                      l633 078F  
                    l651 07AD                      l643 079F                      l635 0798  
                    l629 076E                      l661 07D9                      l653 07B3  
                    l645 07A2                      l637 079A                      l663 07DF  
                    l655 07BB                      l647 07A3                      l639 079D  
                    l665 07E7                      l657 07C4                      l649 07A6  
                    l667 07ED                      l659 07D2                      u110 07C4  
                    u111 07C3                      u104 0782                      u120 07ED  
                    u121 07EC                      u137 07B7                      u147 07CA  
                    u157 07E3                      _PR2 0092                      u167 07F3  
                   _main 078F                     _duty 0077                     btemp 007E  
                   start 0000                    _DC1B0 00BC                    _DC1B1 00BD  
                  ?_main 0070       set_duty@duty_cycle 0070                    status 0003  
                  wtemp0 007E          __initialization 07FD             __end_of_main 07FD  
                 ??_main 0074                   _CCP1M0 00B8                   _CCP1M1 00B9  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCPR1L 0015  
                 _TMR2ON 0092                   _TRISC2 043A         __end_of_set_duty 078F  
__end_of__initialization 07FD           __pcstackCOMMON 0070               __pnvCOMMON 0077  
             __pmaintext 078F                  _T2CKPS0 0090                  _T2CKPS1 0091  
              ?_set_duty 0070                  __ptext1 076E     end_of_initialization 07FD  
             ??_set_duty 0072      start_initialization 07FD                ___latbits 0001  
               _set_duty 076E  
