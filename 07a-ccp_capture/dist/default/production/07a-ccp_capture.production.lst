

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 09:16:48 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 22/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F883 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     008F                     	;# 
   177     0090                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0097                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009A                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     0105                     	;# 
   196     0107                     	;# 
   197     0108                     	;# 
   198     0109                     	;# 
   199     010C                     	;# 
   200     010C                     	;# 
   201     010D                     	;# 
   202     010E                     	;# 
   203     010F                     	;# 
   204     0185                     	;# 
   205     0187                     	;# 
   206     0188                     	;# 
   207     0189                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     0000                     	;# 
   211     0001                     	;# 
   212     0002                     	;# 
   213     0003                     	;# 
   214     0004                     	;# 
   215     0005                     	;# 
   216     0006                     	;# 
   217     0007                     	;# 
   218     0009                     	;# 
   219     000A                     	;# 
   220     000B                     	;# 
   221     000C                     	;# 
   222     000D                     	;# 
   223     000E                     	;# 
   224     000E                     	;# 
   225     000F                     	;# 
   226     0010                     	;# 
   227     0011                     	;# 
   228     0012                     	;# 
   229     0013                     	;# 
   230     0014                     	;# 
   231     0015                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001D                     	;# 
   242     001E                     	;# 
   243     001F                     	;# 
   244     0081                     	;# 
   245     0085                     	;# 
   246     0086                     	;# 
   247     0087                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0015                     _CCPR1	set	21
   287     000E                     _TMR1	set	14
   288     0028                     _RA0	set	40
   289     002C                     _RA4	set	44
   290     002D                     _RA5	set	45
   291     002E                     _RA6	set	46
   292     002F                     _RA7	set	47
   293     0029                     _RA1	set	41
   294     0062                     _CCP1IF	set	98
   295     005F                     _GIE	set	95
   296     005E                     _PEIE	set	94
   297     00B8                     _CCP1M0	set	184
   298     00B9                     _CCP1M1	set	185
   299     00BA                     _CCP1M2	set	186
   300     00BB                     _CCP1M3	set	187
   301     0080                     _TMR1ON	set	128
   302     0082                     _T1SYNC	set	130
   303     0084                     _T1CKPS0	set	132
   304     0085                     _T1CKPS1	set	133
   305     0081                     _TMR1CS	set	129
   306     0085                     _TRISA	set	133
   307     0462                     _CCP1IE	set	1122
   308     0188                     _ANSEL	set	392
   309                           
   310                           	psect	cinit
   311     000D                     start_initialization:	
   312                           ; #config settings
   313                           
   314     000D                     __initialization:
   315                           
   316                           ; Clear objects allocated to BANK0
   317     000D  1283               	bcf	3,5	;RP0=0, select bank0
   318     000E  1303               	bcf	3,6	;RP1=0, select bank0
   319     000F  01BA               	clrf	__pbssBANK0& (0+127)
   320     0010  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   321     0011                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324     0011                     __end_of__initialization:
   325     0011  0183               	clrf	3
   326     0012  118A  2985         	ljmp	_main	;jump to C main() function
   327                           
   328                           	psect	bssBANK0
   329     003A                     __pbssBANK0:
   330     003A                     _i:
   331     003A                     	ds	2
   332                           
   333                           	psect	cstackCOMMON
   334     0070                     __pcstackCOMMON:
   335     0070                     ?_lcdInit:
   336     0070                     ?_lcdChar:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_lcdClear:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?_ISR:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ??_ISR:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ?_clockLcd:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ?_lcdWriteHigh:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?_lcdWriteLow:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ?_lcdCmd:	
   361                           ; 1 bytes @ 0x0
   362                           
   363                           
   364                           ; 1 bytes @ 0x0
   365     0070                     	ds	2
   366     0072                     ??_clockLcd:
   367     0072                     ??_lcdWriteHigh:	
   368                           ; 1 bytes @ 0x2
   369                           
   370     0072                     ??_lcdWriteLow:	
   371                           ; 1 bytes @ 0x2
   372                           
   373     0072                     ?___lldiv:	
   374                           ; 1 bytes @ 0x2
   375                           
   376     0072                     ?___llmod:	
   377                           ; 4 bytes @ 0x2
   378                           
   379     0072                     ___lldiv@divisor:	
   380                           ; 4 bytes @ 0x2
   381                           
   382     0072                     ___llmod@divisor:	
   383                           ; 4 bytes @ 0x2
   384                           
   385                           
   386                           ; 4 bytes @ 0x2
   387     0072                     	ds	1
   388     0073                     lcdWriteHigh@b:
   389     0073                     lcdWriteLow@b:	
   390                           ; 1 bytes @ 0x3
   391                           
   392                           
   393                           ; 1 bytes @ 0x3
   394     0073                     	ds	1
   395     0074                     ??_lcdChar:
   396     0074                     ??_lcdCmd:	
   397                           ; 1 bytes @ 0x4
   398                           
   399                           
   400                           ; 1 bytes @ 0x4
   401     0074                     	ds	1
   402     0075                     lcdChar@b:
   403                           
   404                           ; 1 bytes @ 0x5
   405     0075                     	ds	1
   406     0076                     lcdCmd@b:
   407     0076                     ___lldiv@dividend:	
   408                           ; 1 bytes @ 0x6
   409                           
   410     0076                     ___llmod@dividend:	
   411                           ; 4 bytes @ 0x6
   412                           
   413                           
   414                           ; 4 bytes @ 0x6
   415     0076                     	ds	1
   416     0077                     ??_lcdInit:
   417     0077                     ??_lcdClear:	
   418                           ; 1 bytes @ 0x7
   419                           
   420                           
   421                           ; 1 bytes @ 0x7
   422     0077                     	ds	3
   423     007A                     ??___lldiv:
   424     007A                     ??___llmod:	
   425                           ; 1 bytes @ 0xA
   426                           
   427                           
   428                           ; 1 bytes @ 0xA
   429     007A                     	ds	1
   430     007B                     ___llmod@counter:
   431                           
   432                           ; 1 bytes @ 0xB
   433     007B                     	ds	1
   434                           
   435                           	psect	cstackBANK0
   436     0020                     __pcstackBANK0:
   437     0020                     ___lldiv@quotient:
   438                           
   439                           ; 4 bytes @ 0x0
   440     0020                     	ds	4
   441     0024                     ___lldiv@counter:
   442                           
   443                           ; 1 bytes @ 0x4
   444     0024                     	ds	1
   445     0025                     ?_lcdNumber:
   446     0025                     lcdNumber@n:	
   447                           ; 1 bytes @ 0x5
   448                           
   449                           
   450                           ; 4 bytes @ 0x5
   451     0025                     	ds	4
   452     0029                     ??_lcdNumber:
   453                           
   454                           ; 1 bytes @ 0x9
   455     0029                     	ds	2
   456     002B                     lcdNumber@num:
   457                           
   458                           ; 10 bytes @ 0xB
   459     002B                     	ds	10
   460     0035                     lcdNumber@i:
   461                           
   462                           ; 1 bytes @ 0x15
   463     0035                     	ds	1
   464     0036                     lcdNumber@j:
   465                           
   466                           ; 1 bytes @ 0x16
   467     0036                     	ds	1
   468     0037                     ??_main:
   469                           
   470                           ; 1 bytes @ 0x17
   471     0037                     	ds	3
   472                           
   473                           	psect	maintext
   474     0185                     __pmaintext:	
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 9 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : B00/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   494 ;;      Params:         0       0       0       0
   495 ;;      Locals:         0       0       0       0
   496 ;;      Temps:          0       3       0       0
   497 ;;      Totals:         0       3       0       0
   498 ;;Total ram usage:        3 bytes
   499 ;; Hardware stack levels required when called: 4
   500 ;; This function calls:
   501 ;;		_lcdChar
   502 ;;		_lcdClear
   503 ;;		_lcdInit
   504 ;;		_lcdNumber
   505 ;; This function is called by:
   506 ;;		Startup code after reset
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510     0185                     _main:	
   511                           ;psect for function _main
   512                           
   513     0185                     l1049:	
   514                           ;incstack = 0
   515                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   516                           
   517                           
   518                           ;main.c: 11:     TRISA = 0;
   519     0185  1683               	bsf	3,5	;RP0=1, select bank1
   520     0186  1303               	bcf	3,6	;RP1=0, select bank1
   521     0187  0185               	clrf	5	;volatile
   522                           
   523                           ;main.c: 12:     ANSEL = 0;
   524     0188  1683               	bsf	3,5	;RP0=1, select bank3
   525     0189  1703               	bsf	3,6	;RP1=1, select bank3
   526     018A  0188               	clrf	8	;volatile
   527     018B                     l1051:
   528                           
   529                           ;main.c: 14:     TMR1CS = 0;
   530     018B  1283               	bcf	3,5	;RP0=0, select bank0
   531     018C  1303               	bcf	3,6	;RP1=0, select bank0
   532     018D  1090               	bcf	16,1	;volatile
   533     018E                     l1053:
   534                           
   535                           ;main.c: 15:     T1CKPS1 = 0;
   536     018E  1290               	bcf	16,5	;volatile
   537     018F                     l1055:
   538                           
   539                           ;main.c: 16:     T1CKPS0 = 0;
   540     018F  1210               	bcf	16,4	;volatile
   541     0190                     l1057:
   542                           
   543                           ;main.c: 17:     T1SYNC = 1;
   544     0190  1510               	bsf	16,2	;volatile
   545                           
   546                           ;main.c: 18:     TMR1 = 0;
   547     0191  018E               	clrf	14	;volatile
   548     0192  018F               	clrf	15	;volatile
   549     0193                     l1059:
   550                           
   551                           ;main.c: 19:     TMR1ON = 1;
   552     0193  1410               	bsf	16,0	;volatile
   553     0194                     l1061:
   554                           
   555                           ;main.c: 21:     CCP1M3 = 0;
   556     0194  1197               	bcf	23,3	;volatile
   557     0195                     l1063:
   558                           
   559                           ;main.c: 22:     CCP1M2 = 1;
   560     0195  1517               	bsf	23,2	;volatile
   561     0196                     l1065:
   562                           
   563                           ;main.c: 23:     CCP1M1 = 0;
   564     0196  1097               	bcf	23,1	;volatile
   565     0197                     l1067:
   566                           
   567                           ;main.c: 24:     CCP1M0 = 0;
   568     0197  1017               	bcf	23,0	;volatile
   569     0198                     l1069:
   570                           
   571                           ;main.c: 26:     CCP1IE = 1;
   572     0198  1683               	bsf	3,5	;RP0=1, select bank1
   573     0199  1303               	bcf	3,6	;RP1=0, select bank1
   574     019A  150C               	bsf	12,2	;volatile
   575     019B                     l1071:
   576                           
   577                           ;main.c: 27:     PEIE = 1;
   578     019B  170B               	bsf	11,6	;volatile
   579     019C                     l1073:
   580                           
   581                           ;main.c: 28:     GIE = 1;
   582     019C  178B               	bsf	11,7	;volatile
   583     019D                     l1075:
   584                           
   585                           ;main.c: 30:     lcdInit();
   586     019D  118A  2137  118A   	fcall	_lcdInit
   587     01A0                     l1077:
   588                           
   589                           ;main.c: 31:     lcdChar('a');
   590     01A0  3061               	movlw	97
   591     01A1  118A  2279  118A   	fcall	_lcdChar
   592     01A4                     l1079:
   593                           
   594                           ;main.c: 34:         GIE = 0;
   595     01A4  138B               	bcf	11,7	;volatile
   596     01A5                     l1081:
   597                           
   598                           ;main.c: 35:         lcdClear();
   599     01A5  118A  22B4  118A   	fcall	_lcdClear
   600     01A8                     l1083:
   601                           
   602                           ;main.c: 36:         lcdNumber(i);
   603     01A8  1283               	bcf	3,5	;RP0=0, select bank0
   604     01A9  1303               	bcf	3,6	;RP1=0, select bank0
   605     01AA  083A               	movf	_i,w
   606     01AB  00A5               	movwf	lcdNumber@n
   607     01AC  083B               	movf	_i+1,w
   608     01AD  00A6               	movwf	lcdNumber@n+1
   609     01AE  01A7               	clrf	lcdNumber@n+2
   610     01AF  01A8               	clrf	lcdNumber@n+3
   611     01B0  118A  207C  118A   	fcall	_lcdNumber
   612     01B3                     l1085:
   613                           
   614                           ;main.c: 37:         _delay((unsigned long)((500)*(4000000/4000.0)));
   615     01B3  3003               	movlw	3
   616     01B4  1283               	bcf	3,5	;RP0=0, select bank0
   617     01B5  1303               	bcf	3,6	;RP1=0, select bank0
   618     01B6  00B9               	movwf	??_main+2
   619     01B7  308A               	movlw	138
   620     01B8  00B8               	movwf	??_main+1
   621     01B9  3055               	movlw	85
   622     01BA  00B7               	movwf	??_main
   623     01BB                     u997:
   624     01BB  0BB7               	decfsz	??_main,f
   625     01BC  29BB               	goto	u997
   626     01BD  0BB8               	decfsz	??_main+1,f
   627     01BE  29BB               	goto	u997
   628     01BF  0BB9               	decfsz	??_main+2,f
   629     01C0  29BB               	goto	u997
   630     01C1  0000               	nop
   631     01C2                     l1087:
   632                           
   633                           ;main.c: 38:         GIE = 1;
   634     01C2  178B               	bsf	11,7	;volatile
   635     01C3                     l1089:
   636                           
   637                           ;main.c: 39:         _delay((unsigned long)((100)*(4000000/4000.0)));
   638     01C3  3082               	movlw	130
   639     01C4  1283               	bcf	3,5	;RP0=0, select bank0
   640     01C5  1303               	bcf	3,6	;RP1=0, select bank0
   641     01C6  00B8               	movwf	??_main+1
   642     01C7  30DD               	movlw	221
   643     01C8  00B7               	movwf	??_main
   644     01C9                     u1007:
   645     01C9  0BB7               	decfsz	??_main,f
   646     01CA  29C9               	goto	u1007
   647     01CB  0BB8               	decfsz	??_main+1,f
   648     01CC  29C9               	goto	u1007
   649     01CD  0000               	nop
   650     01CE  29A4               	goto	l1079
   651     01CF  118A  280B         	ljmp	start
   652     01D1                     __end_of_main:
   653                           
   654                           	psect	text1
   655     007C                     __ptext1:	
   656 ;; *************** function _lcdNumber *****************
   657 ;; Defined at:
   658 ;;		line 104 in file "lcd_4bit.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  n               4    5[BANK0 ] unsigned long 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  num            10   11[BANK0 ] unsigned char [10]
   663 ;;  j               1   22[BANK0 ] unsigned char 
   664 ;;  i               1   21[BANK0 ] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   674 ;;      Params:         0       4       0       0
   675 ;;      Locals:         0      12       0       0
   676 ;;      Temps:          0       2       0       0
   677 ;;      Totals:         0      18       0       0
   678 ;;Total ram usage:       18 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 3
   681 ;; This function calls:
   682 ;;		___lldiv
   683 ;;		___llmod
   684 ;;		_lcdChar
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690     007C                     _lcdNumber:	
   691                           ;psect for function _lcdNumber
   692                           
   693     007C                     l1019:	
   694                           ;incstack = 0
   695                           ; Regs used in _lcdNumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   696                           
   697                           
   698                           ;lcd_4bit.c: 105:  uint8_t i,num[10],j=0;
   699     007C  1283               	bcf	3,5	;RP0=0, select bank0
   700     007D  1303               	bcf	3,6	;RP1=0, select bank0
   701     007E  01B6               	clrf	lcdNumber@j
   702                           
   703                           ;lcd_4bit.c: 106:  while(n){
   704     007F  28BC               	goto	l1027
   705     0080                     l1021:
   706                           
   707                           ;lcd_4bit.c: 107:    num[j]=n%10;
   708     0080  0836               	movf	lcdNumber@j,w
   709     0081  3E2B               	addlw	(low (lcdNumber@num| 0))& (0+255)
   710     0082  0084               	movwf	4
   711     0083  3000               	movlw	0
   712     0084  00F5               	movwf	___llmod@divisor+3
   713     0085  3000               	movlw	0
   714     0086  00F4               	movwf	___llmod@divisor+2
   715     0087  3000               	movlw	0
   716     0088  00F3               	movwf	___llmod@divisor+1
   717     0089  300A               	movlw	10
   718     008A  00F2               	movwf	___llmod@divisor
   719     008B  0828               	movf	lcdNumber@n+3,w
   720     008C  00F9               	movwf	___llmod@dividend+3
   721     008D  0827               	movf	lcdNumber@n+2,w
   722     008E  00F8               	movwf	___llmod@dividend+2
   723     008F  0826               	movf	lcdNumber@n+1,w
   724     0090  00F7               	movwf	___llmod@dividend+1
   725     0091  0825               	movf	lcdNumber@n,w
   726     0092  00F6               	movwf	___llmod@dividend
   727     0093  118A  20E3  118A   	fcall	___llmod
   728     0096  0872               	movf	?___llmod,w
   729     0097  1383               	bcf	3,7	;select IRP bank0
   730     0098  0080               	movwf	0
   731     0099                     l1023:
   732                           
   733                           ;lcd_4bit.c: 108:   n/=10;
   734     0099  3000               	movlw	0
   735     009A  00F5               	movwf	___lldiv@divisor+3
   736     009B  3000               	movlw	0
   737     009C  00F4               	movwf	___lldiv@divisor+2
   738     009D  3000               	movlw	0
   739     009E  00F3               	movwf	___lldiv@divisor+1
   740     009F  300A               	movlw	10
   741     00A0  00F2               	movwf	___lldiv@divisor
   742     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   743     00A2  1303               	bcf	3,6	;RP1=0, select bank0
   744     00A3  0828               	movf	lcdNumber@n+3,w
   745     00A4  00F9               	movwf	___lldiv@dividend+3
   746     00A5  0827               	movf	lcdNumber@n+2,w
   747     00A6  00F8               	movwf	___lldiv@dividend+2
   748     00A7  0826               	movf	lcdNumber@n+1,w
   749     00A8  00F7               	movwf	___lldiv@dividend+1
   750     00A9  0825               	movf	lcdNumber@n,w
   751     00AA  00F6               	movwf	___lldiv@dividend
   752     00AB  118A  2014  118A   	fcall	___lldiv
   753     00AE  0875               	movf	?___lldiv+3,w
   754     00AF  1283               	bcf	3,5	;RP0=0, select bank0
   755     00B0  1303               	bcf	3,6	;RP1=0, select bank0
   756     00B1  00A8               	movwf	lcdNumber@n+3
   757     00B2  0874               	movf	?___lldiv+2,w
   758     00B3  00A7               	movwf	lcdNumber@n+2
   759     00B4  0873               	movf	?___lldiv+1,w
   760     00B5  00A6               	movwf	lcdNumber@n+1
   761     00B6  0872               	movf	?___lldiv,w
   762     00B7  00A5               	movwf	lcdNumber@n
   763     00B8                     l1025:
   764                           
   765                           ;lcd_4bit.c: 109:   j++;
   766     00B8  3001               	movlw	1
   767     00B9  00FF               	movwf	btemp+1
   768     00BA  087F               	movf	btemp+1,w
   769     00BB  07B6               	addwf	lcdNumber@j,f
   770     00BC                     l1027:
   771                           
   772                           ;lcd_4bit.c: 106:  while(n){
   773     00BC  0828               	movf	lcdNumber@n+3,w
   774     00BD  0427               	iorwf	lcdNumber@n+2,w
   775     00BE  0426               	iorwf	lcdNumber@n+1,w
   776     00BF  0425               	iorwf	lcdNumber@n,w
   777     00C0  1D03               	skipz
   778     00C1  28C3               	goto	u861
   779     00C2  28C4               	goto	u860
   780     00C3                     u861:
   781     00C3  2880               	goto	l1021
   782     00C4                     u860:
   783     00C4                     l1029:
   784                           
   785                           ;lcd_4bit.c: 111:  for(i=0;i<j;i++){
   786     00C4  01B5               	clrf	lcdNumber@i
   787     00C5  28DC               	goto	l1035
   788     00C6                     l1031:
   789                           
   790                           ;lcd_4bit.c: 112:    lcdChar(num[j-i-1]+48);
   791     00C6  302B               	movlw	(low (lcdNumber@num| 0))& (0+255)
   792     00C7  00A9               	movwf	??_lcdNumber
   793     00C8  0835               	movf	lcdNumber@i,w
   794     00C9  02A9               	subwf	??_lcdNumber,f
   795     00CA  0836               	movf	lcdNumber@j,w
   796     00CB  0729               	addwf	??_lcdNumber,w
   797     00CC  00AA               	movwf	??_lcdNumber+1
   798     00CD  082A               	movf	??_lcdNumber+1,w
   799     00CE  3EFF               	addlw	255
   800     00CF  0084               	movwf	4
   801     00D0  1383               	bcf	3,7	;select IRP bank0
   802     00D1  0800               	movf	0,w
   803     00D2  3E30               	addlw	48
   804     00D3  118A  2279  118A   	fcall	_lcdChar
   805     00D6                     l1033:
   806                           
   807                           ;lcd_4bit.c: 113:  }
   808     00D6  3001               	movlw	1
   809     00D7  00FF               	movwf	btemp+1
   810     00D8  087F               	movf	btemp+1,w
   811     00D9  1283               	bcf	3,5	;RP0=0, select bank0
   812     00DA  1303               	bcf	3,6	;RP1=0, select bank0
   813     00DB  07B5               	addwf	lcdNumber@i,f
   814     00DC                     l1035:
   815     00DC  0836               	movf	lcdNumber@j,w
   816     00DD  0235               	subwf	lcdNumber@i,w
   817     00DE  1C03               	skipc
   818     00DF  28E1               	goto	u871
   819     00E0  28E2               	goto	u870
   820     00E1                     u871:
   821     00E1  28C6               	goto	l1031
   822     00E2                     u870:
   823     00E2                     l126:
   824     00E2  0008               	return
   825     00E3                     __end_of_lcdNumber:
   826                           
   827                           	psect	text2
   828     0279                     __ptext2:	
   829 ;; *************** function _lcdChar *****************
   830 ;; Defined at:
   831 ;;		line 74 in file "lcd_4bit.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  b               1    wreg     unsigned char 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  b               1    5[COMMON] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   845 ;;      Params:         0       0       0       0
   846 ;;      Locals:         1       0       0       0
   847 ;;      Temps:          1       0       0       0
   848 ;;      Totals:         2       0       0       0
   849 ;;Total ram usage:        2 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 2
   852 ;; This function calls:
   853 ;;		_clockLcd
   854 ;;		_lcdWriteHigh
   855 ;;		_lcdWriteLow
   856 ;; This function is called by:
   857 ;;		_main
   858 ;;		_lcdNumber
   859 ;;		_lcdText
   860 ;;		_lcdCustom
   861 ;;		_lcdNumberHex
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865     0279                     _lcdChar:	
   866                           ;psect for function _lcdChar
   867                           
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _lcdChar: [wreg+status,2+status,0+pclath+cstack]
   871                           ;lcdChar@b stored from wreg
   872     0279  00F5               	movwf	lcdChar@b
   873     027A                     l929:
   874                           
   875                           ;lcd_4bit.c: 75:  RA0=1;
   876     027A  1283               	bcf	3,5	;RP0=0, select bank0
   877     027B  1303               	bcf	3,6	;RP1=0, select bank0
   878     027C  1405               	bsf	5,0	;volatile
   879     027D                     l931:
   880                           
   881                           ;lcd_4bit.c: 76:  lcdWriteHigh(b);
   882     027D  0875               	movf	lcdChar@b,w
   883     027E  118A  21D1  118A   	fcall	_lcdWriteHigh
   884                           
   885                           ;lcd_4bit.c: 77:  clockLcd();
   886     0281  118A  22A4  118A   	fcall	_clockLcd
   887                           
   888                           ;lcd_4bit.c: 78:  lcdWriteLow(b);
   889     0284  0875               	movf	lcdChar@b,w
   890     0285  118A  221B  118A   	fcall	_lcdWriteLow
   891                           
   892                           ;lcd_4bit.c: 79:  clockLcd();
   893     0288  118A  22A4  118A   	fcall	_clockLcd
   894     028B                     l933:
   895                           
   896                           ;lcd_4bit.c: 80:  _delay((unsigned long)((40)*(4000000/4000000.0)));
   897     028B  300D               	movlw	13
   898     028C  00F4               	movwf	??_lcdChar
   899     028D                     u1017:
   900     028D  0BF4               	decfsz	??_lcdChar,f
   901     028E  2A8D               	goto	u1017
   902     028F                     l101:
   903     028F  0008               	return
   904     0290                     __end_of_lcdChar:
   905                           
   906                           	psect	text3
   907     00E3                     __ptext3:	
   908 ;; *************** function ___llmod *****************
   909 ;; Defined at:
   910 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  divisor         4    2[COMMON] unsigned long 
   913 ;;  dividend        4    6[COMMON] unsigned long 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  counter         1   11[COMMON] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  4    2[COMMON] unsigned long 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0, btemp+1
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   925 ;;      Params:         8       0       0       0
   926 ;;      Locals:         1       0       0       0
   927 ;;      Temps:          1       0       0       0
   928 ;;      Totals:        10       0       0       0
   929 ;;Total ram usage:       10 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; Hardware stack levels required when called: 1
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_lcdNumber
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939     00E3                     ___llmod:	
   940                           ;psect for function ___llmod
   941                           
   942     00E3                     l967:	
   943                           ;incstack = 0
   944                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
   945                           
   946     00E3  0875               	movf	___llmod@divisor+3,w
   947     00E4  0474               	iorwf	___llmod@divisor+2,w
   948     00E5  0473               	iorwf	___llmod@divisor+1,w
   949     00E6  0472               	iorwf	___llmod@divisor,w
   950     00E7  1903               	skipnz
   951     00E8  28EA               	goto	u801
   952     00E9  28EB               	goto	u800
   953     00EA                     u801:
   954     00EA  292E               	goto	l985
   955     00EB                     u800:
   956     00EB                     l969:
   957     00EB  01FB               	clrf	___llmod@counter
   958     00EC  0AFB               	incf	___llmod@counter,f
   959     00ED  28FB               	goto	l975
   960     00EE                     l971:
   961     00EE  3001               	movlw	1
   962     00EF  00FA               	movwf	??___llmod
   963     00F0                     u815:
   964     00F0  1003               	clrc
   965     00F1  0DF2               	rlf	___llmod@divisor,f
   966     00F2  0DF3               	rlf	___llmod@divisor+1,f
   967     00F3  0DF4               	rlf	___llmod@divisor+2,f
   968     00F4  0DF5               	rlf	___llmod@divisor+3,f
   969     00F5  0BFA               	decfsz	??___llmod,f
   970     00F6  28F0               	goto	u815
   971     00F7                     l973:
   972     00F7  3001               	movlw	1
   973     00F8  00FF               	movwf	btemp+1
   974     00F9  087F               	movf	btemp+1,w
   975     00FA  07FB               	addwf	___llmod@counter,f
   976     00FB                     l975:
   977     00FB  1FF5               	btfss	___llmod@divisor+3,7
   978     00FC  28FE               	goto	u821
   979     00FD  28FF               	goto	u820
   980     00FE                     u821:
   981     00FE  28EE               	goto	l971
   982     00FF                     u820:
   983     00FF                     l977:
   984     00FF  0875               	movf	___llmod@divisor+3,w
   985     0100  0279               	subwf	___llmod@dividend+3,w
   986     0101  1D03               	skipz
   987     0102  290D               	goto	u835
   988     0103  0874               	movf	___llmod@divisor+2,w
   989     0104  0278               	subwf	___llmod@dividend+2,w
   990     0105  1D03               	skipz
   991     0106  290D               	goto	u835
   992     0107  0873               	movf	___llmod@divisor+1,w
   993     0108  0277               	subwf	___llmod@dividend+1,w
   994     0109  1D03               	skipz
   995     010A  290D               	goto	u835
   996     010B  0872               	movf	___llmod@divisor,w
   997     010C  0276               	subwf	___llmod@dividend,w
   998     010D                     u835:
   999     010D  1C03               	skipc
  1000     010E  2910               	goto	u831
  1001     010F  2911               	goto	u830
  1002     0110                     u831:
  1003     0110  291F               	goto	l981
  1004     0111                     u830:
  1005     0111                     l979:
  1006     0111  0872               	movf	___llmod@divisor,w
  1007     0112  02F6               	subwf	___llmod@dividend,f
  1008     0113  0873               	movf	___llmod@divisor+1,w
  1009     0114  1C03               	skipc
  1010     0115  0F73               	incfsz	___llmod@divisor+1,w
  1011     0116  02F7               	subwf	___llmod@dividend+1,f
  1012     0117  0874               	movf	___llmod@divisor+2,w
  1013     0118  1C03               	skipc
  1014     0119  0F74               	incfsz	___llmod@divisor+2,w
  1015     011A  02F8               	subwf	___llmod@dividend+2,f
  1016     011B  0875               	movf	___llmod@divisor+3,w
  1017     011C  1C03               	skipc
  1018     011D  0F75               	incfsz	___llmod@divisor+3,w
  1019     011E  02F9               	subwf	___llmod@dividend+3,f
  1020     011F                     l981:
  1021     011F  3001               	movlw	1
  1022     0120                     u845:
  1023     0120  1003               	clrc
  1024     0121  0CF5               	rrf	___llmod@divisor+3,f
  1025     0122  0CF4               	rrf	___llmod@divisor+2,f
  1026     0123  0CF3               	rrf	___llmod@divisor+1,f
  1027     0124  0CF2               	rrf	___llmod@divisor,f
  1028     0125  3EFF               	addlw	-1
  1029     0126  1D03               	skipz
  1030     0127  2920               	goto	u845
  1031     0128                     l983:
  1032     0128  3001               	movlw	1
  1033     0129  02FB               	subwf	___llmod@counter,f
  1034     012A  1D03               	btfss	3,2
  1035     012B  292D               	goto	u851
  1036     012C  292E               	goto	u850
  1037     012D                     u851:
  1038     012D  28FF               	goto	l977
  1039     012E                     u850:
  1040     012E                     l985:
  1041     012E  0879               	movf	___llmod@dividend+3,w
  1042     012F  00F5               	movwf	?___llmod+3
  1043     0130  0878               	movf	___llmod@dividend+2,w
  1044     0131  00F4               	movwf	?___llmod+2
  1045     0132  0877               	movf	___llmod@dividend+1,w
  1046     0133  00F3               	movwf	?___llmod+1
  1047     0134  0876               	movf	___llmod@dividend,w
  1048     0135  00F2               	movwf	?___llmod
  1049     0136                     l453:
  1050     0136  0008               	return
  1051     0137                     __end_of___llmod:
  1052                           
  1053                           	psect	text4
  1054     0014                     __ptext4:	
  1055 ;; *************** function ___lldiv *****************
  1056 ;; Defined at:
  1057 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  divisor         4    2[COMMON] unsigned long 
  1060 ;;  dividend        4    6[COMMON] unsigned long 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  quotient        4    0[BANK0 ] unsigned long 
  1063 ;;  counter         1    4[BANK0 ] unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  4    2[COMMON] unsigned long 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0, btemp+1
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1073 ;;      Params:         8       0       0       0
  1074 ;;      Locals:         0       5       0       0
  1075 ;;      Temps:          1       0       0       0
  1076 ;;      Totals:         9       5       0       0
  1077 ;;Total ram usage:       14 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 1
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_lcdNumber
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087     0014                     ___lldiv:	
  1088                           ;psect for function ___lldiv
  1089                           
  1090     0014                     l941:	
  1091                           ;incstack = 0
  1092                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1093                           
  1094     0014  3000               	movlw	0
  1095     0015  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0016  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0017  00A3               	movwf	___lldiv@quotient+3
  1098     0018  3000               	movlw	0
  1099     0019  00A2               	movwf	___lldiv@quotient+2
  1100     001A  3000               	movlw	0
  1101     001B  00A1               	movwf	___lldiv@quotient+1
  1102     001C  3000               	movlw	0
  1103     001D  00A0               	movwf	___lldiv@quotient
  1104     001E  0875               	movf	___lldiv@divisor+3,w
  1105     001F  0474               	iorwf	___lldiv@divisor+2,w
  1106     0020  0473               	iorwf	___lldiv@divisor+1,w
  1107     0021  0472               	iorwf	___lldiv@divisor,w
  1108     0022  1903               	skipnz
  1109     0023  2825               	goto	u731
  1110     0024  2826               	goto	u730
  1111     0025                     u731:
  1112     0025  2873               	goto	l963
  1113     0026                     u730:
  1114     0026                     l943:
  1115     0026  01A4               	clrf	___lldiv@counter
  1116     0027  0AA4               	incf	___lldiv@counter,f
  1117     0028  2836               	goto	l949
  1118     0029                     l945:
  1119     0029  3001               	movlw	1
  1120     002A  00FA               	movwf	??___lldiv
  1121     002B                     u745:
  1122     002B  1003               	clrc
  1123     002C  0DF2               	rlf	___lldiv@divisor,f
  1124     002D  0DF3               	rlf	___lldiv@divisor+1,f
  1125     002E  0DF4               	rlf	___lldiv@divisor+2,f
  1126     002F  0DF5               	rlf	___lldiv@divisor+3,f
  1127     0030  0BFA               	decfsz	??___lldiv,f
  1128     0031  282B               	goto	u745
  1129     0032                     l947:
  1130     0032  3001               	movlw	1
  1131     0033  00FF               	movwf	btemp+1
  1132     0034  087F               	movf	btemp+1,w
  1133     0035  07A4               	addwf	___lldiv@counter,f
  1134     0036                     l949:
  1135     0036  1FF5               	btfss	___lldiv@divisor+3,7
  1136     0037  2839               	goto	u751
  1137     0038  283A               	goto	u750
  1138     0039                     u751:
  1139     0039  2829               	goto	l945
  1140     003A                     u750:
  1141     003A                     l951:
  1142     003A  3001               	movlw	1
  1143     003B  00FA               	movwf	??___lldiv
  1144     003C                     u765:
  1145     003C  1003               	clrc
  1146     003D  0DA0               	rlf	___lldiv@quotient,f
  1147     003E  0DA1               	rlf	___lldiv@quotient+1,f
  1148     003F  0DA2               	rlf	___lldiv@quotient+2,f
  1149     0040  0DA3               	rlf	___lldiv@quotient+3,f
  1150     0041  0BFA               	decfsz	??___lldiv,f
  1151     0042  283C               	goto	u765
  1152     0043                     l953:
  1153     0043  0875               	movf	___lldiv@divisor+3,w
  1154     0044  0279               	subwf	___lldiv@dividend+3,w
  1155     0045  1D03               	skipz
  1156     0046  2851               	goto	u775
  1157     0047  0874               	movf	___lldiv@divisor+2,w
  1158     0048  0278               	subwf	___lldiv@dividend+2,w
  1159     0049  1D03               	skipz
  1160     004A  2851               	goto	u775
  1161     004B  0873               	movf	___lldiv@divisor+1,w
  1162     004C  0277               	subwf	___lldiv@dividend+1,w
  1163     004D  1D03               	skipz
  1164     004E  2851               	goto	u775
  1165     004F  0872               	movf	___lldiv@divisor,w
  1166     0050  0276               	subwf	___lldiv@dividend,w
  1167     0051                     u775:
  1168     0051  1C03               	skipc
  1169     0052  2854               	goto	u771
  1170     0053  2855               	goto	u770
  1171     0054                     u771:
  1172     0054  2864               	goto	l959
  1173     0055                     u770:
  1174     0055                     l955:
  1175     0055  0872               	movf	___lldiv@divisor,w
  1176     0056  02F6               	subwf	___lldiv@dividend,f
  1177     0057  0873               	movf	___lldiv@divisor+1,w
  1178     0058  1C03               	skipc
  1179     0059  0F73               	incfsz	___lldiv@divisor+1,w
  1180     005A  02F7               	subwf	___lldiv@dividend+1,f
  1181     005B  0874               	movf	___lldiv@divisor+2,w
  1182     005C  1C03               	skipc
  1183     005D  0F74               	incfsz	___lldiv@divisor+2,w
  1184     005E  02F8               	subwf	___lldiv@dividend+2,f
  1185     005F  0875               	movf	___lldiv@divisor+3,w
  1186     0060  1C03               	skipc
  1187     0061  0F75               	incfsz	___lldiv@divisor+3,w
  1188     0062  02F9               	subwf	___lldiv@dividend+3,f
  1189     0063                     l957:
  1190     0063  1420               	bsf	___lldiv@quotient,0
  1191     0064                     l959:
  1192     0064  3001               	movlw	1
  1193     0065                     u785:
  1194     0065  1003               	clrc
  1195     0066  0CF5               	rrf	___lldiv@divisor+3,f
  1196     0067  0CF4               	rrf	___lldiv@divisor+2,f
  1197     0068  0CF3               	rrf	___lldiv@divisor+1,f
  1198     0069  0CF2               	rrf	___lldiv@divisor,f
  1199     006A  3EFF               	addlw	-1
  1200     006B  1D03               	skipz
  1201     006C  2865               	goto	u785
  1202     006D                     l961:
  1203     006D  3001               	movlw	1
  1204     006E  02A4               	subwf	___lldiv@counter,f
  1205     006F  1D03               	btfss	3,2
  1206     0070  2872               	goto	u791
  1207     0071  2873               	goto	u790
  1208     0072                     u791:
  1209     0072  283A               	goto	l951
  1210     0073                     u790:
  1211     0073                     l963:
  1212     0073  0823               	movf	___lldiv@quotient+3,w
  1213     0074  00F5               	movwf	?___lldiv+3
  1214     0075  0822               	movf	___lldiv@quotient+2,w
  1215     0076  00F4               	movwf	?___lldiv+2
  1216     0077  0821               	movf	___lldiv@quotient+1,w
  1217     0078  00F3               	movwf	?___lldiv+1
  1218     0079  0820               	movf	___lldiv@quotient,w
  1219     007A  00F2               	movwf	?___lldiv
  1220     007B                     l259:
  1221     007B  0008               	return
  1222     007C                     __end_of___lldiv:
  1223                           
  1224                           	psect	text5
  1225     0137                     __ptext5:	
  1226 ;; *************** function _lcdInit *****************
  1227 ;; Defined at:
  1228 ;;		line 40 in file "lcd_4bit.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1242 ;;      Params:         0       0       0       0
  1243 ;;      Locals:         0       0       0       0
  1244 ;;      Temps:          2       0       0       0
  1245 ;;      Totals:         2       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; Hardware stack levels required when called: 3
  1249 ;; This function calls:
  1250 ;;		_clockLcd
  1251 ;;		_lcdCmd
  1252 ;;		_lcdWriteHigh
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258     0137                     _lcdInit:	
  1259                           ;psect for function _lcdInit
  1260                           
  1261     0137                     l989:	
  1262                           ;incstack = 0
  1263                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  1264                           
  1265                           
  1266                           ;lcd_4bit.c: 41:  RA0=0;
  1267     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1268     0138  1303               	bcf	3,6	;RP1=0, select bank0
  1269     0139  1005               	bcf	5,0	;volatile
  1270                           
  1271                           ;lcd_4bit.c: 42:  RA1=0;
  1272     013A  1085               	bcf	5,1	;volatile
  1273     013B                     l991:
  1274                           
  1275                           ;lcd_4bit.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1276     013B  301A               	movlw	26
  1277     013C  00F8               	movwf	??_lcdInit+1
  1278     013D  30F8               	movlw	248
  1279     013E  00F7               	movwf	??_lcdInit
  1280     013F                     u1027:
  1281     013F  0BF7               	decfsz	??_lcdInit,f
  1282     0140  293F               	goto	u1027
  1283     0141  0BF8               	decfsz	??_lcdInit+1,f
  1284     0142  293F               	goto	u1027
  1285     0143  0000               	nop
  1286     0144                     l993:
  1287                           
  1288                           ;lcd_4bit.c: 45:  lcdWriteHigh(0x30);
  1289     0144  3030               	movlw	48
  1290     0145  118A  21D1  118A   	fcall	_lcdWriteHigh
  1291     0148                     l995:
  1292                           
  1293                           ;lcd_4bit.c: 46:  clockLcd();
  1294     0148  118A  22A4  118A   	fcall	_clockLcd
  1295                           
  1296                           ;lcd_4bit.c: 47:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1297     014B  3007               	movlw	7
  1298     014C  00F8               	movwf	??_lcdInit+1
  1299     014D  307D               	movlw	125
  1300     014E  00F7               	movwf	??_lcdInit
  1301     014F                     u1037:
  1302     014F  0BF7               	decfsz	??_lcdInit,f
  1303     0150  294F               	goto	u1037
  1304     0151  0BF8               	decfsz	??_lcdInit+1,f
  1305     0152  294F               	goto	u1037
  1306     0153                     l997:
  1307                           
  1308                           ;lcd_4bit.c: 49:  lcdWriteHigh(0x30);
  1309     0153  3030               	movlw	48
  1310     0154  118A  21D1  118A   	fcall	_lcdWriteHigh
  1311     0157                     l999:
  1312                           
  1313                           ;lcd_4bit.c: 50:  clockLcd();
  1314     0157  118A  22A4  118A   	fcall	_clockLcd
  1315                           
  1316                           ;lcd_4bit.c: 51:  _delay((unsigned long)((150)*(4000000/4000000.0)));
  1317     015A  3031               	movlw	49
  1318     015B  00F7               	movwf	??_lcdInit
  1319     015C                     u1047:
  1320     015C  0BF7               	decfsz	??_lcdInit,f
  1321     015D  295C               	goto	u1047
  1322     015E  295F               	nop2
  1323     015F                     l1001:
  1324                           
  1325                           ;lcd_4bit.c: 53:     lcdWriteHigh(0x30);
  1326     015F  3030               	movlw	48
  1327     0160  118A  21D1  118A   	fcall	_lcdWriteHigh
  1328     0163                     l1003:
  1329                           
  1330                           ;lcd_4bit.c: 54:  clockLcd();
  1331     0163  118A  22A4  118A   	fcall	_clockLcd
  1332     0166                     l1005:
  1333                           
  1334                           ;lcd_4bit.c: 56:  lcdWriteHigh(0x20);
  1335     0166  3020               	movlw	32
  1336     0167  118A  21D1  118A   	fcall	_lcdWriteHigh
  1337     016A                     l1007:
  1338                           
  1339                           ;lcd_4bit.c: 57:  clockLcd();
  1340     016A  118A  22A4  118A   	fcall	_clockLcd
  1341                           
  1342                           ;lcd_4bit.c: 58:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1343     016D  30C7               	movlw	199
  1344     016E  00F7               	movwf	??_lcdInit
  1345     016F                     u1057:
  1346     016F  2970               	nop2
  1347     0170  0BF7               	decfsz	??_lcdInit,f
  1348     0171  296F               	goto	u1057
  1349     0172  2973               	nop2
  1350     0173  2974               	nop2
  1351     0174                     l1009:
  1352                           
  1353                           ;lcd_4bit.c: 60:  lcdCmd(0x28);
  1354     0174  3028               	movlw	40
  1355     0175  118A  225D  118A   	fcall	_lcdCmd
  1356     0178                     l1011:
  1357                           
  1358                           ;lcd_4bit.c: 61:  lcdCmd(0x0c);
  1359     0178  300C               	movlw	12
  1360     0179  118A  225D  118A   	fcall	_lcdCmd
  1361     017C                     l1013:
  1362                           
  1363                           ;lcd_4bit.c: 62:  lcdCmd(0x01);
  1364     017C  3001               	movlw	1
  1365     017D  118A  225D  118A   	fcall	_lcdCmd
  1366     0180                     l1015:
  1367                           
  1368                           ;lcd_4bit.c: 63:  lcdCmd(0x06);
  1369     0180  3006               	movlw	6
  1370     0181  118A  225D  118A   	fcall	_lcdCmd
  1371     0184                     l92:
  1372     0184  0008               	return
  1373     0185                     __end_of_lcdInit:
  1374                           
  1375                           	psect	text6
  1376     02B4                     __ptext6:	
  1377 ;; *************** function _lcdClear *****************
  1378 ;; Defined at:
  1379 ;;		line 37 in file "lcd_4bit.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1393 ;;      Params:         0       0       0       0
  1394 ;;      Locals:         0       0       0       0
  1395 ;;      Temps:          0       0       0       0
  1396 ;;      Totals:         0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 3
  1400 ;; This function calls:
  1401 ;;		_lcdCmd
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407     02B4                     _lcdClear:	
  1408                           ;psect for function _lcdClear
  1409                           
  1410     02B4                     l1017:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  1413                           
  1414                           
  1415                           ;lcd_4bit.c: 38:  lcdCmd(0x01);
  1416     02B4  3001               	movlw	1
  1417     02B5  118A  225D  118A   	fcall	_lcdCmd
  1418     02B8                     l89:
  1419     02B8  0008               	return
  1420     02B9                     __end_of_lcdClear:
  1421                           
  1422                           	psect	text7
  1423     025D                     __ptext7:	
  1424 ;; *************** function _lcdCmd *****************
  1425 ;; Defined at:
  1426 ;;		line 29 in file "lcd_4bit.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  b               1    wreg     unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  b               1    6[COMMON] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1440 ;;      Params:         0       0       0       0
  1441 ;;      Locals:         1       0       0       0
  1442 ;;      Temps:          2       0       0       0
  1443 ;;      Totals:         3       0       0       0
  1444 ;;Total ram usage:        3 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 2
  1447 ;; This function calls:
  1448 ;;		_clockLcd
  1449 ;;		_lcdWriteHigh
  1450 ;;		_lcdWriteLow
  1451 ;; This function is called by:
  1452 ;;		_lcdClear
  1453 ;;		_lcdInit
  1454 ;;		_lcdSet
  1455 ;;		_lcdContro
  1456 ;;		_lcdCustom
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460     025D                     _lcdCmd:	
  1461                           ;psect for function _lcdCmd
  1462                           
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  1466                           ;lcdCmd@b stored from wreg
  1467     025D  00F6               	movwf	lcdCmd@b
  1468     025E                     l935:
  1469                           
  1470                           ;lcd_4bit.c: 30:  RA0=0;
  1471     025E  1283               	bcf	3,5	;RP0=0, select bank0
  1472     025F  1303               	bcf	3,6	;RP1=0, select bank0
  1473     0260  1005               	bcf	5,0	;volatile
  1474     0261                     l937:
  1475                           
  1476                           ;lcd_4bit.c: 31:  lcdWriteHigh(b);
  1477     0261  0876               	movf	lcdCmd@b,w
  1478     0262  118A  21D1  118A   	fcall	_lcdWriteHigh
  1479                           
  1480                           ;lcd_4bit.c: 32:  clockLcd();
  1481     0265  118A  22A4  118A   	fcall	_clockLcd
  1482                           
  1483                           ;lcd_4bit.c: 33:  lcdWriteLow(b);
  1484     0268  0876               	movf	lcdCmd@b,w
  1485     0269  118A  221B  118A   	fcall	_lcdWriteLow
  1486                           
  1487                           ;lcd_4bit.c: 34:  clockLcd();
  1488     026C  118A  22A4  118A   	fcall	_clockLcd
  1489     026F                     l939:
  1490                           
  1491                           ;lcd_4bit.c: 35:  _delay((unsigned long)((2)*(4000000/4000.0)));
  1492     026F  3003               	movlw	3
  1493     0270  00F5               	movwf	??_lcdCmd+1
  1494     0271  3097               	movlw	151
  1495     0272  00F4               	movwf	??_lcdCmd
  1496     0273                     u1067:
  1497     0273  0BF4               	decfsz	??_lcdCmd,f
  1498     0274  2A73               	goto	u1067
  1499     0275  0BF5               	decfsz	??_lcdCmd+1,f
  1500     0276  2A73               	goto	u1067
  1501     0277  2A78               	nop2
  1502     0278                     l86:
  1503     0278  0008               	return
  1504     0279                     __end_of_lcdCmd:
  1505                           
  1506                           	psect	text8
  1507     021B                     __ptext8:	
  1508 ;; *************** function _lcdWriteLow *****************
  1509 ;; Defined at:
  1510 ;;		line 23 in file "lcd_4bit.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  b               1    wreg     unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  b               1    3[COMMON] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1524 ;;      Params:         0       0       0       0
  1525 ;;      Locals:         1       0       0       0
  1526 ;;      Temps:          1       0       0       0
  1527 ;;      Totals:         2       0       0       0
  1528 ;;Total ram usage:        2 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 1
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_lcdCmd
  1535 ;;		_lcdChar
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539     021B                     _lcdWriteLow:	
  1540                           ;psect for function _lcdWriteLow
  1541                           
  1542                           
  1543                           ;incstack = 0
  1544                           ; Regs used in _lcdWriteLow: [wreg+status,2+status,0]
  1545                           ;lcdWriteLow@b stored from wreg
  1546     021B  00F3               	movwf	lcdWriteLow@b
  1547     021C                     l925:
  1548                           
  1549                           ;lcd_4bit.c: 24:  RA7=(b&0x08)>>3;
  1550     021C  0873               	movf	lcdWriteLow@b,w
  1551     021D  00F2               	movwf	??_lcdWriteLow
  1552     021E  3003               	movlw	3
  1553     021F                     u625:
  1554     021F  1003               	clrc
  1555     0220  0CF2               	rrf	??_lcdWriteLow,f
  1556     0221  3EFF               	addlw	-1
  1557     0222  1D03               	skipz
  1558     0223  2A1F               	goto	u625
  1559     0224  1872               	btfsc	??_lcdWriteLow,0
  1560     0225  2A27               	goto	u631
  1561     0226  2A2B               	goto	u630
  1562     0227                     u631:
  1563     0227  1283               	bcf	3,5	;RP0=0, select bank0
  1564     0228  1303               	bcf	3,6	;RP1=0, select bank0
  1565     0229  1785               	bsf	5,7	;volatile
  1566     022A  2A2E               	goto	u644
  1567     022B                     u630:
  1568     022B  1283               	bcf	3,5	;RP0=0, select bank0
  1569     022C  1303               	bcf	3,6	;RP1=0, select bank0
  1570     022D  1385               	bcf	5,7	;volatile
  1571     022E                     u644:
  1572                           
  1573                           ;lcd_4bit.c: 25:  RA6=(b&0x04)>>2;
  1574     022E  0873               	movf	lcdWriteLow@b,w
  1575     022F  00F2               	movwf	??_lcdWriteLow
  1576     0230  3002               	movlw	2
  1577     0231                     u655:
  1578     0231  1003               	clrc
  1579     0232  0CF2               	rrf	??_lcdWriteLow,f
  1580     0233  3EFF               	addlw	-1
  1581     0234  1D03               	skipz
  1582     0235  2A31               	goto	u655
  1583     0236  1872               	btfsc	??_lcdWriteLow,0
  1584     0237  2A39               	goto	u661
  1585     0238  2A3D               	goto	u660
  1586     0239                     u661:
  1587     0239  1283               	bcf	3,5	;RP0=0, select bank0
  1588     023A  1303               	bcf	3,6	;RP1=0, select bank0
  1589     023B  1705               	bsf	5,6	;volatile
  1590     023C  2A40               	goto	u674
  1591     023D                     u660:
  1592     023D  1283               	bcf	3,5	;RP0=0, select bank0
  1593     023E  1303               	bcf	3,6	;RP1=0, select bank0
  1594     023F  1305               	bcf	5,6	;volatile
  1595     0240                     u674:
  1596                           
  1597                           ;lcd_4bit.c: 26:  RA5=(b&0x02)>>1;
  1598     0240  0873               	movf	lcdWriteLow@b,w
  1599     0241  00F2               	movwf	??_lcdWriteLow
  1600     0242  3001               	movlw	1
  1601     0243                     u685:
  1602     0243  1003               	clrc
  1603     0244  0CF2               	rrf	??_lcdWriteLow,f
  1604     0245  3EFF               	addlw	-1
  1605     0246  1D03               	skipz
  1606     0247  2A43               	goto	u685
  1607     0248  1872               	btfsc	??_lcdWriteLow,0
  1608     0249  2A4B               	goto	u691
  1609     024A  2A4F               	goto	u690
  1610     024B                     u691:
  1611     024B  1283               	bcf	3,5	;RP0=0, select bank0
  1612     024C  1303               	bcf	3,6	;RP1=0, select bank0
  1613     024D  1685               	bsf	5,5	;volatile
  1614     024E  2A52               	goto	u704
  1615     024F                     u690:
  1616     024F  1283               	bcf	3,5	;RP0=0, select bank0
  1617     0250  1303               	bcf	3,6	;RP1=0, select bank0
  1618     0251  1285               	bcf	5,5	;volatile
  1619     0252                     u704:
  1620     0252                     l927:
  1621                           
  1622                           ;lcd_4bit.c: 27:  RA4=b&0x01;
  1623     0252  1873               	btfsc	lcdWriteLow@b,0
  1624     0253  2A55               	goto	u711
  1625     0254  2A59               	goto	u710
  1626     0255                     u711:
  1627     0255  1283               	bcf	3,5	;RP0=0, select bank0
  1628     0256  1303               	bcf	3,6	;RP1=0, select bank0
  1629     0257  1605               	bsf	5,4	;volatile
  1630     0258  2A5C               	goto	u724
  1631     0259                     u710:
  1632     0259  1283               	bcf	3,5	;RP0=0, select bank0
  1633     025A  1303               	bcf	3,6	;RP1=0, select bank0
  1634     025B  1205               	bcf	5,4	;volatile
  1635     025C                     u724:
  1636     025C                     l83:
  1637     025C  0008               	return
  1638     025D                     __end_of_lcdWriteLow:
  1639                           
  1640                           	psect	text9
  1641     01D1                     __ptext9:	
  1642 ;; *************** function _lcdWriteHigh *****************
  1643 ;; Defined at:
  1644 ;;		line 17 in file "lcd_4bit.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  b               1    wreg     unsigned char 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  b               1    3[COMMON] unsigned char 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1658 ;;      Params:         0       0       0       0
  1659 ;;      Locals:         1       0       0       0
  1660 ;;      Temps:          1       0       0       0
  1661 ;;      Totals:         2       0       0       0
  1662 ;;Total ram usage:        2 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; Hardware stack levels required when called: 1
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_lcdCmd
  1669 ;;		_lcdInit
  1670 ;;		_lcdChar
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674     01D1                     _lcdWriteHigh:	
  1675                           ;psect for function _lcdWriteHigh
  1676                           
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _lcdWriteHigh: [wreg+status,2+status,0]
  1680                           ;lcdWriteHigh@b stored from wreg
  1681     01D1  00F3               	movwf	lcdWriteHigh@b
  1682     01D2                     l923:
  1683                           
  1684                           ;lcd_4bit.c: 18:  RA7=(b&0x80)>>7;
  1685     01D2  0873               	movf	lcdWriteHigh@b,w
  1686     01D3  00F2               	movwf	??_lcdWriteHigh
  1687     01D4  3007               	movlw	7
  1688     01D5                     u505:
  1689     01D5  1003               	clrc
  1690     01D6  0CF2               	rrf	??_lcdWriteHigh,f
  1691     01D7  3EFF               	addlw	-1
  1692     01D8  1D03               	skipz
  1693     01D9  29D5               	goto	u505
  1694     01DA  1872               	btfsc	??_lcdWriteHigh,0
  1695     01DB  29DD               	goto	u511
  1696     01DC  29E1               	goto	u510
  1697     01DD                     u511:
  1698     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1699     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1700     01DF  1785               	bsf	5,7	;volatile
  1701     01E0  29E4               	goto	u524
  1702     01E1                     u510:
  1703     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1704     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1705     01E3  1385               	bcf	5,7	;volatile
  1706     01E4                     u524:
  1707                           
  1708                           ;lcd_4bit.c: 19:  RA6=(b&0x40)>>6;
  1709     01E4  0873               	movf	lcdWriteHigh@b,w
  1710     01E5  00F2               	movwf	??_lcdWriteHigh
  1711     01E6  3006               	movlw	6
  1712     01E7                     u535:
  1713     01E7  1003               	clrc
  1714     01E8  0CF2               	rrf	??_lcdWriteHigh,f
  1715     01E9  3EFF               	addlw	-1
  1716     01EA  1D03               	skipz
  1717     01EB  29E7               	goto	u535
  1718     01EC  1872               	btfsc	??_lcdWriteHigh,0
  1719     01ED  29EF               	goto	u541
  1720     01EE  29F3               	goto	u540
  1721     01EF                     u541:
  1722     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1723     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1724     01F1  1705               	bsf	5,6	;volatile
  1725     01F2  29F6               	goto	u554
  1726     01F3                     u540:
  1727     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1728     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1729     01F5  1305               	bcf	5,6	;volatile
  1730     01F6                     u554:
  1731                           
  1732                           ;lcd_4bit.c: 20:  RA5=(b&0x20)>>5;
  1733     01F6  0873               	movf	lcdWriteHigh@b,w
  1734     01F7  00F2               	movwf	??_lcdWriteHigh
  1735     01F8  3005               	movlw	5
  1736     01F9                     u565:
  1737     01F9  1003               	clrc
  1738     01FA  0CF2               	rrf	??_lcdWriteHigh,f
  1739     01FB  3EFF               	addlw	-1
  1740     01FC  1D03               	skipz
  1741     01FD  29F9               	goto	u565
  1742     01FE  1872               	btfsc	??_lcdWriteHigh,0
  1743     01FF  2A01               	goto	u571
  1744     0200  2A05               	goto	u570
  1745     0201                     u571:
  1746     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1747     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1748     0203  1685               	bsf	5,5	;volatile
  1749     0204  2A08               	goto	u584
  1750     0205                     u570:
  1751     0205  1283               	bcf	3,5	;RP0=0, select bank0
  1752     0206  1303               	bcf	3,6	;RP1=0, select bank0
  1753     0207  1285               	bcf	5,5	;volatile
  1754     0208                     u584:
  1755                           
  1756                           ;lcd_4bit.c: 21:  RA4=(b&0x10)>>4;
  1757     0208  0873               	movf	lcdWriteHigh@b,w
  1758     0209  00F2               	movwf	??_lcdWriteHigh
  1759     020A  3004               	movlw	4
  1760     020B                     u595:
  1761     020B  1003               	clrc
  1762     020C  0CF2               	rrf	??_lcdWriteHigh,f
  1763     020D  3EFF               	addlw	-1
  1764     020E  1D03               	skipz
  1765     020F  2A0B               	goto	u595
  1766     0210  1872               	btfsc	??_lcdWriteHigh,0
  1767     0211  2A13               	goto	u601
  1768     0212  2A17               	goto	u600
  1769     0213                     u601:
  1770     0213  1283               	bcf	3,5	;RP0=0, select bank0
  1771     0214  1303               	bcf	3,6	;RP1=0, select bank0
  1772     0215  1605               	bsf	5,4	;volatile
  1773     0216  2A1A               	goto	u614
  1774     0217                     u600:
  1775     0217  1283               	bcf	3,5	;RP0=0, select bank0
  1776     0218  1303               	bcf	3,6	;RP1=0, select bank0
  1777     0219  1205               	bcf	5,4	;volatile
  1778     021A                     u614:
  1779     021A                     l80:
  1780     021A  0008               	return
  1781     021B                     __end_of_lcdWriteHigh:
  1782                           
  1783                           	psect	text10
  1784     02A4                     __ptext10:	
  1785 ;; *************** function _clockLcd *****************
  1786 ;; Defined at:
  1787 ;;		line 12 in file "lcd_4bit.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1801 ;;      Params:         0       0       0       0
  1802 ;;      Locals:         0       0       0       0
  1803 ;;      Temps:          2       0       0       0
  1804 ;;      Totals:         2       0       0       0
  1805 ;;Total ram usage:        2 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 1
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_lcdCmd
  1812 ;;		_lcdInit
  1813 ;;		_lcdChar
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817     02A4                     _clockLcd:	
  1818                           ;psect for function _clockLcd
  1819                           
  1820     02A4                     l917:	
  1821                           ;incstack = 0
  1822                           ; Regs used in _clockLcd: [wreg]
  1823                           
  1824                           
  1825                           ;lcd_4bit.c: 13:  RA1=1;
  1826     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1827     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1828     02A6  1485               	bsf	5,1	;volatile
  1829     02A7                     l919:
  1830                           
  1831                           ;lcd_4bit.c: 14:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1832     02A7  3006               	movlw	6
  1833     02A8  00F3               	movwf	??_clockLcd+1
  1834     02A9  3030               	movlw	48
  1835     02AA  00F2               	movwf	??_clockLcd
  1836     02AB                     u1077:
  1837     02AB  0BF2               	decfsz	??_clockLcd,f
  1838     02AC  2AAB               	goto	u1077
  1839     02AD  0BF3               	decfsz	??_clockLcd+1,f
  1840     02AE  2AAB               	goto	u1077
  1841     02AF  0000               	nop
  1842     02B0                     l921:
  1843                           
  1844                           ;lcd_4bit.c: 15:  RA1=0;
  1845     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1846     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1847     02B2  1085               	bcf	5,1	;volatile
  1848     02B3                     l77:
  1849     02B3  0008               	return
  1850     02B4                     __end_of_clockLcd:
  1851                           
  1852                           	psect	text11
  1853     0290                     __ptext11:	
  1854 ;; *************** function _ISR *****************
  1855 ;; Defined at:
  1856 ;;		line 43 in file "main.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1870 ;;      Params:         0       0       0       0
  1871 ;;      Locals:         0       0       0       0
  1872 ;;      Temps:          2       0       0       0
  1873 ;;      Totals:         2       0       0       0
  1874 ;;Total ram usage:        2 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		Interrupt level 1
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883     0290                     _ISR:	
  1884                           ;psect for function _ISR
  1885                           
  1886     0290                     i1l1091:
  1887                           
  1888                           ;main.c: 44:     if(CCP1IF){
  1889     0290  1283               	bcf	3,5	;RP0=0, select bank0
  1890     0291  1303               	bcf	3,6	;RP1=0, select bank0
  1891     0292  1D0C               	btfss	12,2	;volatile
  1892     0293  2A95               	goto	u90_21
  1893     0294  2A96               	goto	u90_20
  1894     0295                     u90_21:
  1895     0295  2A9D               	goto	i1l60
  1896     0296                     u90_20:
  1897     0296                     i1l1093:
  1898                           
  1899                           ;main.c: 45:         i = CCPR1;
  1900     0296  0816               	movf	22,w	;volatile
  1901     0297  00BB               	movwf	_i+1
  1902     0298  0815               	movf	21,w	;volatile
  1903     0299  00BA               	movwf	_i
  1904     029A                     i1l1095:
  1905                           
  1906                           ;main.c: 46:         TMR1 = 0;
  1907     029A  018E               	clrf	14	;volatile
  1908     029B  018F               	clrf	15	;volatile
  1909     029C                     i1l1097:
  1910                           
  1911                           ;main.c: 47:         CCP1IF = 0;
  1912     029C  110C               	bcf	12,2	;volatile
  1913     029D                     i1l60:
  1914     029D  0871               	movf	??_ISR+1,w
  1915     029E  008A               	movwf	10
  1916     029F  0E70               	swapf	??_ISR,w
  1917     02A0  0083               	movwf	3
  1918     02A1  0EFE               	swapf	btemp,f
  1919     02A2  0E7E               	swapf	btemp,w
  1920     02A3  0009               	retfie
  1921     02A4                     __end_of_ISR:
  1922     007E                     btemp	set	126	;btemp
  1923     007E                     wtemp0	set	126
  1924                           
  1925                           	psect	intentry
  1926     0004                     __pintentry:	
  1927                           ;incstack = 0
  1928                           ; Regs used in _ISR: [wreg+status,2]
  1929                           
  1930     0004                     interrupt_function:
  1931     007E                     saved_w	set	btemp
  1932     0004  00FE               	movwf	btemp
  1933     0005  0E03               	swapf	3,w
  1934     0006  00F0               	movwf	??_ISR
  1935     0007  080A               	movf	10,w
  1936     0008  00F1               	movwf	??_ISR+1
  1937     0009  118A  2A90         	ljmp	_ISR
  1938                           
  1939                           	psect	config
  1940                           
  1941                           ;Config register CONFIG1 @ 0x2007
  1942                           ;	Oscillator Selection bits
  1943                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1944                           ;	Watchdog Timer Enable bit
  1945                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1946                           ;	Power-up Timer Enable bit
  1947                           ;	PWRTE = OFF, PWRT disabled
  1948                           ;	RE3/MCLR pin function select bit
  1949                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1950                           ;	Code Protection bit
  1951                           ;	CP = OFF, Program memory code protection is disabled
  1952                           ;	Data Code Protection bit
  1953                           ;	CPD = OFF, Data memory code protection is disabled
  1954                           ;	Brown Out Reset Selection bits
  1955                           ;	BOREN = OFF, BOR disabled
  1956                           ;	Internal External Switchover bit
  1957                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1958                           ;	Fail-Safe Clock Monitor Enabled bit
  1959                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1960                           ;	Low Voltage Programming Enable bit
  1961                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1962                           ;	In-Circuit Debugger Mode bit
  1963                           ;	DEBUG = 0x1, unprogrammed default
  1964     2007                     	org	8199
  1965     2007  20F4               	dw	8436
  1966                           
  1967                           ;Config register CONFIG2 @ 0x2008
  1968                           ;	Brown-out Reset Selection bit
  1969                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1970                           ;	Flash Program Memory Self Write Enable bits
  1971                           ;	WRT = OFF, Write protection off
  1972     2008                     	org	8200
  1973     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     26      28
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _lcdNumber->___llmod
    _lcdChar->_clockLcd
    _lcdChar->_lcdWriteHigh
    _lcdChar->_lcdWriteLow
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_clockLcd
    _lcdCmd->_lcdWriteHigh
    _lcdCmd->_lcdWriteLow

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcdNumber
    _lcdNumber->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1897
                                             23 BANK0      3     3      0
                            _lcdChar
                           _lcdClear
                            _lcdInit
                          _lcdNumber
 ---------------------------------------------------------------------------------
 (1) _lcdNumber                                           18    14      4    1149
                                              5 BANK0     18    14      4
                            ___lldiv
                            ___llmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              2     2      0     220
                                              4 COMMON     2     2      0
                           _clockLcd
                       _lcdWriteHigh
                        _lcdWriteLow
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              2 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     308
                                              7 COMMON     2     2      0
                           _clockLcd
                             _lcdCmd
                       _lcdWriteHigh
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     220
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     220
                                              4 COMMON     3     3      0
                           _clockLcd
                       _lcdWriteHigh
                        _lcdWriteLow
 ---------------------------------------------------------------------------------
 (3) _lcdWriteLow                                          2     2      0      88
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcdWriteHigh                                         2     2      0      88
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _clockLcd                                             2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdChar
     _clockLcd
     _lcdWriteHigh
     _lcdWriteLow
   _lcdClear
     _lcdCmd
       _clockLcd
       _lcdWriteHigh
       _lcdWriteLow
   _lcdInit
     _clockLcd
     _lcdCmd
     _lcdWriteHigh
   _lcdNumber
     ___lldiv
     ___llmod
     _lcdChar

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     1A      1C       3       35.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      28       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      28      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 09:16:48 2024

                      _i 003A                       l80 021A                       l83 025C  
                     l92 0184                       l77 02B3                       l86 0278  
                     l89 02B8                      l101 028F                      l126 00E2  
                    l259 007B                      l453 0136                      l921 02B0  
                    l923 01D2                      l931 027D                      l917 02A4  
                    l925 021C                      l941 0014                      l933 028B  
                    l919 02A7                      l927 0252                      l935 025E  
                    l951 003A                      l943 0026             lcdWriteLow@b 0073  
                    l937 0261                      l961 006D                      l953 0043  
                    l945 0029                      l929 027A                      l939 026F  
                    l955 0055                      l947 0032                      l963 0073  
                    l971 00EE                      l957 0063                      l949 0036  
                    l981 011F                      l973 00F7                      l991 013B  
                    l959 0064                      l983 0128                      l975 00FB  
                    l967 00E3                      l993 0144                      l977 00FF  
                    l969 00EB                      l985 012E                      l995 0148  
                    l979 0111                      _GIE 005F                      l997 0153  
                    l989 0137                      l999 0157                      _RA0 0028  
                    _RA1 0029                      _RA4 002C                      _RA5 002D  
                    _RA6 002E                      _RA7 002F                      u510 01E1  
                    u511 01DD                      u600 0217                      u601 0213  
                    u505 01D5                      u540 01F3                      u524 01E4  
                    _ISR 0290                      u541 01EF                      u614 021A  
                    u710 0259                      u630 022B                      u535 01E7  
                    u711 0255                      u631 0227                      u704 0252  
                    u800 00EB                      u625 021F                      u801 00EA  
                    u570 0205                      u554 01F6                      u730 0026  
                    u571 0201                      u731 0025                      u724 025C  
                    u660 023D                      u644 022E                      u820 00FF  
                    u565 01F9                      u661 0239                      u821 00FE  
                    u750 003A                      u830 0111                      u655 0231  
                    u751 0039                      u831 0110                      u815 00F0  
                    u584 0208                      u745 002B                      u690 024F  
                    u674 0240                      u770 0055                      u850 012E  
                    u595 020B                      u691 024B                      u771 0054  
                    u851 012D                      u835 010D                      u860 00C4  
                    u685 0243                      u765 003C                      u845 0120  
                    u861 00C3                      u790 0073                      u870 00E2  
                    u791 0072                      u775 0051                      u871 00E1  
                    u785 0065                      u997 01BB                      fsr0 0004  
                    indf 0000           ??_lcdWriteHigh 0072                     ?_ISR 0070  
          lcdWriteHigh@b 0073                     l1001 015F                     l1011 0178  
                   l1003 0163                     l1013 017C                     l1005 0166  
                   l1021 0080                     l1015 0180                     l1007 016A  
                   l1031 00C6                     l1023 0099                     l1017 02B4  
                   l1009 0174                     l1033 00D6                     l1025 00B8  
                   l1035 00DC                     l1027 00BC                     l1019 007C  
                   l1051 018B                     l1029 00C4                     l1061 0194  
                   l1053 018E                     l1071 019B                     l1063 0195  
                   l1055 018F                     l1081 01A5                     l1073 019C  
                   l1065 0196                     l1057 0190                     l1049 0185  
                   l1083 01A8                     l1075 019D                     l1067 0197  
                   l1059 0193                     l1085 01B3                     l1077 01A0  
                   l1069 0198                     l1087 01C2                     l1079 01A4  
                   l1089 01C3                     u1007 01C9                     u1017 028D  
                   u1027 013F                     u1037 014F                     u1047 015C  
                   u1057 016F                     u1067 0273                     u1077 02AB  
                   _PEIE 005E                     i1l60 029D                     _TMR1 000E  
                   _main 0185                     btemp 007E                     start 000B  
                  ??_ISR 0070                    ?_main 0070                    _CCPR1 0015  
                  _ANSEL 0188          __end_of___lldiv 007C          __end_of___llmod 0137  
                  _TRISA 0085                    u90_20 0296                    u90_21 0295  
        __end_of_lcdChar 0290          __end_of_lcdInit 0185                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 01D1                   ??_main 0037                   _CCP1M0 00B8  
                 _CCP1M1 00B9                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCP1IE 0462                   _CCP1IF 0062         ___llmod@dividend 0076  
                 i1l1091 0290                   i1l1093 0296                   i1l1095 029A  
                 i1l1097 029C                   _T1SYNC 0082                   _TMR1CS 0081  
                 _TMR1ON 0080         __end_of_lcdClear 02B9         __end_of_clockLcd 02B4  
   __end_of_lcdWriteHigh 021B                ??___lldiv 007A                   _lcdCmd 025D  
              ??___llmod 007A                ??_lcdChar 0074                ??_lcdInit 0077  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
             __pbssBANK0 003A               __pmaintext 0185                  ?_lcdCmd 0070  
             __pintentry 0004                  _T1CKPS0 0084                  _T1CKPS1 0085  
              ?_lcdClear 0070                ?_clockLcd 0070        __end_of_lcdNumber 00E3  
                ___lldiv 0014                  ___llmod 00E3                  _lcdChar 0279  
                _lcdInit 0137                  __ptext1 007C                  __ptext2 0279  
                __ptext3 00E3                  __ptext4 0014                  __ptext5 0137  
                __ptext6 02B4                  __ptext7 025D                  __ptext8 021B  
                __ptext9 01D1                  lcdCmd@b 0076               ??_lcdClear 0077  
             ??_clockLcd 0072             _lcdWriteHigh 01D1     end_of_initialization 0011  
        ___lldiv@divisor 0072          ___lldiv@counter 0024               lcdNumber@i 0035  
             lcdNumber@j 0036               lcdNumber@n 0025            ??_lcdWriteLow 0072  
         __end_of_lcdCmd 0279      start_initialization 000D              __end_of_ISR 02A4  
        ___llmod@divisor 0072          ___llmod@counter 007B      __end_of_lcdWriteLow 025D  
               ??_lcdCmd 0074                ___latbits 0001            __pcstackBANK0 0020  
               ?___lldiv 0072                 ?___llmod 0072                _lcdNumber 007C  
               ?_lcdChar 0070                 ?_lcdInit 0070        interrupt_function 0004  
            _lcdWriteLow 021B               ?_lcdNumber 0025                 _lcdClear 02B4  
               _clockLcd 02A4                 __ptext10 02A4                 __ptext11 0290  
               lcdChar@b 0075              ??_lcdNumber 0029                 intlevel1 0000  
       ___lldiv@dividend 0076             lcdNumber@num 002B         ___lldiv@quotient 0020  
          ?_lcdWriteHigh 0070             ?_lcdWriteLow 0070  
