

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 22:21:25 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F883 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0089                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     008F                     	;# 
    89     0090                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0093                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0095                     	;# 
    97     0096                     	;# 
    98     0097                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009A                     	;# 
   102     009B                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     0105                     	;# 
   108     0107                     	;# 
   109     0108                     	;# 
   110     0109                     	;# 
   111     010C                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     0185                     	;# 
   117     0187                     	;# 
   118     0188                     	;# 
   119     0189                     	;# 
   120     018C                     	;# 
   121     018D                     	;# 
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     008F                     	;# 
   165     0090                     	;# 
   166     0091                     	;# 
   167     0092                     	;# 
   168     0093                     	;# 
   169     0093                     	;# 
   170     0093                     	;# 
   171     0094                     	;# 
   172     0095                     	;# 
   173     0096                     	;# 
   174     0097                     	;# 
   175     0098                     	;# 
   176     0099                     	;# 
   177     009A                     	;# 
   178     009B                     	;# 
   179     009C                     	;# 
   180     009D                     	;# 
   181     009E                     	;# 
   182     009F                     	;# 
   183     0105                     	;# 
   184     0107                     	;# 
   185     0108                     	;# 
   186     0109                     	;# 
   187     010C                     	;# 
   188     010C                     	;# 
   189     010D                     	;# 
   190     010E                     	;# 
   191     010F                     	;# 
   192     0185                     	;# 
   193     0187                     	;# 
   194     0188                     	;# 
   195     0189                     	;# 
   196     018C                     	;# 
   197     018D                     	;# 
   198     0039                     _RC1	set	57
   199     0059                     _INTF	set	89
   200     0038                     _RC0	set	56
   201     005C                     _INTE	set	92
   202     005F                     _GIE	set	95
   203     040F                     _nRBPU	set	1039
   204     0430                     _TRISB0	set	1072
   205     0439                     _TRISC1	set	1081
   206     0438                     _TRISC0	set	1080
   207     040E                     _INTEDG	set	1038
   208     0C4C                     _ANS12	set	3148
   209                           
   210                           	psect	cinit
   211     000D                     start_initialization:	
   212                           ; #config settings
   213                           
   214     000D                     __initialization:
   215     000D                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218     000D                     __end_of__initialization:
   219     000D  0183               	clrf	3
   220     000E  118A  2810         	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	cstackCOMMON
   223     0070                     __pcstackCOMMON:
   224     0070                     ?_main:
   225     0070                     ?_ISR:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0070                     ??_ISR:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 1 bytes @ 0x0
   233     0070                     	ds	2
   234     0072                     ??_main:
   235                           
   236                           ; 1 bytes @ 0x2
   237     0072                     	ds	3
   238                           
   239                           	psect	maintext
   240     0010                     __pmaintext:	
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 9 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg
   255 ;; Tracked objects:
   256 ;;		On entry : B00/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   260 ;;      Params:         0       0       0       0
   261 ;;      Locals:         0       0       0       0
   262 ;;      Temps:          3       0       0       0
   263 ;;      Totals:         3       0       0       0
   264 ;;Total ram usage:        3 bytes
   265 ;; Hardware stack levels required when called: 1
   266 ;; This function calls:
   267 ;;		Nothing
   268 ;; This function is called by:
   269 ;;		Startup code after reset
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273     0010                     _main:	
   274                           ;psect for function _main
   275                           
   276     0010                     l582:	
   277                           ;incstack = 0
   278                           ; Regs used in _main: [wreg]
   279                           
   280                           
   281                           ;main.c: 11:     GIE = 1;
   282     0010  178B               	bsf	11,7	;volatile
   283                           
   284                           ;main.c: 12:     INTE = 1;
   285     0011  160B               	bsf	11,4	;volatile
   286                           
   287                           ;main.c: 13:     INTEDG = 0;
   288     0012  1683               	bsf	3,5	;RP0=1, select bank1
   289     0013  1303               	bcf	3,6	;RP1=0, select bank1
   290     0014  1301               	bcf	1,6	;volatile
   291                           
   292                           ;main.c: 15:     TRISC0 = 0;
   293     0015  1007               	bcf	7,0	;volatile
   294                           
   295                           ;main.c: 16:     TRISC1 = 0;
   296     0016  1087               	bcf	7,1	;volatile
   297                           
   298                           ;main.c: 17:     TRISB0 = 1;
   299     0017  1406               	bsf	6,0	;volatile
   300                           
   301                           ;main.c: 18:     ANS12 = 0;
   302     0018  1683               	bsf	3,5	;RP0=1, select bank3
   303     0019  1703               	bsf	3,6	;RP1=1, select bank3
   304     001A  1209               	bcf	9,4	;volatile
   305                           
   306                           ;main.c: 19:     nRBPU = 0;
   307     001B  1683               	bsf	3,5	;RP0=1, select bank1
   308     001C  1303               	bcf	3,6	;RP1=0, select bank1
   309     001D  1381               	bcf	1,7	;volatile
   310     001E                     l29:	
   311                           ;main.c: 20:     while(1){
   312                           
   313                           
   314                           ;main.c: 22:         RC0 = 1;
   315     001E  1283               	bcf	3,5	;RP0=0, select bank0
   316     001F  1303               	bcf	3,6	;RP1=0, select bank0
   317     0020  1407               	bsf	7,0	;volatile
   318     0021                     l584:
   319                           
   320                           ;main.c: 23:         _delay((unsigned long)((200)*(4000000/4000.0)));
   321     0021  3002               	movlw	2
   322     0022  00F4               	movwf	??_main+2
   323     0023  3004               	movlw	4
   324     0024  00F3               	movwf	??_main+1
   325     0025  30BA               	movlw	186
   326     0026  00F2               	movwf	??_main
   327     0027                     u27:
   328     0027  0BF2               	decfsz	??_main,f
   329     0028  2827               	goto	u27
   330     0029  0BF3               	decfsz	??_main+1,f
   331     002A  2827               	goto	u27
   332     002B  0BF4               	decfsz	??_main+2,f
   333     002C  2827               	goto	u27
   334     002D  0000               	nop
   335     002E                     l586:
   336                           
   337                           ;main.c: 24:         RC0 = 0;
   338     002E  1283               	bcf	3,5	;RP0=0, select bank0
   339     002F  1303               	bcf	3,6	;RP1=0, select bank0
   340     0030  1007               	bcf	7,0	;volatile
   341                           
   342                           ;main.c: 25:         _delay((unsigned long)((200)*(4000000/4000.0)));
   343     0031  3002               	movlw	2
   344     0032  00F4               	movwf	??_main+2
   345     0033  3004               	movlw	4
   346     0034  00F3               	movwf	??_main+1
   347     0035  30BA               	movlw	186
   348     0036  00F2               	movwf	??_main
   349     0037                     u37:
   350     0037  0BF2               	decfsz	??_main,f
   351     0038  2837               	goto	u37
   352     0039  0BF3               	decfsz	??_main+1,f
   353     003A  2837               	goto	u37
   354     003B  0BF4               	decfsz	??_main+2,f
   355     003C  2837               	goto	u37
   356     003D  0000               	nop
   357     003E  281E               	goto	l29
   358     003F  118A  280B         	ljmp	start
   359     0041                     __end_of_main:
   360                           
   361                           	psect	text1
   362     0041                     __ptext1:	
   363 ;; *************** function _ISR *****************
   364 ;; Defined at:
   365 ;;		line 30 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   379 ;;      Params:         0       0       0       0
   380 ;;      Locals:         0       0       0       0
   381 ;;      Temps:          2       0       0       0
   382 ;;      Totals:         2       0       0       0
   383 ;;Total ram usage:        2 bytes
   384 ;; Hardware stack levels used: 1
   385 ;; This function calls:
   386 ;;		Nothing
   387 ;; This function is called by:
   388 ;;		Interrupt level 1
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392     0041                     _ISR:	
   393                           ;psect for function _ISR
   394                           
   395     0041                     i1l588:
   396                           
   397                           ;main.c: 31:     if(INTF){
   398     0041  1C8B               	btfss	11,1	;volatile
   399     0042  2844               	goto	u1_21
   400     0043  2845               	goto	u1_20
   401     0044                     u1_21:
   402     0044  284A               	goto	i1l38
   403     0045                     u1_20:
   404     0045                     i1l590:
   405                           
   406                           ;main.c: 32:         RC1 = !RC1;
   407     0045  3002               	movlw	2
   408     0046  1283               	bcf	3,5	;RP0=0, select bank0
   409     0047  1303               	bcf	3,6	;RP1=0, select bank0
   410     0048  0687               	xorwf	7,f
   411     0049                     i1l592:
   412                           
   413                           ;main.c: 33:         INTF = 0;
   414     0049  108B               	bcf	11,1	;volatile
   415     004A                     i1l38:
   416     004A  0871               	movf	??_ISR+1,w
   417     004B  008A               	movwf	10
   418     004C  0E70               	swapf	??_ISR,w
   419     004D  0083               	movwf	3
   420     004E  0EFE               	swapf	btemp,f
   421     004F  0E7E               	swapf	btemp,w
   422     0050  0009               	retfie
   423     0051                     __end_of_ISR:
   424     007E                     btemp	set	126	;btemp
   425     007E                     wtemp0	set	126
   426                           
   427                           	psect	intentry
   428     0004                     __pintentry:	
   429                           ;incstack = 0
   430                           ; Regs used in _ISR: [wreg]
   431                           
   432     0004                     interrupt_function:
   433     007E                     saved_w	set	btemp
   434     0004  00FE               	movwf	btemp
   435     0005  0E03               	swapf	3,w
   436     0006  00F0               	movwf	??_ISR
   437     0007  080A               	movf	10,w
   438     0008  00F1               	movwf	??_ISR+1
   439     0009  118A  2841         	ljmp	_ISR
   440                           
   441                           	psect	config
   442                           
   443                           ;Config register CONFIG1 @ 0x2007
   444                           ;	Oscillator Selection bits
   445                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   446                           ;	Watchdog Timer Enable bit
   447                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   448                           ;	Power-up Timer Enable bit
   449                           ;	PWRTE = ON, PWRT enabled
   450                           ;	RE3/MCLR pin function select bit
   451                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   452                           ;	Code Protection bit
   453                           ;	CP = OFF, Program memory code protection is disabled
   454                           ;	Data Code Protection bit
   455                           ;	CPD = OFF, Data memory code protection is disabled
   456                           ;	Brown Out Reset Selection bits
   457                           ;	BOREN = ON, BOR enabled
   458                           ;	Internal External Switchover bit
   459                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   460                           ;	Fail-Safe Clock Monitor Enabled bit
   461                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   462                           ;	Low Voltage Programming Enable bit
   463                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   464                           ;	In-Circuit Debugger Mode bit
   465                           ;	DEBUG = 0x1, unprogrammed default
   466     2007                     	org	8199
   467     2007  23E4               	dw	9188
   468                           
   469                           ;Config register CONFIG2 @ 0x2008
   470                           ;	Brown-out Reset Selection bit
   471                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   472                           ;	Flash Program Memory Self Write Enable bits
   473                           ;	WRT = OFF, Write protection off
   474     2008                     	org	8200
   475     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 22:21:25 2024

                     l29 001E                       u27 0027                       u37 0037  
                    l582 0010                      l584 0021                      l586 002E  
                    _GIE 005F                      _RC0 0038                      _RC1 0039  
                    _ISR 0041                     ?_ISR 0070                     _INTE 005C  
                   _INTF 0059                     i1l38 004A                     u1_20 0045  
                   u1_21 0044                     _main 0010                     btemp 007E  
                   start 000B                    ??_ISR 0070                    ?_main 0070  
                  _ANS12 0C4C                    i1l590 0045                    i1l592 0049  
                  i1l588 0041                    _nRBPU 040F                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 0041                   ??_main 0072                   _INTEDG 040E  
                 _TRISB0 0430                   _TRISC0 0438                   _TRISC1 0439  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0070  
             __pmaintext 0010               __pintentry 0004                  __ptext1 0041  
   end_of_initialization 000D      start_initialization 000D              __end_of_ISR 0051  
              ___latbits 0001        interrupt_function 0004                 intlevel1 0000  
