

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 26 21:43:34 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F883 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0000                     	;# 
   210     0001                     	;# 
   211     0002                     	;# 
   212     0003                     	;# 
   213     0004                     	;# 
   214     0005                     	;# 
   215     0006                     	;# 
   216     0007                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0089                     	;# 
   248     008C                     	;# 
   249     008D                     	;# 
   250     008E                     	;# 
   251     008F                     	;# 
   252     0090                     	;# 
   253     0091                     	;# 
   254     0092                     	;# 
   255     0093                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0094                     	;# 
   259     0095                     	;# 
   260     0096                     	;# 
   261     0097                     	;# 
   262     0098                     	;# 
   263     0099                     	;# 
   264     009A                     	;# 
   265     009B                     	;# 
   266     009C                     	;# 
   267     009D                     	;# 
   268     009E                     	;# 
   269     009F                     	;# 
   270     0105                     	;# 
   271     0107                     	;# 
   272     0108                     	;# 
   273     0109                     	;# 
   274     010C                     	;# 
   275     010C                     	;# 
   276     010D                     	;# 
   277     010E                     	;# 
   278     010F                     	;# 
   279     0185                     	;# 
   280     0187                     	;# 
   281     0188                     	;# 
   282     0189                     	;# 
   283     018C                     	;# 
   284     018D                     	;# 
   285     000E                     _TMR1	set	14
   286     003A                     _RC2	set	58
   287     003C                     _RC4	set	60
   288     003D                     _RC5	set	61
   289     003E                     _RC6	set	62
   290     003F                     _RC7	set	63
   291     003B                     _RC3	set	59
   292     0080                     _TMR1ON	set	128
   293     0082                     _T1SYNC	set	130
   294     0081                     _TMR1CS	set	129
   295     043F                     _TRISC7	set	1087
   296     043E                     _TRISC6	set	1086
   297     043D                     _TRISC5	set	1085
   298     043C                     _TRISC4	set	1084
   299     043B                     _TRISC3	set	1083
   300     043A                     _TRISC2	set	1082
   301                           
   302                           	psect	strings
   303     0002                     __pstrings:
   304     0002                     stringtab:
   305     0002                     __stringtab:
   306     0002                     stringcode:	
   307                           ;	String table - string pointers are 1 byte each
   308                           
   309     0002                     stringdir:
   310     0002  3000               	movlw	high stringdir
   311     0003  008A               	movwf	10
   312     0004  0804               	movf	4,w
   313     0005  0A84               	incf	4,f
   314     0006  0782               	addwf	2,f
   315     0007                     __stringbase:
   316     0007  3400               	retlw	0
   317     0008                     __end_of__stringtab:
   318     0008                     STR_1:
   319     0008  344D               	retlw	77	;'M'
   320     0009  3469               	retlw	105	;'i'
   321     000A  346E               	retlw	110	;'n'
   322     000B  3468               	retlw	104	;'h'
   323     000C  3420               	retlw	32	;' '
   324     000D  3456               	retlw	86	;'V'
   325     000E  3475               	retlw	117	;'u'
   326     000F  3400               	retlw	0
   327                           
   328                           	psect	cinit
   329     07FD                     start_initialization:	
   330                           ; #config settings
   331                           
   332     07FD                     __initialization:
   333     07FD                     end_of_initialization:	
   334                           ;End of C runtime variable initialization code
   335                           
   336     07FD                     __end_of__initialization:
   337     07FD  0183               	clrf	3
   338     07FE  118A  2DC7         	ljmp	_main	;jump to C main() function
   339                           
   340                           	psect	cstackCOMMON
   341     0070                     __pcstackCOMMON:
   342     0070                     ?_lcdInit:
   343     0070                     ?_lcdText:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ?_main:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0070                     ?_clockLcd:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0070                     ??_clockLcd:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0070                     ?_lcdWriteHigh:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ??_lcdWriteHigh:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     ?_lcdWriteLow:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     ??_lcdWriteLow:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ?_lcdCmd:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ?_lcdChar:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0070                     ?___lldiv:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0070                     ?___llmod:	
   377                           ; 4 bytes @ 0x0
   378                           
   379     0070                     ___lldiv@divisor:	
   380                           ; 4 bytes @ 0x0
   381                           
   382     0070                     ___llmod@divisor:	
   383                           ; 4 bytes @ 0x0
   384                           
   385                           
   386                           ; 4 bytes @ 0x0
   387     0070                     	ds	1
   388     0071                     lcdWriteHigh@b:
   389     0071                     lcdWriteLow@b:	
   390                           ; 1 bytes @ 0x1
   391                           
   392                           
   393                           ; 1 bytes @ 0x1
   394     0071                     	ds	1
   395     0072                     ??_lcdCmd:
   396     0072                     ??_lcdChar:	
   397                           ; 1 bytes @ 0x2
   398                           
   399                           
   400                           ; 1 bytes @ 0x2
   401     0072                     	ds	1
   402     0073                     lcdChar@b:
   403                           
   404                           ; 1 bytes @ 0x3
   405     0073                     	ds	1
   406     0074                     ??_lcdText:
   407     0074                     lcdCmd@b:	
   408                           ; 1 bytes @ 0x4
   409                           
   410     0074                     lcdText@str:	
   411                           ; 1 bytes @ 0x4
   412                           
   413     0074                     ___lldiv@dividend:	
   414                           ; 1 bytes @ 0x4
   415                           
   416     0074                     ___llmod@dividend:	
   417                           ; 4 bytes @ 0x4
   418                           
   419                           
   420                           ; 4 bytes @ 0x4
   421     0074                     	ds	1
   422     0075                     ??_lcdInit:
   423     0075                     ?_lcdSet:	
   424                           ; 1 bytes @ 0x5
   425                           
   426     0075                     lcdSet@y:	
   427                           ; 1 bytes @ 0x5
   428                           
   429     0075                     lcdText@i:	
   430                           ; 1 bytes @ 0x5
   431                           
   432                           
   433                           ; 1 bytes @ 0x5
   434     0075                     	ds	1
   435     0076                     ??_lcdSet:
   436     0076                     lcdSet@add:	
   437                           ; 1 bytes @ 0x6
   438                           
   439                           
   440                           ; 1 bytes @ 0x6
   441     0076                     	ds	1
   442     0077                     lcdSet@x:
   443                           
   444                           ; 1 bytes @ 0x7
   445     0077                     	ds	1
   446     0078                     ??___lldiv:
   447     0078                     ??___llmod:	
   448                           ; 1 bytes @ 0x8
   449                           
   450                           
   451                           ; 1 bytes @ 0x8
   452     0078                     	ds	1
   453     0079                     ___llmod@counter:
   454     0079                     ___lldiv@quotient:	
   455                           ; 1 bytes @ 0x9
   456                           
   457                           
   458                           ; 4 bytes @ 0x9
   459     0079                     	ds	4
   460     007D                     ___lldiv@counter:
   461                           
   462                           ; 1 bytes @ 0xD
   463     007D                     	ds	1
   464     007E                     ??_main:
   465                           
   466                           	psect	cstackBANK0
   467     0020                     __pcstackBANK0:	
   468                           ; 1 bytes @ 0xE
   469                           
   470     0020                     ?_lcdNumber:
   471     0020                     lcdNumber@n:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 4 bytes @ 0x0
   476     0020                     	ds	4
   477     0024                     ??_lcdNumber:
   478                           
   479                           ; 1 bytes @ 0x4
   480     0024                     	ds	2
   481     0026                     lcdNumber@num:
   482                           
   483                           ; 10 bytes @ 0x6
   484     0026                     	ds	10
   485     0030                     lcdNumber@i:
   486                           
   487                           ; 1 bytes @ 0x10
   488     0030                     	ds	1
   489     0031                     lcdNumber@j:
   490                           
   491                           ; 1 bytes @ 0x11
   492     0031                     	ds	1
   493     0032                     main@i:
   494                           
   495                           ; 2 bytes @ 0x12
   496     0032                     	ds	2
   497                           
   498                           	psect	maintext
   499     05C7                     __pmaintext:	
   500 ;;
   501 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   502 ;;
   503 ;; *************** function _main *****************
   504 ;; Defined at:
   505 ;;		line 11 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  i               2   18[BANK0 ] unsigned short 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : B00/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   519 ;;      Params:         0       0       0       0
   520 ;;      Locals:         0       2       0       0
   521 ;;      Temps:          0       0       0       0
   522 ;;      Totals:         0       2       0       0
   523 ;;Total ram usage:        2 bytes
   524 ;; Hardware stack levels required when called: 3
   525 ;; This function calls:
   526 ;;		_lcdInit
   527 ;;		_lcdNumber
   528 ;;		_lcdSet
   529 ;;		_lcdText
   530 ;; This function is called by:
   531 ;;		Startup code after reset
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535     05C7                     _main:	
   536                           ;psect for function _main
   537                           
   538     05C7                     l1014:	
   539                           ;incstack = 0
   540                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   541                           
   542                           
   543                           ;main.c: 12:     uint16_t i;;main.c: 13:     TMR1CS = 1;
   544     05C7  1283               	bcf	3,5	;RP0=0, select bank0
   545     05C8  1303               	bcf	3,6	;RP1=0, select bank0
   546     05C9  1490               	bsf	16,1	;volatile
   547                           
   548                           ;main.c: 14:     T1SYNC = 1;
   549     05CA  1510               	bsf	16,2	;volatile
   550     05CB                     l1016:
   551                           
   552                           ;main.c: 15:     TMR1 = 0;
   553     05CB  018E               	clrf	14	;volatile
   554     05CC  018F               	clrf	15	;volatile
   555     05CD                     l1018:
   556                           
   557                           ;main.c: 16:     TMR1ON = 1;
   558     05CD  1410               	bsf	16,0	;volatile
   559     05CE                     l1020:
   560                           
   561                           ;main.c: 18:     TRISC2 = 0;
   562     05CE  1683               	bsf	3,5	;RP0=1, select bank1
   563     05CF  1303               	bcf	3,6	;RP1=0, select bank1
   564     05D0  1107               	bcf	7,2	;volatile
   565     05D1                     l1022:
   566                           
   567                           ;main.c: 19:     TRISC3 = 0;
   568     05D1  1187               	bcf	7,3	;volatile
   569     05D2                     l1024:
   570                           
   571                           ;main.c: 20:     TRISC4 = 0;
   572     05D2  1207               	bcf	7,4	;volatile
   573     05D3                     l1026:
   574                           
   575                           ;main.c: 21:     TRISC5 = 0;
   576     05D3  1287               	bcf	7,5	;volatile
   577     05D4                     l1028:
   578                           
   579                           ;main.c: 22:     TRISC6 = 0;
   580     05D4  1307               	bcf	7,6	;volatile
   581     05D5                     l1030:
   582                           
   583                           ;main.c: 23:     TRISC7 = 0;
   584     05D5  1387               	bcf	7,7	;volatile
   585     05D6                     l1032:
   586                           
   587                           ;main.c: 26:     lcdInit();
   588     05D6  118A  268E  118A   	fcall	_lcdInit
   589     05D9                     l1034:
   590                           
   591                           ;main.c: 27:     lcdText("Minh Vu");
   592     05D9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   593     05DA  118A  25AB  118A   	fcall	_lcdText
   594     05DD                     l1036:
   595                           
   596                           ;main.c: 30:         i = TMR1;
   597     05DD  1283               	bcf	3,5	;RP0=0, select bank0
   598     05DE  1303               	bcf	3,6	;RP1=0, select bank0
   599     05DF  080F               	movf	15,w	;volatile
   600     05E0  00B3               	movwf	main@i+1
   601     05E1  080E               	movf	14,w	;volatile
   602     05E2  00B2               	movwf	main@i
   603     05E3                     l1038:
   604                           
   605                           ;main.c: 31:         if(i==250){
   606     05E3  30FA               	movlw	250
   607     05E4  0632               	xorwf	main@i,w
   608     05E5  0433               	iorwf	main@i+1,w
   609     05E6  1D03               	btfss	3,2
   610     05E7  2DE9               	goto	u911
   611     05E8  2DEA               	goto	u910
   612     05E9                     u911:
   613     05E9  2DEE               	goto	l1042
   614     05EA                     u910:
   615     05EA                     l1040:
   616                           
   617                           ;main.c: 32:             i=0;
   618     05EA  01B2               	clrf	main@i
   619     05EB  01B3               	clrf	main@i+1
   620                           
   621                           ;main.c: 33:             TMR1=0;
   622     05EC  018E               	clrf	14	;volatile
   623     05ED  018F               	clrf	15	;volatile
   624     05EE                     l1042:
   625                           
   626                           ;main.c: 35:         lcdSet(2,1);
   627     05EE  01F5               	clrf	lcdSet@y
   628     05EF  0AF5               	incf	lcdSet@y,f
   629     05F0  3002               	movlw	2
   630     05F1  118A  2574  118A   	fcall	_lcdSet
   631     05F4                     l1044:
   632                           
   633                           ;main.c: 36:         lcdNumber(i);
   634     05F4  1283               	bcf	3,5	;RP0=0, select bank0
   635     05F5  1303               	bcf	3,6	;RP1=0, select bank0
   636     05F6  0832               	movf	main@i,w
   637     05F7  00A0               	movwf	lcdNumber@n
   638     05F8  0833               	movf	main@i+1,w
   639     05F9  00A1               	movwf	lcdNumber@n+1
   640     05FA  01A2               	clrf	lcdNumber@n+2
   641     05FB  01A3               	clrf	lcdNumber@n+3
   642     05FC  118A  2796  118A   	fcall	_lcdNumber
   643     05FF  2DDD               	goto	l1036
   644     0600  118A  2800         	ljmp	start
   645     0602                     __end_of_main:
   646                           
   647                           	psect	text1
   648     05AB                     __ptext1:	
   649 ;; *************** function _lcdText *****************
   650 ;; Defined at:
   651 ;;		line 82 in file "lcd_4bit.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  str             1    wreg     PTR unsigned char 
   654 ;;		 -> STR_1(8), 
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  str             1    4[COMMON] PTR unsigned char 
   657 ;;		 -> STR_1(8), 
   658 ;;  i               1    5[COMMON] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   668 ;;      Params:         0       0       0       0
   669 ;;      Locals:         2       0       0       0
   670 ;;      Temps:          0       0       0       0
   671 ;;      Totals:         2       0       0       0
   672 ;;Total ram usage:        2 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 2
   675 ;; This function calls:
   676 ;;		_lcdChar
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682     05AB                     _lcdText:	
   683                           ;psect for function _lcdText
   684                           
   685                           
   686                           ;incstack = 0
   687                           ; Regs used in _lcdText: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   688                           ;lcdText@str stored from wreg
   689     05AB  00F4               	movwf	lcdText@str
   690     05AC                     l976:
   691                           
   692                           ;lcd_4bit.c: 83:  uint8_t i;;lcd_4bit.c: 84:  for(i=0;str[i]!=0;i++){
   693     05AC  01F5               	clrf	lcdText@i
   694     05AD  2DBB               	goto	l982
   695     05AE                     l978:
   696                           
   697                           ;lcd_4bit.c: 85:    lcdChar(str[i]);
   698     05AE  0875               	movf	lcdText@i,w
   699     05AF  0774               	addwf	lcdText@str,w
   700     05B0  0084               	movwf	4
   701     05B1  118A  2002  118A   	fcall	stringdir
   702     05B4  118A  255D  118A   	fcall	_lcdChar
   703     05B7                     l980:
   704                           
   705                           ;lcd_4bit.c: 86:  }
   706     05B7  3001               	movlw	1
   707     05B8  00FF               	movwf	btemp+1
   708     05B9  087F               	movf	btemp+1,w
   709     05BA  07F5               	addwf	lcdText@i,f
   710     05BB                     l982:
   711     05BB  0875               	movf	lcdText@i,w
   712     05BC  0774               	addwf	lcdText@str,w
   713     05BD  0084               	movwf	4
   714     05BE  118A  2002  118A   	fcall	stringdir
   715     05C1  3A00               	xorlw	0
   716     05C2  1D03               	skipz
   717     05C3  2DC5               	goto	u861
   718     05C4  2DC6               	goto	u860
   719     05C5                     u861:
   720     05C5  2DAE               	goto	l978
   721     05C6                     u860:
   722     05C6                     l84:
   723     05C6  0008               	return
   724     05C7                     __end_of_lcdText:
   725                           
   726                           	psect	text2
   727     0574                     __ptext2:	
   728 ;; *************** function _lcdSet *****************
   729 ;; Defined at:
   730 ;;		line 65 in file "lcd_4bit.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  x               1    wreg     unsigned char 
   733 ;;  y               1    5[COMMON] unsigned char 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  x               1    7[COMMON] unsigned char 
   736 ;;  add             1    6[COMMON] unsigned char 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   746 ;;      Params:         1       0       0       0
   747 ;;      Locals:         2       0       0       0
   748 ;;      Temps:          0       0       0       0
   749 ;;      Totals:         3       0       0       0
   750 ;;Total ram usage:        3 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 2
   753 ;; This function calls:
   754 ;;		_lcdCmd
   755 ;; This function is called by:
   756 ;;		_main
   757 ;;		_lcdCustom
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761     0574                     _lcdSet:	
   762                           ;psect for function _lcdSet
   763                           
   764                           
   765                           ;incstack = 0
   766                           ; Regs used in _lcdSet: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   767                           ;lcdSet@x stored from wreg
   768     0574  00F7               	movwf	lcdSet@x
   769     0575                     l984:
   770                           
   771                           ;lcd_4bit.c: 66:  uint8_t add;;lcd_4bit.c: 67:  if(x==1)
   772     0575  0377               	decf	lcdSet@x,w
   773     0576  1D03               	btfss	3,2
   774     0577  2D79               	goto	u871
   775     0578  2D7A               	goto	u870
   776     0579                     u871:
   777     0579  2D7D               	goto	l988
   778     057A                     u870:
   779     057A                     l986:
   780                           
   781                           ;lcd_4bit.c: 68:   add=0x80;
   782     057A  3080               	movlw	128
   783     057B  00F6               	movwf	lcdSet@add
   784     057C  2D85               	goto	l992
   785     057D                     l988:
   786     057D  3002               	movlw	2
   787     057E  0677               	xorwf	lcdSet@x,w
   788     057F  1D03               	btfss	3,2
   789     0580  2D82               	goto	u881
   790     0581  2D83               	goto	u880
   791     0582                     u881:
   792     0582  2D85               	goto	l992
   793     0583                     u880:
   794     0583                     l990:
   795                           
   796                           ;lcd_4bit.c: 70:   add=0xc0;
   797     0583  30C0               	movlw	192
   798     0584  00F6               	movwf	lcdSet@add
   799     0585                     l992:
   800                           
   801                           ;lcd_4bit.c: 71:  add+=y-1;
   802     0585  0875               	movf	lcdSet@y,w
   803     0586  3EFF               	addlw	255
   804     0587  00FF               	movwf	btemp+1
   805     0588  087F               	movf	btemp+1,w
   806     0589  07F6               	addwf	lcdSet@add,f
   807     058A                     l994:
   808                           
   809                           ;lcd_4bit.c: 72:  lcdCmd(add);
   810     058A  0876               	movf	lcdSet@add,w
   811     058B  118A  258F  118A   	fcall	_lcdCmd
   812     058E                     l75:
   813     058E  0008               	return
   814     058F                     __end_of_lcdSet:
   815                           
   816                           	psect	text3
   817     0796                     __ptext3:	
   818 ;; *************** function _lcdNumber *****************
   819 ;; Defined at:
   820 ;;		line 104 in file "lcd_4bit.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  n               4    0[BANK0 ] unsigned long 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  num            10    6[BANK0 ] unsigned char [10]
   825 ;;  j               1   17[BANK0 ] unsigned char 
   826 ;;  i               1   16[BANK0 ] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   836 ;;      Params:         0       4       0       0
   837 ;;      Locals:         0      12       0       0
   838 ;;      Temps:          0       2       0       0
   839 ;;      Totals:         0      18       0       0
   840 ;;Total ram usage:       18 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; Hardware stack levels required when called: 2
   843 ;; This function calls:
   844 ;;		___lldiv
   845 ;;		___llmod
   846 ;;		_lcdChar
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852     0796                     _lcdNumber:	
   853                           ;psect for function _lcdNumber
   854                           
   855     0796                     l996:	
   856                           ;incstack = 0
   857                           ; Regs used in _lcdNumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   858                           
   859                           
   860                           ;lcd_4bit.c: 105:  uint8_t i,num[10],j=0;
   861     0796  1283               	bcf	3,5	;RP0=0, select bank0
   862     0797  1303               	bcf	3,6	;RP1=0, select bank0
   863     0798  01B1               	clrf	lcdNumber@j
   864                           
   865                           ;lcd_4bit.c: 106:  while(n){
   866     0799  2FD6               	goto	l1004
   867     079A                     l998:
   868                           
   869                           ;lcd_4bit.c: 107:    num[j]=n%10;
   870     079A  0831               	movf	lcdNumber@j,w
   871     079B  3E26               	addlw	(low (lcdNumber@num| 0))& (0+255)
   872     079C  0084               	movwf	4
   873     079D  3000               	movlw	0
   874     079E  00F3               	movwf	___llmod@divisor+3
   875     079F  3000               	movlw	0
   876     07A0  00F2               	movwf	___llmod@divisor+2
   877     07A1  3000               	movlw	0
   878     07A2  00F1               	movwf	___llmod@divisor+1
   879     07A3  300A               	movlw	10
   880     07A4  00F0               	movwf	___llmod@divisor
   881     07A5  0823               	movf	lcdNumber@n+3,w
   882     07A6  00F7               	movwf	___llmod@dividend+3
   883     07A7  0822               	movf	lcdNumber@n+2,w
   884     07A8  00F6               	movwf	___llmod@dividend+2
   885     07A9  0821               	movf	lcdNumber@n+1,w
   886     07AA  00F5               	movwf	___llmod@dividend+1
   887     07AB  0820               	movf	lcdNumber@n,w
   888     07AC  00F4               	movwf	___llmod@dividend
   889     07AD  118A  26DC  118A   	fcall	___llmod
   890     07B0  0870               	movf	?___llmod,w
   891     07B1  1383               	bcf	3,7	;select IRP bank0
   892     07B2  0080               	movwf	0
   893     07B3                     l1000:
   894                           
   895                           ;lcd_4bit.c: 108:   n/=10;
   896     07B3  3000               	movlw	0
   897     07B4  00F3               	movwf	___lldiv@divisor+3
   898     07B5  3000               	movlw	0
   899     07B6  00F2               	movwf	___lldiv@divisor+2
   900     07B7  3000               	movlw	0
   901     07B8  00F1               	movwf	___lldiv@divisor+1
   902     07B9  300A               	movlw	10
   903     07BA  00F0               	movwf	___lldiv@divisor
   904     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   905     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   906     07BD  0823               	movf	lcdNumber@n+3,w
   907     07BE  00F7               	movwf	___lldiv@dividend+3
   908     07BF  0822               	movf	lcdNumber@n+2,w
   909     07C0  00F6               	movwf	___lldiv@dividend+2
   910     07C1  0821               	movf	lcdNumber@n+1,w
   911     07C2  00F5               	movwf	___lldiv@dividend+1
   912     07C3  0820               	movf	lcdNumber@n,w
   913     07C4  00F4               	movwf	___lldiv@dividend
   914     07C5  118A  2730  118A   	fcall	___lldiv
   915     07C8  0873               	movf	?___lldiv+3,w
   916     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   917     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   918     07CB  00A3               	movwf	lcdNumber@n+3
   919     07CC  0872               	movf	?___lldiv+2,w
   920     07CD  00A2               	movwf	lcdNumber@n+2
   921     07CE  0871               	movf	?___lldiv+1,w
   922     07CF  00A1               	movwf	lcdNumber@n+1
   923     07D0  0870               	movf	?___lldiv,w
   924     07D1  00A0               	movwf	lcdNumber@n
   925     07D2                     l1002:
   926                           
   927                           ;lcd_4bit.c: 109:   j++;
   928     07D2  3001               	movlw	1
   929     07D3  00FF               	movwf	btemp+1
   930     07D4  087F               	movf	btemp+1,w
   931     07D5  07B1               	addwf	lcdNumber@j,f
   932     07D6                     l1004:
   933                           
   934                           ;lcd_4bit.c: 106:  while(n){
   935     07D6  0823               	movf	lcdNumber@n+3,w
   936     07D7  0422               	iorwf	lcdNumber@n+2,w
   937     07D8  0421               	iorwf	lcdNumber@n+1,w
   938     07D9  0420               	iorwf	lcdNumber@n,w
   939     07DA  1D03               	skipz
   940     07DB  2FDD               	goto	u891
   941     07DC  2FDE               	goto	u890
   942     07DD                     u891:
   943     07DD  2F9A               	goto	l998
   944     07DE                     u890:
   945     07DE                     l1006:
   946                           
   947                           ;lcd_4bit.c: 111:  for(i=0;i<j;i++){
   948     07DE  01B0               	clrf	lcdNumber@i
   949     07DF  2FF6               	goto	l1012
   950     07E0                     l1008:
   951                           
   952                           ;lcd_4bit.c: 112:    lcdChar(num[j-i-1]+48);
   953     07E0  3026               	movlw	(low (lcdNumber@num| 0))& (0+255)
   954     07E1  00A4               	movwf	??_lcdNumber
   955     07E2  0830               	movf	lcdNumber@i,w
   956     07E3  02A4               	subwf	??_lcdNumber,f
   957     07E4  0831               	movf	lcdNumber@j,w
   958     07E5  0724               	addwf	??_lcdNumber,w
   959     07E6  00A5               	movwf	??_lcdNumber+1
   960     07E7  0825               	movf	??_lcdNumber+1,w
   961     07E8  3EFF               	addlw	255
   962     07E9  0084               	movwf	4
   963     07EA  1383               	bcf	3,7	;select IRP bank0
   964     07EB  0800               	movf	0,w
   965     07EC  3E30               	addlw	48
   966     07ED  118A  255D  118A   	fcall	_lcdChar
   967     07F0                     l1010:
   968                           
   969                           ;lcd_4bit.c: 113:  }
   970     07F0  3001               	movlw	1
   971     07F1  00FF               	movwf	btemp+1
   972     07F2  087F               	movf	btemp+1,w
   973     07F3  1283               	bcf	3,5	;RP0=0, select bank0
   974     07F4  1303               	bcf	3,6	;RP1=0, select bank0
   975     07F5  07B0               	addwf	lcdNumber@i,f
   976     07F6                     l1012:
   977     07F6  0831               	movf	lcdNumber@j,w
   978     07F7  0230               	subwf	lcdNumber@i,w
   979     07F8  1C03               	skipc
   980     07F9  2FFB               	goto	u901
   981     07FA  2FFC               	goto	u900
   982     07FB                     u901:
   983     07FB  2FE0               	goto	l1008
   984     07FC                     u900:
   985     07FC                     l103:
   986     07FC  0008               	return
   987     07FD                     __end_of_lcdNumber:
   988                           
   989                           	psect	text4
   990     055D                     __ptext4:	
   991 ;; *************** function _lcdChar *****************
   992 ;; Defined at:
   993 ;;		line 74 in file "lcd_4bit.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  b               1    wreg     unsigned char 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  b               1    3[COMMON] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1007 ;;      Params:         0       0       0       0
  1008 ;;      Locals:         1       0       0       0
  1009 ;;      Temps:          1       0       0       0
  1010 ;;      Totals:         2       0       0       0
  1011 ;;Total ram usage:        2 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 1
  1014 ;; This function calls:
  1015 ;;		_clockLcd
  1016 ;;		_lcdWriteHigh
  1017 ;;		_lcdWriteLow
  1018 ;; This function is called by:
  1019 ;;		_lcdText
  1020 ;;		_lcdNumber
  1021 ;;		_lcdCustom
  1022 ;;		_lcdNumberHex
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026     055D                     _lcdChar:	
  1027                           ;psect for function _lcdChar
  1028                           
  1029                           
  1030                           ;incstack = 0
  1031                           ; Regs used in _lcdChar: [wreg+status,2+status,0+pclath+cstack]
  1032                           ;lcdChar@b stored from wreg
  1033     055D  00F3               	movwf	lcdChar@b
  1034     055E                     l894:
  1035                           
  1036                           ;lcd_4bit.c: 75:  RC2=1;
  1037     055E  1283               	bcf	3,5	;RP0=0, select bank0
  1038     055F  1303               	bcf	3,6	;RP1=0, select bank0
  1039     0560  1507               	bsf	7,2	;volatile
  1040     0561                     l896:
  1041                           
  1042                           ;lcd_4bit.c: 76:  lcdWriteHigh(b);
  1043     0561  0873               	movf	lcdChar@b,w
  1044     0562  118A  2644  118A   	fcall	_lcdWriteHigh
  1045                           
  1046                           ;lcd_4bit.c: 77:  clockLcd();
  1047     0565  118A  254D  118A   	fcall	_clockLcd
  1048                           
  1049                           ;lcd_4bit.c: 78:  lcdWriteLow(b);
  1050     0568  0873               	movf	lcdChar@b,w
  1051     0569  118A  2602  118A   	fcall	_lcdWriteLow
  1052                           
  1053                           ;lcd_4bit.c: 79:  clockLcd();
  1054     056C  118A  254D  118A   	fcall	_clockLcd
  1055     056F                     l898:
  1056                           
  1057                           ;lcd_4bit.c: 80:  _delay((unsigned long)((40)*(4000000/4000000.0)));
  1058     056F  300D               	movlw	13
  1059     0570  00F2               	movwf	??_lcdChar
  1060     0571                     u997:
  1061     0571  0BF2               	decfsz	??_lcdChar,f
  1062     0572  2D71               	goto	u997
  1063     0573                     l78:
  1064     0573  0008               	return
  1065     0574                     __end_of_lcdChar:
  1066                           
  1067                           	psect	text5
  1068     06DC                     __ptext5:	
  1069 ;; *************** function ___llmod *****************
  1070 ;; Defined at:
  1071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  divisor         4    0[COMMON] unsigned long 
  1074 ;;  dividend        4    4[COMMON] unsigned long 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  counter         1    9[COMMON] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  4    0[COMMON] unsigned long 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, btemp+1
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1086 ;;      Params:         8       0       0       0
  1087 ;;      Locals:         1       0       0       0
  1088 ;;      Temps:          1       0       0       0
  1089 ;;      Totals:        10       0       0       0
  1090 ;;Total ram usage:       10 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_lcdNumber
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099     06DC                     ___llmod:	
  1100                           ;psect for function ___llmod
  1101                           
  1102     06DC                     l926:	
  1103                           ;incstack = 0
  1104                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  1105                           
  1106     06DC  0873               	movf	___llmod@divisor+3,w
  1107     06DD  0472               	iorwf	___llmod@divisor+2,w
  1108     06DE  0471               	iorwf	___llmod@divisor+1,w
  1109     06DF  0470               	iorwf	___llmod@divisor,w
  1110     06E0  1903               	skipnz
  1111     06E1  2EE3               	goto	u801
  1112     06E2  2EE4               	goto	u800
  1113     06E3                     u801:
  1114     06E3  2F27               	goto	l944
  1115     06E4                     u800:
  1116     06E4                     l928:
  1117     06E4  01F9               	clrf	___llmod@counter
  1118     06E5  0AF9               	incf	___llmod@counter,f
  1119     06E6  2EF4               	goto	l934
  1120     06E7                     l930:
  1121     06E7  3001               	movlw	1
  1122     06E8  00F8               	movwf	??___llmod
  1123     06E9                     u815:
  1124     06E9  1003               	clrc
  1125     06EA  0DF0               	rlf	___llmod@divisor,f
  1126     06EB  0DF1               	rlf	___llmod@divisor+1,f
  1127     06EC  0DF2               	rlf	___llmod@divisor+2,f
  1128     06ED  0DF3               	rlf	___llmod@divisor+3,f
  1129     06EE  0BF8               	decfsz	??___llmod,f
  1130     06EF  2EE9               	goto	u815
  1131     06F0                     l932:
  1132     06F0  3001               	movlw	1
  1133     06F1  00FF               	movwf	btemp+1
  1134     06F2  087F               	movf	btemp+1,w
  1135     06F3  07F9               	addwf	___llmod@counter,f
  1136     06F4                     l934:
  1137     06F4  1FF3               	btfss	___llmod@divisor+3,7
  1138     06F5  2EF7               	goto	u821
  1139     06F6  2EF8               	goto	u820
  1140     06F7                     u821:
  1141     06F7  2EE7               	goto	l930
  1142     06F8                     u820:
  1143     06F8                     l936:
  1144     06F8  0873               	movf	___llmod@divisor+3,w
  1145     06F9  0277               	subwf	___llmod@dividend+3,w
  1146     06FA  1D03               	skipz
  1147     06FB  2F06               	goto	u835
  1148     06FC  0872               	movf	___llmod@divisor+2,w
  1149     06FD  0276               	subwf	___llmod@dividend+2,w
  1150     06FE  1D03               	skipz
  1151     06FF  2F06               	goto	u835
  1152     0700  0871               	movf	___llmod@divisor+1,w
  1153     0701  0275               	subwf	___llmod@dividend+1,w
  1154     0702  1D03               	skipz
  1155     0703  2F06               	goto	u835
  1156     0704  0870               	movf	___llmod@divisor,w
  1157     0705  0274               	subwf	___llmod@dividend,w
  1158     0706                     u835:
  1159     0706  1C03               	skipc
  1160     0707  2F09               	goto	u831
  1161     0708  2F0A               	goto	u830
  1162     0709                     u831:
  1163     0709  2F18               	goto	l940
  1164     070A                     u830:
  1165     070A                     l938:
  1166     070A  0870               	movf	___llmod@divisor,w
  1167     070B  02F4               	subwf	___llmod@dividend,f
  1168     070C  0871               	movf	___llmod@divisor+1,w
  1169     070D  1C03               	skipc
  1170     070E  0F71               	incfsz	___llmod@divisor+1,w
  1171     070F  02F5               	subwf	___llmod@dividend+1,f
  1172     0710  0872               	movf	___llmod@divisor+2,w
  1173     0711  1C03               	skipc
  1174     0712  0F72               	incfsz	___llmod@divisor+2,w
  1175     0713  02F6               	subwf	___llmod@dividend+2,f
  1176     0714  0873               	movf	___llmod@divisor+3,w
  1177     0715  1C03               	skipc
  1178     0716  0F73               	incfsz	___llmod@divisor+3,w
  1179     0717  02F7               	subwf	___llmod@dividend+3,f
  1180     0718                     l940:
  1181     0718  3001               	movlw	1
  1182     0719                     u845:
  1183     0719  1003               	clrc
  1184     071A  0CF3               	rrf	___llmod@divisor+3,f
  1185     071B  0CF2               	rrf	___llmod@divisor+2,f
  1186     071C  0CF1               	rrf	___llmod@divisor+1,f
  1187     071D  0CF0               	rrf	___llmod@divisor,f
  1188     071E  3EFF               	addlw	-1
  1189     071F  1D03               	skipz
  1190     0720  2F19               	goto	u845
  1191     0721                     l942:
  1192     0721  3001               	movlw	1
  1193     0722  02F9               	subwf	___llmod@counter,f
  1194     0723  1D03               	btfss	3,2
  1195     0724  2F26               	goto	u851
  1196     0725  2F27               	goto	u850
  1197     0726                     u851:
  1198     0726  2EF8               	goto	l936
  1199     0727                     u850:
  1200     0727                     l944:
  1201     0727  0877               	movf	___llmod@dividend+3,w
  1202     0728  00F3               	movwf	?___llmod+3
  1203     0729  0876               	movf	___llmod@dividend+2,w
  1204     072A  00F2               	movwf	?___llmod+2
  1205     072B  0875               	movf	___llmod@dividend+1,w
  1206     072C  00F1               	movwf	?___llmod+1
  1207     072D  0874               	movf	___llmod@dividend,w
  1208     072E  00F0               	movwf	?___llmod
  1209     072F                     l430:
  1210     072F  0008               	return
  1211     0730                     __end_of___llmod:
  1212                           
  1213                           	psect	text6
  1214     0730                     __ptext6:	
  1215 ;; *************** function ___lldiv *****************
  1216 ;; Defined at:
  1217 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  divisor         4    0[COMMON] unsigned long 
  1220 ;;  dividend        4    4[COMMON] unsigned long 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  quotient        4    9[COMMON] unsigned long 
  1223 ;;  counter         1   13[COMMON] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  4    0[COMMON] unsigned long 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, btemp+1
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1233 ;;      Params:         8       0       0       0
  1234 ;;      Locals:         5       0       0       0
  1235 ;;      Temps:          1       0       0       0
  1236 ;;      Totals:        14       0       0       0
  1237 ;;Total ram usage:       14 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_lcdNumber
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246     0730                     ___lldiv:	
  1247                           ;psect for function ___lldiv
  1248                           
  1249     0730                     l900:	
  1250                           ;incstack = 0
  1251                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1252                           
  1253     0730  3000               	movlw	0
  1254     0731  00FC               	movwf	___lldiv@quotient+3
  1255     0732  3000               	movlw	0
  1256     0733  00FB               	movwf	___lldiv@quotient+2
  1257     0734  3000               	movlw	0
  1258     0735  00FA               	movwf	___lldiv@quotient+1
  1259     0736  3000               	movlw	0
  1260     0737  00F9               	movwf	___lldiv@quotient
  1261     0738  0873               	movf	___lldiv@divisor+3,w
  1262     0739  0472               	iorwf	___lldiv@divisor+2,w
  1263     073A  0471               	iorwf	___lldiv@divisor+1,w
  1264     073B  0470               	iorwf	___lldiv@divisor,w
  1265     073C  1903               	skipnz
  1266     073D  2F3F               	goto	u731
  1267     073E  2F40               	goto	u730
  1268     073F                     u731:
  1269     073F  2F8D               	goto	l922
  1270     0740                     u730:
  1271     0740                     l902:
  1272     0740  01FD               	clrf	___lldiv@counter
  1273     0741  0AFD               	incf	___lldiv@counter,f
  1274     0742  2F50               	goto	l908
  1275     0743                     l904:
  1276     0743  3001               	movlw	1
  1277     0744  00F8               	movwf	??___lldiv
  1278     0745                     u745:
  1279     0745  1003               	clrc
  1280     0746  0DF0               	rlf	___lldiv@divisor,f
  1281     0747  0DF1               	rlf	___lldiv@divisor+1,f
  1282     0748  0DF2               	rlf	___lldiv@divisor+2,f
  1283     0749  0DF3               	rlf	___lldiv@divisor+3,f
  1284     074A  0BF8               	decfsz	??___lldiv,f
  1285     074B  2F45               	goto	u745
  1286     074C                     l906:
  1287     074C  3001               	movlw	1
  1288     074D  00FF               	movwf	btemp+1
  1289     074E  087F               	movf	btemp+1,w
  1290     074F  07FD               	addwf	___lldiv@counter,f
  1291     0750                     l908:
  1292     0750  1FF3               	btfss	___lldiv@divisor+3,7
  1293     0751  2F53               	goto	u751
  1294     0752  2F54               	goto	u750
  1295     0753                     u751:
  1296     0753  2F43               	goto	l904
  1297     0754                     u750:
  1298     0754                     l910:
  1299     0754  3001               	movlw	1
  1300     0755  00F8               	movwf	??___lldiv
  1301     0756                     u765:
  1302     0756  1003               	clrc
  1303     0757  0DF9               	rlf	___lldiv@quotient,f
  1304     0758  0DFA               	rlf	___lldiv@quotient+1,f
  1305     0759  0DFB               	rlf	___lldiv@quotient+2,f
  1306     075A  0DFC               	rlf	___lldiv@quotient+3,f
  1307     075B  0BF8               	decfsz	??___lldiv,f
  1308     075C  2F56               	goto	u765
  1309     075D                     l912:
  1310     075D  0873               	movf	___lldiv@divisor+3,w
  1311     075E  0277               	subwf	___lldiv@dividend+3,w
  1312     075F  1D03               	skipz
  1313     0760  2F6B               	goto	u775
  1314     0761  0872               	movf	___lldiv@divisor+2,w
  1315     0762  0276               	subwf	___lldiv@dividend+2,w
  1316     0763  1D03               	skipz
  1317     0764  2F6B               	goto	u775
  1318     0765  0871               	movf	___lldiv@divisor+1,w
  1319     0766  0275               	subwf	___lldiv@dividend+1,w
  1320     0767  1D03               	skipz
  1321     0768  2F6B               	goto	u775
  1322     0769  0870               	movf	___lldiv@divisor,w
  1323     076A  0274               	subwf	___lldiv@dividend,w
  1324     076B                     u775:
  1325     076B  1C03               	skipc
  1326     076C  2F6E               	goto	u771
  1327     076D  2F6F               	goto	u770
  1328     076E                     u771:
  1329     076E  2F7E               	goto	l918
  1330     076F                     u770:
  1331     076F                     l914:
  1332     076F  0870               	movf	___lldiv@divisor,w
  1333     0770  02F4               	subwf	___lldiv@dividend,f
  1334     0771  0871               	movf	___lldiv@divisor+1,w
  1335     0772  1C03               	skipc
  1336     0773  0F71               	incfsz	___lldiv@divisor+1,w
  1337     0774  02F5               	subwf	___lldiv@dividend+1,f
  1338     0775  0872               	movf	___lldiv@divisor+2,w
  1339     0776  1C03               	skipc
  1340     0777  0F72               	incfsz	___lldiv@divisor+2,w
  1341     0778  02F6               	subwf	___lldiv@dividend+2,f
  1342     0779  0873               	movf	___lldiv@divisor+3,w
  1343     077A  1C03               	skipc
  1344     077B  0F73               	incfsz	___lldiv@divisor+3,w
  1345     077C  02F7               	subwf	___lldiv@dividend+3,f
  1346     077D                     l916:
  1347     077D  1479               	bsf	___lldiv@quotient,0
  1348     077E                     l918:
  1349     077E  3001               	movlw	1
  1350     077F                     u785:
  1351     077F  1003               	clrc
  1352     0780  0CF3               	rrf	___lldiv@divisor+3,f
  1353     0781  0CF2               	rrf	___lldiv@divisor+2,f
  1354     0782  0CF1               	rrf	___lldiv@divisor+1,f
  1355     0783  0CF0               	rrf	___lldiv@divisor,f
  1356     0784  3EFF               	addlw	-1
  1357     0785  1D03               	skipz
  1358     0786  2F7F               	goto	u785
  1359     0787                     l920:
  1360     0787  3001               	movlw	1
  1361     0788  02FD               	subwf	___lldiv@counter,f
  1362     0789  1D03               	btfss	3,2
  1363     078A  2F8C               	goto	u791
  1364     078B  2F8D               	goto	u790
  1365     078C                     u791:
  1366     078C  2F54               	goto	l910
  1367     078D                     u790:
  1368     078D                     l922:
  1369     078D  087C               	movf	___lldiv@quotient+3,w
  1370     078E  00F3               	movwf	?___lldiv+3
  1371     078F  087B               	movf	___lldiv@quotient+2,w
  1372     0790  00F2               	movwf	?___lldiv+2
  1373     0791  087A               	movf	___lldiv@quotient+1,w
  1374     0792  00F1               	movwf	?___lldiv+1
  1375     0793  0879               	movf	___lldiv@quotient,w
  1376     0794  00F0               	movwf	?___lldiv
  1377     0795                     l236:
  1378     0795  0008               	return
  1379     0796                     __end_of___lldiv:
  1380                           
  1381                           	psect	text7
  1382     068E                     __ptext7:	
  1383 ;; *************** function _lcdInit *****************
  1384 ;; Defined at:
  1385 ;;		line 40 in file "lcd_4bit.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1399 ;;      Params:         0       0       0       0
  1400 ;;      Locals:         0       0       0       0
  1401 ;;      Temps:          2       0       0       0
  1402 ;;      Totals:         2       0       0       0
  1403 ;;Total ram usage:        2 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 2
  1406 ;; This function calls:
  1407 ;;		_clockLcd
  1408 ;;		_lcdCmd
  1409 ;;		_lcdWriteHigh
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415     068E                     _lcdInit:	
  1416                           ;psect for function _lcdInit
  1417                           
  1418     068E                     l948:	
  1419                           ;incstack = 0
  1420                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  1421                           
  1422                           
  1423                           ;lcd_4bit.c: 41:  RC2=0;
  1424     068E  1283               	bcf	3,5	;RP0=0, select bank0
  1425     068F  1303               	bcf	3,6	;RP1=0, select bank0
  1426     0690  1107               	bcf	7,2	;volatile
  1427                           
  1428                           ;lcd_4bit.c: 42:  RC3=0;
  1429     0691  1187               	bcf	7,3	;volatile
  1430     0692                     l950:
  1431                           
  1432                           ;lcd_4bit.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1433     0692  301A               	movlw	26
  1434     0693  00F6               	movwf	??_lcdInit+1
  1435     0694  30F8               	movlw	248
  1436     0695  00F5               	movwf	??_lcdInit
  1437     0696                     u1007:
  1438     0696  0BF5               	decfsz	??_lcdInit,f
  1439     0697  2E96               	goto	u1007
  1440     0698  0BF6               	decfsz	??_lcdInit+1,f
  1441     0699  2E96               	goto	u1007
  1442     069A  0000               	nop
  1443     069B                     l952:
  1444                           
  1445                           ;lcd_4bit.c: 45:  lcdWriteHigh(0x30);
  1446     069B  3030               	movlw	48
  1447     069C  118A  2644  118A   	fcall	_lcdWriteHigh
  1448     069F                     l954:
  1449                           
  1450                           ;lcd_4bit.c: 46:  clockLcd();
  1451     069F  118A  254D  118A   	fcall	_clockLcd
  1452                           
  1453                           ;lcd_4bit.c: 47:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1454     06A2  3007               	movlw	7
  1455     06A3  00F6               	movwf	??_lcdInit+1
  1456     06A4  307D               	movlw	125
  1457     06A5  00F5               	movwf	??_lcdInit
  1458     06A6                     u1017:
  1459     06A6  0BF5               	decfsz	??_lcdInit,f
  1460     06A7  2EA6               	goto	u1017
  1461     06A8  0BF6               	decfsz	??_lcdInit+1,f
  1462     06A9  2EA6               	goto	u1017
  1463     06AA                     l956:
  1464                           
  1465                           ;lcd_4bit.c: 49:  lcdWriteHigh(0x30);
  1466     06AA  3030               	movlw	48
  1467     06AB  118A  2644  118A   	fcall	_lcdWriteHigh
  1468     06AE                     l958:
  1469                           
  1470                           ;lcd_4bit.c: 50:  clockLcd();
  1471     06AE  118A  254D  118A   	fcall	_clockLcd
  1472                           
  1473                           ;lcd_4bit.c: 51:  _delay((unsigned long)((150)*(4000000/4000000.0)));
  1474     06B1  3031               	movlw	49
  1475     06B2  00F5               	movwf	??_lcdInit
  1476     06B3                     u1027:
  1477     06B3  0BF5               	decfsz	??_lcdInit,f
  1478     06B4  2EB3               	goto	u1027
  1479     06B5  2EB6               	nop2
  1480     06B6                     l960:
  1481                           
  1482                           ;lcd_4bit.c: 53:     lcdWriteHigh(0x30);
  1483     06B6  3030               	movlw	48
  1484     06B7  118A  2644  118A   	fcall	_lcdWriteHigh
  1485     06BA                     l962:
  1486                           
  1487                           ;lcd_4bit.c: 54:  clockLcd();
  1488     06BA  118A  254D  118A   	fcall	_clockLcd
  1489     06BD                     l964:
  1490                           
  1491                           ;lcd_4bit.c: 56:  lcdWriteHigh(0x20);
  1492     06BD  3020               	movlw	32
  1493     06BE  118A  2644  118A   	fcall	_lcdWriteHigh
  1494     06C1                     l966:
  1495                           
  1496                           ;lcd_4bit.c: 57:  clockLcd();
  1497     06C1  118A  254D  118A   	fcall	_clockLcd
  1498                           
  1499                           ;lcd_4bit.c: 58:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1500     06C4  30C7               	movlw	199
  1501     06C5  00F5               	movwf	??_lcdInit
  1502     06C6                     u1037:
  1503     06C6  2EC7               	nop2
  1504     06C7  0BF5               	decfsz	??_lcdInit,f
  1505     06C8  2EC6               	goto	u1037
  1506     06C9  2ECA               	nop2
  1507     06CA  2ECB               	nop2
  1508     06CB                     l968:
  1509                           
  1510                           ;lcd_4bit.c: 60:  lcdCmd(0x28);
  1511     06CB  3028               	movlw	40
  1512     06CC  118A  258F  118A   	fcall	_lcdCmd
  1513     06CF                     l970:
  1514                           
  1515                           ;lcd_4bit.c: 61:  lcdCmd(0x0c);
  1516     06CF  300C               	movlw	12
  1517     06D0  118A  258F  118A   	fcall	_lcdCmd
  1518     06D3                     l972:
  1519                           
  1520                           ;lcd_4bit.c: 62:  lcdCmd(0x01);
  1521     06D3  3001               	movlw	1
  1522     06D4  118A  258F  118A   	fcall	_lcdCmd
  1523     06D7                     l974:
  1524                           
  1525                           ;lcd_4bit.c: 63:  lcdCmd(0x06);
  1526     06D7  3006               	movlw	6
  1527     06D8  118A  258F  118A   	fcall	_lcdCmd
  1528     06DB                     l69:
  1529     06DB  0008               	return
  1530     06DC                     __end_of_lcdInit:
  1531                           
  1532                           	psect	text8
  1533     058F                     __ptext8:	
  1534 ;; *************** function _lcdCmd *****************
  1535 ;; Defined at:
  1536 ;;		line 29 in file "lcd_4bit.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  b               1    wreg     unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  b               1    4[COMMON] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, pclath, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1550 ;;      Params:         0       0       0       0
  1551 ;;      Locals:         1       0       0       0
  1552 ;;      Temps:          2       0       0       0
  1553 ;;      Totals:         3       0       0       0
  1554 ;;Total ram usage:        3 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 1
  1557 ;; This function calls:
  1558 ;;		_clockLcd
  1559 ;;		_lcdWriteHigh
  1560 ;;		_lcdWriteLow
  1561 ;; This function is called by:
  1562 ;;		_lcdInit
  1563 ;;		_lcdSet
  1564 ;;		_lcdClear
  1565 ;;		_lcdContro
  1566 ;;		_lcdCustom
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570     058F                     _lcdCmd:	
  1571                           ;psect for function _lcdCmd
  1572                           
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  1576                           ;lcdCmd@b stored from wreg
  1577     058F  00F4               	movwf	lcdCmd@b
  1578     0590                     l888:
  1579                           
  1580                           ;lcd_4bit.c: 30:  RC2=0;
  1581     0590  1283               	bcf	3,5	;RP0=0, select bank0
  1582     0591  1303               	bcf	3,6	;RP1=0, select bank0
  1583     0592  1107               	bcf	7,2	;volatile
  1584     0593                     l890:
  1585                           
  1586                           ;lcd_4bit.c: 31:  lcdWriteHigh(b);
  1587     0593  0874               	movf	lcdCmd@b,w
  1588     0594  118A  2644  118A   	fcall	_lcdWriteHigh
  1589                           
  1590                           ;lcd_4bit.c: 32:  clockLcd();
  1591     0597  118A  254D  118A   	fcall	_clockLcd
  1592                           
  1593                           ;lcd_4bit.c: 33:  lcdWriteLow(b);
  1594     059A  0874               	movf	lcdCmd@b,w
  1595     059B  118A  2602  118A   	fcall	_lcdWriteLow
  1596                           
  1597                           ;lcd_4bit.c: 34:  clockLcd();
  1598     059E  118A  254D  118A   	fcall	_clockLcd
  1599     05A1                     l892:
  1600                           
  1601                           ;lcd_4bit.c: 35:  _delay((unsigned long)((2)*(4000000/4000.0)));
  1602     05A1  3003               	movlw	3
  1603     05A2  00F3               	movwf	??_lcdCmd+1
  1604     05A3  3097               	movlw	151
  1605     05A4  00F2               	movwf	??_lcdCmd
  1606     05A5                     u1047:
  1607     05A5  0BF2               	decfsz	??_lcdCmd,f
  1608     05A6  2DA5               	goto	u1047
  1609     05A7  0BF3               	decfsz	??_lcdCmd+1,f
  1610     05A8  2DA5               	goto	u1047
  1611     05A9  2DAA               	nop2
  1612     05AA                     l63:
  1613     05AA  0008               	return
  1614     05AB                     __end_of_lcdCmd:
  1615                           
  1616                           	psect	text9
  1617     0602                     __ptext9:	
  1618 ;; *************** function _lcdWriteLow *****************
  1619 ;; Defined at:
  1620 ;;		line 23 in file "lcd_4bit.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  b               1    wreg     unsigned char 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  b               1    1[COMMON] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1634 ;;      Params:         0       0       0       0
  1635 ;;      Locals:         1       0       0       0
  1636 ;;      Temps:          1       0       0       0
  1637 ;;      Totals:         2       0       0       0
  1638 ;;Total ram usage:        2 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_lcdCmd
  1644 ;;		_lcdChar
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648     0602                     _lcdWriteLow:	
  1649                           ;psect for function _lcdWriteLow
  1650                           
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _lcdWriteLow: [wreg+status,2+status,0]
  1654                           ;lcdWriteLow@b stored from wreg
  1655     0602  00F1               	movwf	lcdWriteLow@b
  1656     0603                     l884:
  1657                           
  1658                           ;lcd_4bit.c: 24:  RC7=(b&0x08)>>3;
  1659     0603  0871               	movf	lcdWriteLow@b,w
  1660     0604  00F0               	movwf	??_lcdWriteLow
  1661     0605  3003               	movlw	3
  1662     0606                     u625:
  1663     0606  1003               	clrc
  1664     0607  0CF0               	rrf	??_lcdWriteLow,f
  1665     0608  3EFF               	addlw	-1
  1666     0609  1D03               	skipz
  1667     060A  2E06               	goto	u625
  1668     060B  1870               	btfsc	??_lcdWriteLow,0
  1669     060C  2E0E               	goto	u631
  1670     060D  2E12               	goto	u630
  1671     060E                     u631:
  1672     060E  1283               	bcf	3,5	;RP0=0, select bank0
  1673     060F  1303               	bcf	3,6	;RP1=0, select bank0
  1674     0610  1787               	bsf	7,7	;volatile
  1675     0611  2E15               	goto	u644
  1676     0612                     u630:
  1677     0612  1283               	bcf	3,5	;RP0=0, select bank0
  1678     0613  1303               	bcf	3,6	;RP1=0, select bank0
  1679     0614  1387               	bcf	7,7	;volatile
  1680     0615                     u644:
  1681                           
  1682                           ;lcd_4bit.c: 25:  RC6=(b&0x04)>>2;
  1683     0615  0871               	movf	lcdWriteLow@b,w
  1684     0616  00F0               	movwf	??_lcdWriteLow
  1685     0617  3002               	movlw	2
  1686     0618                     u655:
  1687     0618  1003               	clrc
  1688     0619  0CF0               	rrf	??_lcdWriteLow,f
  1689     061A  3EFF               	addlw	-1
  1690     061B  1D03               	skipz
  1691     061C  2E18               	goto	u655
  1692     061D  1870               	btfsc	??_lcdWriteLow,0
  1693     061E  2E20               	goto	u661
  1694     061F  2E24               	goto	u660
  1695     0620                     u661:
  1696     0620  1283               	bcf	3,5	;RP0=0, select bank0
  1697     0621  1303               	bcf	3,6	;RP1=0, select bank0
  1698     0622  1707               	bsf	7,6	;volatile
  1699     0623  2E27               	goto	u674
  1700     0624                     u660:
  1701     0624  1283               	bcf	3,5	;RP0=0, select bank0
  1702     0625  1303               	bcf	3,6	;RP1=0, select bank0
  1703     0626  1307               	bcf	7,6	;volatile
  1704     0627                     u674:
  1705                           
  1706                           ;lcd_4bit.c: 26:  RC5=(b&0x02)>>1;
  1707     0627  0871               	movf	lcdWriteLow@b,w
  1708     0628  00F0               	movwf	??_lcdWriteLow
  1709     0629  3001               	movlw	1
  1710     062A                     u685:
  1711     062A  1003               	clrc
  1712     062B  0CF0               	rrf	??_lcdWriteLow,f
  1713     062C  3EFF               	addlw	-1
  1714     062D  1D03               	skipz
  1715     062E  2E2A               	goto	u685
  1716     062F  1870               	btfsc	??_lcdWriteLow,0
  1717     0630  2E32               	goto	u691
  1718     0631  2E36               	goto	u690
  1719     0632                     u691:
  1720     0632  1283               	bcf	3,5	;RP0=0, select bank0
  1721     0633  1303               	bcf	3,6	;RP1=0, select bank0
  1722     0634  1687               	bsf	7,5	;volatile
  1723     0635  2E39               	goto	u704
  1724     0636                     u690:
  1725     0636  1283               	bcf	3,5	;RP0=0, select bank0
  1726     0637  1303               	bcf	3,6	;RP1=0, select bank0
  1727     0638  1287               	bcf	7,5	;volatile
  1728     0639                     u704:
  1729     0639                     l886:
  1730                           
  1731                           ;lcd_4bit.c: 27:  RC4=b&0x01;
  1732     0639  1871               	btfsc	lcdWriteLow@b,0
  1733     063A  2E3C               	goto	u711
  1734     063B  2E40               	goto	u710
  1735     063C                     u711:
  1736     063C  1283               	bcf	3,5	;RP0=0, select bank0
  1737     063D  1303               	bcf	3,6	;RP1=0, select bank0
  1738     063E  1607               	bsf	7,4	;volatile
  1739     063F  2E43               	goto	u724
  1740     0640                     u710:
  1741     0640  1283               	bcf	3,5	;RP0=0, select bank0
  1742     0641  1303               	bcf	3,6	;RP1=0, select bank0
  1743     0642  1207               	bcf	7,4	;volatile
  1744     0643                     u724:
  1745     0643                     l60:
  1746     0643  0008               	return
  1747     0644                     __end_of_lcdWriteLow:
  1748                           
  1749                           	psect	text10
  1750     0644                     __ptext10:	
  1751 ;; *************** function _lcdWriteHigh *****************
  1752 ;; Defined at:
  1753 ;;		line 17 in file "lcd_4bit.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  b               1    wreg     unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  b               1    1[COMMON] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1767 ;;      Params:         0       0       0       0
  1768 ;;      Locals:         1       0       0       0
  1769 ;;      Temps:          1       0       0       0
  1770 ;;      Totals:         2       0       0       0
  1771 ;;Total ram usage:        2 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_lcdCmd
  1777 ;;		_lcdInit
  1778 ;;		_lcdChar
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782     0644                     _lcdWriteHigh:	
  1783                           ;psect for function _lcdWriteHigh
  1784                           
  1785                           
  1786                           ;incstack = 0
  1787                           ; Regs used in _lcdWriteHigh: [wreg+status,2+status,0]
  1788                           ;lcdWriteHigh@b stored from wreg
  1789     0644  00F1               	movwf	lcdWriteHigh@b
  1790     0645                     l882:
  1791                           
  1792                           ;lcd_4bit.c: 18:  RC7=(b&0x80)>>7;
  1793     0645  0871               	movf	lcdWriteHigh@b,w
  1794     0646  00F0               	movwf	??_lcdWriteHigh
  1795     0647  3007               	movlw	7
  1796     0648                     u505:
  1797     0648  1003               	clrc
  1798     0649  0CF0               	rrf	??_lcdWriteHigh,f
  1799     064A  3EFF               	addlw	-1
  1800     064B  1D03               	skipz
  1801     064C  2E48               	goto	u505
  1802     064D  1870               	btfsc	??_lcdWriteHigh,0
  1803     064E  2E50               	goto	u511
  1804     064F  2E54               	goto	u510
  1805     0650                     u511:
  1806     0650  1283               	bcf	3,5	;RP0=0, select bank0
  1807     0651  1303               	bcf	3,6	;RP1=0, select bank0
  1808     0652  1787               	bsf	7,7	;volatile
  1809     0653  2E57               	goto	u524
  1810     0654                     u510:
  1811     0654  1283               	bcf	3,5	;RP0=0, select bank0
  1812     0655  1303               	bcf	3,6	;RP1=0, select bank0
  1813     0656  1387               	bcf	7,7	;volatile
  1814     0657                     u524:
  1815                           
  1816                           ;lcd_4bit.c: 19:  RC6=(b&0x40)>>6;
  1817     0657  0871               	movf	lcdWriteHigh@b,w
  1818     0658  00F0               	movwf	??_lcdWriteHigh
  1819     0659  3006               	movlw	6
  1820     065A                     u535:
  1821     065A  1003               	clrc
  1822     065B  0CF0               	rrf	??_lcdWriteHigh,f
  1823     065C  3EFF               	addlw	-1
  1824     065D  1D03               	skipz
  1825     065E  2E5A               	goto	u535
  1826     065F  1870               	btfsc	??_lcdWriteHigh,0
  1827     0660  2E62               	goto	u541
  1828     0661  2E66               	goto	u540
  1829     0662                     u541:
  1830     0662  1283               	bcf	3,5	;RP0=0, select bank0
  1831     0663  1303               	bcf	3,6	;RP1=0, select bank0
  1832     0664  1707               	bsf	7,6	;volatile
  1833     0665  2E69               	goto	u554
  1834     0666                     u540:
  1835     0666  1283               	bcf	3,5	;RP0=0, select bank0
  1836     0667  1303               	bcf	3,6	;RP1=0, select bank0
  1837     0668  1307               	bcf	7,6	;volatile
  1838     0669                     u554:
  1839                           
  1840                           ;lcd_4bit.c: 20:  RC5=(b&0x20)>>5;
  1841     0669  0871               	movf	lcdWriteHigh@b,w
  1842     066A  00F0               	movwf	??_lcdWriteHigh
  1843     066B  3005               	movlw	5
  1844     066C                     u565:
  1845     066C  1003               	clrc
  1846     066D  0CF0               	rrf	??_lcdWriteHigh,f
  1847     066E  3EFF               	addlw	-1
  1848     066F  1D03               	skipz
  1849     0670  2E6C               	goto	u565
  1850     0671  1870               	btfsc	??_lcdWriteHigh,0
  1851     0672  2E74               	goto	u571
  1852     0673  2E78               	goto	u570
  1853     0674                     u571:
  1854     0674  1283               	bcf	3,5	;RP0=0, select bank0
  1855     0675  1303               	bcf	3,6	;RP1=0, select bank0
  1856     0676  1687               	bsf	7,5	;volatile
  1857     0677  2E7B               	goto	u584
  1858     0678                     u570:
  1859     0678  1283               	bcf	3,5	;RP0=0, select bank0
  1860     0679  1303               	bcf	3,6	;RP1=0, select bank0
  1861     067A  1287               	bcf	7,5	;volatile
  1862     067B                     u584:
  1863                           
  1864                           ;lcd_4bit.c: 21:  RC4=(b&0x10)>>4;
  1865     067B  0871               	movf	lcdWriteHigh@b,w
  1866     067C  00F0               	movwf	??_lcdWriteHigh
  1867     067D  3004               	movlw	4
  1868     067E                     u595:
  1869     067E  1003               	clrc
  1870     067F  0CF0               	rrf	??_lcdWriteHigh,f
  1871     0680  3EFF               	addlw	-1
  1872     0681  1D03               	skipz
  1873     0682  2E7E               	goto	u595
  1874     0683  1870               	btfsc	??_lcdWriteHigh,0
  1875     0684  2E86               	goto	u601
  1876     0685  2E8A               	goto	u600
  1877     0686                     u601:
  1878     0686  1283               	bcf	3,5	;RP0=0, select bank0
  1879     0687  1303               	bcf	3,6	;RP1=0, select bank0
  1880     0688  1607               	bsf	7,4	;volatile
  1881     0689  2E8D               	goto	u614
  1882     068A                     u600:
  1883     068A  1283               	bcf	3,5	;RP0=0, select bank0
  1884     068B  1303               	bcf	3,6	;RP1=0, select bank0
  1885     068C  1207               	bcf	7,4	;volatile
  1886     068D                     u614:
  1887     068D                     l57:
  1888     068D  0008               	return
  1889     068E                     __end_of_lcdWriteHigh:
  1890                           
  1891                           	psect	text11
  1892     054D                     __ptext11:	
  1893 ;; *************** function _clockLcd *****************
  1894 ;; Defined at:
  1895 ;;		line 12 in file "lcd_4bit.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1909 ;;      Params:         0       0       0       0
  1910 ;;      Locals:         0       0       0       0
  1911 ;;      Temps:          2       0       0       0
  1912 ;;      Totals:         2       0       0       0
  1913 ;;Total ram usage:        2 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_lcdCmd
  1919 ;;		_lcdInit
  1920 ;;		_lcdChar
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924     054D                     _clockLcd:	
  1925                           ;psect for function _clockLcd
  1926                           
  1927     054D                     l876:	
  1928                           ;incstack = 0
  1929                           ; Regs used in _clockLcd: [wreg]
  1930                           
  1931                           
  1932                           ;lcd_4bit.c: 13:  RC3=1;
  1933     054D  1283               	bcf	3,5	;RP0=0, select bank0
  1934     054E  1303               	bcf	3,6	;RP1=0, select bank0
  1935     054F  1587               	bsf	7,3	;volatile
  1936     0550                     l878:
  1937                           
  1938                           ;lcd_4bit.c: 14:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1939     0550  3006               	movlw	6
  1940     0551  00F1               	movwf	??_clockLcd+1
  1941     0552  3030               	movlw	48
  1942     0553  00F0               	movwf	??_clockLcd
  1943     0554                     u1057:
  1944     0554  0BF0               	decfsz	??_clockLcd,f
  1945     0555  2D54               	goto	u1057
  1946     0556  0BF1               	decfsz	??_clockLcd+1,f
  1947     0557  2D54               	goto	u1057
  1948     0558  0000               	nop
  1949     0559                     l880:
  1950                           
  1951                           ;lcd_4bit.c: 15:  RC3=0;
  1952     0559  1283               	bcf	3,5	;RP0=0, select bank0
  1953     055A  1303               	bcf	3,6	;RP1=0, select bank0
  1954     055B  1187               	bcf	7,3	;volatile
  1955     055C                     l54:
  1956     055C  0008               	return
  1957     055D                     __end_of_clockLcd:
  1958     007E                     btemp	set	126	;btemp
  1959     007E                     wtemp0	set	126
  1960                           
  1961                           	psect	config
  1962                           
  1963                           ;Config register CONFIG1 @ 0x2007
  1964                           ;	Oscillator Selection bits
  1965                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1966                           ;	Watchdog Timer Enable bit
  1967                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1968                           ;	Power-up Timer Enable bit
  1969                           ;	PWRTE = OFF, PWRT disabled
  1970                           ;	RE3/MCLR pin function select bit
  1971                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1972                           ;	Code Protection bit
  1973                           ;	CP = OFF, Program memory code protection is disabled
  1974                           ;	Data Code Protection bit
  1975                           ;	CPD = OFF, Data memory code protection is disabled
  1976                           ;	Brown Out Reset Selection bits
  1977                           ;	BOREN = OFF, BOR disabled
  1978                           ;	Internal External Switchover bit
  1979                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1980                           ;	Fail-Safe Clock Monitor Enabled bit
  1981                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1982                           ;	Low Voltage Programming Enable bit
  1983                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1984                           ;	In-Circuit Debugger Mode bit
  1985                           ;	DEBUG = 0x1, unprogrammed default
  1986     2007                     	org	8199
  1987     2007  20D4               	dw	8404
  1988                           
  1989                           ;Config register CONFIG2 @ 0x2008
  1990                           ;	Brown-out Reset Selection bit
  1991                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1992                           ;	Flash Program Memory Self Write Enable bits
  1993                           ;	WRT = OFF, Write protection off
  1994     2008                     	org	8200
  1995     2008  3FFF               	dw	16383

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      20
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    lcdText@str	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _lcdText->_lcdChar
    _lcdSet->_lcdCmd
    _lcdNumber->___lldiv
    _lcdChar->_clockLcd
    _lcdChar->_lcdWriteHigh
    _lcdChar->_lcdWriteLow
    _lcdInit->_lcdCmd
    _lcdCmd->_clockLcd
    _lcdCmd->_lcdWriteHigh
    _lcdCmd->_lcdWriteLow

Critical Paths under _main in BANK0

    _main->_lcdNumber

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2309
                                             18 BANK0      2     2      0
                            _lcdInit
                          _lcdNumber
                             _lcdSet
                            _lcdText
 ---------------------------------------------------------------------------------
 (1) _lcdText                                              2     2      0     343
                                              4 COMMON     2     2      0
                            _lcdChar
 ---------------------------------------------------------------------------------
 (1) _lcdSet                                               3     2      1     463
                                              5 COMMON     3     2      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdNumber                                           18    14      4    1149
                                              0 BANK0     18    14      4
                            ___lldiv
                            ___llmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              2     2      0     220
                                              2 COMMON     2     2      0
                           _clockLcd
                       _lcdWriteHigh
                        _lcdWriteLow
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     308
                                              5 COMMON     2     2      0
                           _clockLcd
                             _lcdCmd
                       _lcdWriteHigh
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     220
                                              2 COMMON     3     3      0
                           _clockLcd
                       _lcdWriteHigh
                        _lcdWriteLow
 ---------------------------------------------------------------------------------
 (3) _lcdWriteLow                                          2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcdWriteHigh                                         2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _clockLcd                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdInit
     _clockLcd
     _lcdCmd
       _clockLcd
       _lcdWriteHigh
       _lcdWriteLow
     _lcdWriteHigh
   _lcdNumber
     ___lldiv
     ___llmod
     _lcdChar
       _clockLcd
       _lcdWriteHigh
       _lcdWriteLow
   _lcdSet
     _lcdCmd
   _lcdText
     _lcdChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     14      14       3       25.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 26 21:43:34 2024

                      pc 0002                       l60 0643                       l54 055C  
                     l63 05AA                       l57 068D                       l75 058E  
                     l84 05C6                       l69 06DB                       l78 0573  
                     fsr 0004                      l103 07FC                      l236 0795  
                    l430 072F                      l900 0730                      l910 0754  
                    l902 0740                      l920 0787                      l912 075D  
                    l904 0743                      l914 076F                      l906 074C  
                    l922 078D                      l930 06E7                      l916 077D  
                    l908 0750                      l940 0718                      l932 06F0  
                    l950 0692                      l918 077E                      l942 0721  
                    l934 06F4                      l926 06DC                      l880 0559  
                    l960 06B6                      l952 069B                      l936 06F8  
                    l928 06E4                      l944 0727             lcdWriteLow@b 0071  
                    l882 0645                      l890 0593                      l970 06CF  
                    l962 06BA                      l954 069F                      l938 070A  
                    l876 054D                      l884 0603                      l892 05A1  
                    l972 06D3                      l964 06BD                      l956 06AA  
                    l948 068E                      l980 05B7                      l878 0550  
                    l886 0639                      l974 06D7                      l966 06C1  
                    l958 06AE                      l894 055E                      l990 0583  
                    l982 05BB                      l888 0590                      l968 06CB  
                    l896 0561                      l992 0585                      l984 0575  
                    l976 05AC                      l898 056F                      l994 058A  
                    l986 057A                      l978 05AE                      l996 0796  
                    l988 057D                      l998 079A                      _RC2 003A  
                    _RC3 003B                      _RC4 003C                      _RC5 003D  
                    _RC6 003E                      _RC7 003F                      u510 0654  
                    u511 0650                      u600 068A                      u601 0686  
                    u505 0648                      u540 0666                      u524 0657  
                    u541 0662                      u614 068D                      u710 0640  
                    u630 0612                      u535 065A                      u711 063C  
                    u631 060E                      u704 0639                      u800 06E4  
                    u625 0606                      u801 06E3                      u570 0678  
                    u554 0669                      u730 0740                      u571 0674  
                    u731 073F                      u724 0643                      u660 0624  
                    u644 0615                      u820 06F8                      u900 07FC  
                    u565 066C                      u661 0620                      u821 06F7  
                    u901 07FB                      u750 0754                      u830 070A  
                    u910 05EA                      u655 0618                      u751 0753  
                    u831 0709                      u815 06E9                      u911 05E9  
                    u584 067B                      u745 0745                      u690 0636  
                    u674 0627                      u770 076F                      u850 0727  
                    u595 067E                      u691 0632                      u771 076E  
                    u851 0726                      u835 0706                      u860 05C6  
                    u685 062A                      u765 0756                      u845 0719  
                    u861 05C5                      u790 078D                      u870 057A  
                    u791 078C                      u775 076B                      u871 0579  
                    u880 0583                      u785 077F                      u881 0582  
                    u890 07DE                      u891 07DD                      u997 0571  
                    fsr0 0004                      indf 0000           ??_lcdWriteHigh 0070  
          lcdWriteHigh@b 0071                     l1000 07B3                     l1010 07F0  
                   l1002 07D2                     l1012 07F6                     l1004 07D6  
                   l1020 05CE                     l1006 07DE                     l1030 05D5  
                   l1022 05D1                     l1014 05C7                     l1008 07E0  
                   l1040 05EA                     l1032 05D6                     l1024 05D2  
                   l1016 05CB                     l1042 05EE                     l1034 05D9  
                   l1026 05D3                     l1018 05CD                     l1044 05F4  
                   l1036 05DD                     l1028 05D4                     l1038 05E3  
                   STR_1 0008                     u1007 0696                     u1017 06A6  
                   u1027 06B3                     u1037 06C6                     u1047 05A5  
                   u1057 0554                     _TMR1 000E                     _main 05C7  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___lldiv 0796          __end_of___llmod 0730          __end_of_lcdChar 0574  
        __end_of_lcdInit 06DC          __end_of_lcdText 05C7                    main@i 0032  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 0602                   ??_main 007E  
       ___llmod@dividend 0074                   _T1SYNC 0082                   _TMR1CS 0081  
                 _TMR1ON 0080                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC4 043C                   _TRISC5 043D                   _TRISC6 043E  
                 _TRISC7 043F         __end_of_clockLcd 055D     __end_of_lcdWriteHigh 068E  
              ??___lldiv 0078                   _lcdCmd 058F                ??___llmod 0078  
                 _lcdSet 0574                ??_lcdChar 0072                ??_lcdInit 0075  
              ??_lcdText 0074  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 05C7                  ?_lcdCmd 0070                  ?_lcdSet 0075  
              ?_clockLcd 0070               __stringtab 0002        __end_of_lcdNumber 07FD  
                ___lldiv 0730                  ___llmod 06DC                  _lcdChar 055D  
                _lcdInit 068E                  __ptext1 05AB                  __ptext2 0574  
                __ptext3 0796                  __ptext4 055D                  __ptext5 06DC  
                __ptext6 0730                  __ptext7 068E                  __ptext8 058F  
                __ptext9 0602                  _lcdText 05AB                  lcdCmd@b 0074  
                lcdSet@x 0077                  lcdSet@y 0075               ??_clockLcd 0070  
           _lcdWriteHigh 0644     end_of_initialization 07FD          ___lldiv@divisor 0070  
        ___lldiv@counter 007D               lcdNumber@i 0030               lcdNumber@j 0031  
             lcdNumber@n 0020               lcdText@str 0074            ??_lcdWriteLow 0070  
         __end_of_lcdCmd 05AB           __end_of_lcdSet 058F      start_initialization 07FD  
        ___llmod@divisor 0070          ___llmod@counter 0079      __end_of_lcdWriteLow 0644  
               ??_lcdCmd 0072                 ??_lcdSet 0076                ___latbits 0001  
          __pcstackBANK0 0020                 ?___lldiv 0070                 ?___llmod 0070  
              _lcdNumber 0796                 ?_lcdChar 0070                __pstrings 0002  
               ?_lcdInit 0070                 ?_lcdText 0070              _lcdWriteLow 0602  
              lcdSet@add 0076               ?_lcdNumber 0020              __stringbase 0007  
     __end_of__stringtab 0008                 _clockLcd 054D                 __ptext10 0644  
               __ptext11 054D                 lcdChar@b 0073                 lcdText@i 0075  
            ??_lcdNumber 0024         ___lldiv@dividend 0074                stringcode 0002  
           lcdNumber@num 0026         ___lldiv@quotient 0079                 stringdir 0002  
               stringtab 0002            ?_lcdWriteHigh 0070             ?_lcdWriteLow 0070  
