

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Mar 02 12:57:53 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F883 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     008F                     	;# 
    92     0090                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0093                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     0105                     	;# 
   111     0107                     	;# 
   112     0108                     	;# 
   113     0109                     	;# 
   114     010C                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     0185                     	;# 
   120     0187                     	;# 
   121     0188                     	;# 
   122     0189                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0009                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000D                     	;# 
   138     000E                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001B                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0081                     	;# 
   160     0085                     	;# 
   161     0086                     	;# 
   162     0087                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     008F                     	;# 
   168     0090                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0093                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0095                     	;# 
   176     0096                     	;# 
   177     0097                     	;# 
   178     0098                     	;# 
   179     0099                     	;# 
   180     009A                     	;# 
   181     009B                     	;# 
   182     009C                     	;# 
   183     009D                     	;# 
   184     009E                     	;# 
   185     009F                     	;# 
   186     0105                     	;# 
   187     0107                     	;# 
   188     0108                     	;# 
   189     0109                     	;# 
   190     010C                     	;# 
   191     010C                     	;# 
   192     010D                     	;# 
   193     010E                     	;# 
   194     010F                     	;# 
   195     0185                     	;# 
   196     0187                     	;# 
   197     0188                     	;# 
   198     0189                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     0006                     _PORTB	set	6
   202     0013                     _SSPBUF	set	19
   203     0063                     _SSPIF	set	99
   204     00A0                     _SSPM0	set	160
   205     00A1                     _SSPM1	set	161
   206     00A2                     _SSPM2	set	162
   207     00A3                     _SSPM3	set	163
   208     00A5                     _SSPEN	set	165
   209     0086                     _TRISB	set	134
   210     0093                     _SSPADD	set	147
   211     048C                     _ACKEN	set	1164
   212     048D                     _ACKDT	set	1165
   213     048B                     _RCEN	set	1163
   214     048E                     _ACKSTAT	set	1166
   215     048A                     _PEN	set	1162
   216     0489                     _RSEN	set	1161
   217     0488                     _SEN	set	1160
   218     043C                     _TRISC4	set	1084
   219     043B                     _TRISC3	set	1083
   220     0189                     _ANSELH	set	393
   221                           
   222                           	psect	cinit
   223     07FD                     start_initialization:	
   224                           ; #config settings
   225                           
   226     07FD                     __initialization:
   227     07FD                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230     07FD                     __end_of__initialization:
   231     07FD  0183               	clrf	3
   232     07FE  118A  2FC6         	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	cstackCOMMON
   235     0070                     __pcstackCOMMON:
   236     0070                     ?_i2c_master_init:
   237     0070                     ??_i2c_master_init:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ?_i2c_start:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ??_i2c_start:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ?_i2c_stop:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ??_i2c_stop:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?_i2c_write:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0070                     ??_i2c_write:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0070                     ?_i2c_read:	
   259                           ; 1 bytes @ 0x0
   260                           
   261     0070                     ??_i2c_read:	
   262                           ; 1 bytes @ 0x0
   263                           
   264     0070                     ?_main:	
   265                           ; 1 bytes @ 0x0
   266                           
   267     0070                     i2c_write@data:	
   268                           ; 1 bytes @ 0x0
   269                           
   270     0070                     i2c_read@ack:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           ; 1 bytes @ 0x0
   275     0070                     	ds	1
   276     0071                     ??_main:
   277                           
   278                           ; 1 bytes @ 0x1
   279     0071                     	ds	3
   280                           
   281                           	psect	maintext
   282     07C6                     __pmaintext:	
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 63 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : B00/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   302 ;;      Params:         0       0       0       0
   303 ;;      Locals:         0       0       0       0
   304 ;;      Temps:          3       0       0       0
   305 ;;      Totals:         3       0       0       0
   306 ;;Total ram usage:        3 bytes
   307 ;; Hardware stack levels required when called: 1
   308 ;; This function calls:
   309 ;;		_i2c_master_init
   310 ;;		_i2c_read
   311 ;;		_i2c_start
   312 ;;		_i2c_stop
   313 ;;		_i2c_write
   314 ;; This function is called by:
   315 ;;		Startup code after reset
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319     07C6                     _main:	
   320                           ;psect for function _main
   321                           
   322     07C6                     l658:	
   323                           ;incstack = 0
   324                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   325                           
   326                           
   327                           ;main.c: 64:     TRISB = 0;
   328     07C6  1683               	bsf	3,5	;RP0=1, select bank1
   329     07C7  1303               	bcf	3,6	;RP1=0, select bank1
   330     07C8  0186               	clrf	6	;volatile
   331                           
   332                           ;main.c: 65:     ANSELH = 0;
   333     07C9  1683               	bsf	3,5	;RP0=1, select bank3
   334     07CA  1703               	bsf	3,6	;RP1=1, select bank3
   335     07CB  0189               	clrf	9	;volatile
   336     07CC                     l660:
   337                           
   338                           ;main.c: 66:     i2c_master_init();
   339     07CC  118A  2796  118A   	fcall	_i2c_master_init
   340     07CF                     l662:
   341                           
   342                           ;main.c: 68:     i2c_start();
   343     07CF  118A  277B  118A   	fcall	_i2c_start
   344     07D2                     l664:
   345                           
   346                           ;main.c: 69:     i2c_write(0x40);
   347     07D2  3040               	movlw	64
   348     07D3  118A  278B  118A   	fcall	_i2c_write
   349     07D6                     l666:
   350                           
   351                           ;main.c: 70:     i2c_write(0xaa);
   352     07D6  30AA               	movlw	170
   353     07D7  118A  278B  118A   	fcall	_i2c_write
   354     07DA                     l668:
   355                           
   356                           ;main.c: 71:     i2c_stop();
   357     07DA  118A  2783  118A   	fcall	_i2c_stop
   358     07DD                     l670:
   359                           
   360                           ;main.c: 74:         i2c_start();
   361     07DD  118A  277B  118A   	fcall	_i2c_start
   362     07E0                     l672:
   363                           
   364                           ;main.c: 75:         i2c_write(0x4f);
   365     07E0  304F               	movlw	79
   366     07E1  118A  278B  118A   	fcall	_i2c_write
   367     07E4                     l674:
   368                           
   369                           ;main.c: 76:         PORTB = i2c_read(1);
   370     07E4  3001               	movlw	1
   371     07E5  118A  27A4  118A   	fcall	_i2c_read
   372     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   373     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   374     07EA  0086               	movwf	6	;volatile
   375     07EB                     l676:
   376                           
   377                           ;main.c: 77:         i2c_stop();
   378     07EB  118A  2783  118A   	fcall	_i2c_stop
   379     07EE                     l678:
   380                           
   381                           ;main.c: 78:         _delay((unsigned long)((400)*(4000000/4000.0)));
   382     07EE  3003               	movlw	3
   383     07EF  00F3               	movwf	??_main+2
   384     07F0  3008               	movlw	8
   385     07F1  00F2               	movwf	??_main+1
   386     07F2  3077               	movlw	119
   387     07F3  00F1               	movwf	??_main
   388     07F4                     u77:
   389     07F4  0BF1               	decfsz	??_main,f
   390     07F5  2FF4               	goto	u77
   391     07F6  0BF2               	decfsz	??_main+1,f
   392     07F7  2FF4               	goto	u77
   393     07F8  0BF3               	decfsz	??_main+2,f
   394     07F9  2FF4               	goto	u77
   395     07FA  2FDD               	goto	l670
   396     07FB  118A  2800         	ljmp	start
   397     07FD                     __end_of_main:
   398                           
   399                           	psect	text1
   400     078B                     __ptext1:	
   401 ;; *************** function _i2c_write *****************
   402 ;; Defined at:
   403 ;;		line 43 in file "main.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;  data            1    wreg     unsigned char 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  data            1    0[COMMON] unsigned char 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      unsigned char 
   410 ;; Registers used:
   411 ;;		wreg
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   417 ;;      Params:         0       0       0       0
   418 ;;      Locals:         1       0       0       0
   419 ;;      Temps:          0       0       0       0
   420 ;;      Totals:         1       0       0       0
   421 ;;Total ram usage:        1 bytes
   422 ;; Hardware stack levels used: 1
   423 ;; This function calls:
   424 ;;		Nothing
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430     078B                     _i2c_write:	
   431                           ;psect for function _i2c_write
   432                           
   433                           
   434                           ;incstack = 0
   435                           ; Regs used in _i2c_write: [wreg]
   436                           ;i2c_write@data stored from wreg
   437     078B  00F0               	movwf	i2c_write@data
   438     078C                     l642:
   439                           
   440                           ;main.c: 43: uint8_t i2c_write(uint8_t data);main.c: 44: {;main.c: 45:     SSPIF = 0;
   441     078C  1283               	bcf	3,5	;RP0=0, select bank0
   442     078D  1303               	bcf	3,6	;RP1=0, select bank0
   443     078E  118C               	bcf	12,3	;volatile
   444     078F                     l644:
   445                           
   446                           ;main.c: 46:     SSPBUF = data;
   447     078F  0870               	movf	i2c_write@data,w
   448     0790  0093               	movwf	19	;volatile
   449     0791                     l66:	
   450                           ;main.c: 47:     while(!SSPIF);
   451                           
   452     0791  1D8C               	btfss	12,3	;volatile
   453     0792  2F94               	goto	u31
   454     0793  2F95               	goto	u30
   455     0794                     u31:
   456     0794  2F91               	goto	l66
   457     0795                     u30:
   458     0795                     l68:
   459     0795                     l69:	
   460                           ;main.c: 48:     return ACKSTAT;;	Return value of _i2c_write is never used
   461                           
   462     0795  0008               	return
   463     0796                     __end_of_i2c_write:
   464                           
   465                           	psect	text2
   466     0783                     __ptext2:	
   467 ;; *************** function _i2c_stop *****************
   468 ;; Defined at:
   469 ;;		line 37 in file "main.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		None
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   483 ;;      Params:         0       0       0       0
   484 ;;      Locals:         0       0       0       0
   485 ;;      Temps:          0       0       0       0
   486 ;;      Totals:         0       0       0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496     0783                     _i2c_stop:	
   497                           ;psect for function _i2c_stop
   498                           
   499     0783                     l640:	
   500                           ;incstack = 0
   501                           ; Regs used in _i2c_stop: []
   502                           
   503                           
   504                           ;main.c: 39:     PEN = 1;
   505     0783  1683               	bsf	3,5	;RP0=1, select bank1
   506     0784  1303               	bcf	3,6	;RP1=0, select bank1
   507     0785  1511               	bsf	17,2	;volatile
   508     0786                     l60:	
   509                           ;main.c: 40:     while(PEN);
   510                           
   511     0786  1911               	btfsc	17,2	;volatile
   512     0787  2F89               	goto	u21
   513     0788  2F8A               	goto	u20
   514     0789                     u21:
   515     0789  2F86               	goto	l60
   516     078A                     u20:
   517     078A                     l63:
   518     078A  0008               	return
   519     078B                     __end_of_i2c_stop:
   520                           
   521                           	psect	text3
   522     077B                     __ptext3:	
   523 ;; *************** function _i2c_start *****************
   524 ;; Defined at:
   525 ;;		line 27 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		None
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   539 ;;      Params:         0       0       0       0
   540 ;;      Locals:         0       0       0       0
   541 ;;      Temps:          0       0       0       0
   542 ;;      Totals:         0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552     077B                     _i2c_start:	
   553                           ;psect for function _i2c_start
   554                           
   555     077B                     l638:	
   556                           ;incstack = 0
   557                           ; Regs used in _i2c_start: []
   558                           
   559                           
   560                           ;main.c: 28:     SEN = 1;
   561     077B  1683               	bsf	3,5	;RP0=1, select bank1
   562     077C  1303               	bcf	3,6	;RP1=0, select bank1
   563     077D  1411               	bsf	17,0	;volatile
   564     077E                     l48:	
   565                           ;main.c: 29:     while(SEN);
   566                           
   567     077E  1811               	btfsc	17,0	;volatile
   568     077F  2F81               	goto	u11
   569     0780  2F82               	goto	u10
   570     0781                     u11:
   571     0781  2F7E               	goto	l48
   572     0782                     u10:
   573     0782                     l51:
   574     0782  0008               	return
   575     0783                     __end_of_i2c_start:
   576                           
   577                           	psect	text4
   578     07A4                     __ptext4:	
   579 ;; *************** function _i2c_read *****************
   580 ;; Defined at:
   581 ;;		line 51 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  ack             1    wreg     _Bool 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  ack             1    0[COMMON] _Bool 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      unsigned char 
   588 ;; Registers used:
   589 ;;		wreg, status,0
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   595 ;;      Params:         0       0       0       0
   596 ;;      Locals:         1       0       0       0
   597 ;;      Temps:          0       0       0       0
   598 ;;      Totals:         1       0       0       0
   599 ;;Total ram usage:        1 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608     07A4                     _i2c_read:	
   609                           ;psect for function _i2c_read
   610                           
   611                           
   612                           ;incstack = 0
   613                           ; Regs used in _i2c_read: [wreg+status,0]
   614                           ;i2c_read@ack stored from wreg
   615     07A4  00F0               	movwf	i2c_read@ack
   616     07A5                     l646:
   617                           
   618                           ;main.c: 52:     SSPIF = 0;
   619     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   620     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   621     07A7  118C               	bcf	12,3	;volatile
   622                           
   623                           ;main.c: 53:     RCEN = 1;
   624     07A8  1683               	bsf	3,5	;RP0=1, select bank1
   625     07A9  1303               	bcf	3,6	;RP1=0, select bank1
   626     07AA  1591               	bsf	17,3	;volatile
   627     07AB                     l72:	
   628                           ;main.c: 54:     while(!SSPIF);
   629                           
   630     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   631     07AC  1D8C               	btfss	12,3	;volatile
   632     07AD  2FAF               	goto	u41
   633     07AE  2FB0               	goto	u40
   634     07AF                     u41:
   635     07AF  2FAB               	goto	l72
   636     07B0                     u40:
   637     07B0                     l74:
   638                           
   639                           ;main.c: 55:     RCEN = 0;
   640     07B0  1683               	bsf	3,5	;RP0=1, select bank1
   641     07B1  1303               	bcf	3,6	;RP1=0, select bank1
   642     07B2  1191               	bcf	17,3	;volatile
   643                           
   644                           ;main.c: 56:     SSPIF = 0;
   645     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   646     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   647     07B5  118C               	bcf	12,3	;volatile
   648     07B6                     l648:
   649                           
   650                           ;main.c: 57:     ACKDT = ack;
   651     07B6  0C70               	rrf	i2c_read@ack,w
   652     07B7  1683               	bsf	3,5	;RP0=1, select bank1
   653     07B8  1303               	bcf	3,6	;RP1=0, select bank1
   654     07B9  1C03               	skipc
   655     07BA  1291               	bcf	17,5	;volatile
   656     07BB  1803               	skipnc
   657     07BC  1691               	bsf	17,5	;volatile
   658     07BD                     l650:
   659                           
   660                           ;main.c: 58:     ACKEN = 1;
   661     07BD  1611               	bsf	17,4	;volatile
   662     07BE                     l75:	
   663                           ;main.c: 59:     while(ACKEN);
   664                           
   665     07BE  1A11               	btfsc	17,4	;volatile
   666     07BF  2FC1               	goto	u51
   667     07C0  2FC2               	goto	u50
   668     07C1                     u51:
   669     07C1  2FBE               	goto	l75
   670     07C2                     u50:
   671     07C2                     l652:
   672                           
   673                           ;main.c: 60:     return SSPBUF;
   674     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   675     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   676     07C4  0813               	movf	19,w	;volatile
   677     07C5                     l78:
   678     07C5  0008               	return
   679     07C6                     __end_of_i2c_read:
   680                           
   681                           	psect	text5
   682     0796                     __ptext5:	
   683 ;; *************** function _i2c_master_init *****************
   684 ;; Defined at:
   685 ;;		line 11 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   699 ;;      Params:         0       0       0       0
   700 ;;      Locals:         0       0       0       0
   701 ;;      Temps:          0       0       0       0
   702 ;;      Totals:         0       0       0       0
   703 ;;Total ram usage:        0 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712     0796                     _i2c_master_init:	
   713                           ;psect for function _i2c_master_init
   714                           
   715     0796                     l630:	
   716                           ;incstack = 0
   717                           ; Regs used in _i2c_master_init: [wreg]
   718                           
   719                           
   720                           ;main.c: 14:     SSPEN = 1;
   721     0796  1283               	bcf	3,5	;RP0=0, select bank0
   722     0797  1303               	bcf	3,6	;RP1=0, select bank0
   723     0798  1694               	bsf	20,5	;volatile
   724                           
   725                           ;main.c: 15:     SSPM3 = 1;
   726     0799  1594               	bsf	20,3	;volatile
   727                           
   728                           ;main.c: 16:     SSPM2 = 0;
   729     079A  1114               	bcf	20,2	;volatile
   730                           
   731                           ;main.c: 17:     SSPM1 = 0;
   732     079B  1094               	bcf	20,1	;volatile
   733                           
   734                           ;main.c: 18:     SSPM0 = 0;
   735     079C  1014               	bcf	20,0	;volatile
   736     079D                     l632:
   737                           
   738                           ;main.c: 21:     SSPADD = ((4000000/4)/400000) - 1;
   739     079D  3001               	movlw	1
   740     079E  1683               	bsf	3,5	;RP0=1, select bank1
   741     079F  1303               	bcf	3,6	;RP1=0, select bank1
   742     07A0  0093               	movwf	19	;volatile
   743     07A1                     l634:
   744                           
   745                           ;main.c: 23:     TRISC3 = 1;
   746     07A1  1587               	bsf	7,3	;volatile
   747     07A2                     l636:
   748                           
   749                           ;main.c: 24:     TRISC4 = 1;
   750     07A2  1607               	bsf	7,4	;volatile
   751     07A3                     l45:
   752     07A3  0008               	return
   753     07A4                     __end_of_i2c_master_init:
   754     007E                     btemp	set	126	;btemp
   755     007E                     wtemp0	set	126
   756                           
   757                           	psect	config
   758                           
   759                           ;Config register CONFIG1 @ 0x2007
   760                           ;	Oscillator Selection bits
   761                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   762                           ;	Watchdog Timer Enable bit
   763                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   764                           ;	Power-up Timer Enable bit
   765                           ;	PWRTE = ON, PWRT enabled
   766                           ;	RE3/MCLR pin function select bit
   767                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   768                           ;	Code Protection bit
   769                           ;	CP = OFF, Program memory code protection is disabled
   770                           ;	Data Code Protection bit
   771                           ;	CPD = OFF, Data memory code protection is disabled
   772                           ;	Brown Out Reset Selection bits
   773                           ;	BOREN = ON, BOR enabled
   774                           ;	Internal External Switchover bit
   775                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   776                           ;	Fail-Safe Clock Monitor Enabled bit
   777                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   778                           ;	Low Voltage Programming Enable bit
   779                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   780                           ;	In-Circuit Debugger Mode bit
   781                           ;	DEBUG = 0x1, unprogrammed default
   782     2007                     	org	8199
   783     2007  23E4               	dw	9188
   784                           
   785                           ;Config register CONFIG2 @ 0x2008
   786                           ;	Brown-out Reset Selection bit
   787                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   788                           ;	Flash Program Memory Self Write Enable bits
   789                           ;	WRT = OFF, Write protection off
   790     2008                     	org	8200
   791     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_i2c_read
    _main->_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              1 COMMON     3     3      0
                    _i2c_master_init
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _i2c_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_read                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_master_init
   _i2c_read
   _i2c_start
   _i2c_stop
   _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Mar 02 12:57:53 2024

                     l51 0782                       l60 0786                       l45 07A3  
                     l63 078A                       l72 07AB                       l48 077E  
                     l74 07B0                       l66 0791                       l75 07BE  
                     l68 0795                       l69 0795                       l78 07C5  
                     u10 0782                       u11 0781                       u20 078A  
                     u21 0789                       u30 0795                       u31 0794  
                     u40 07B0                       u41 07AF                       u50 07C2  
                     u51 07C1                       u77 07F4                      l630 0796  
                    l632 079D                      l640 0783                      l634 07A1  
                    l650 07BD                      l642 078C                      l636 07A2  
                    l652 07C2                      l644 078F                      l660 07CC  
                    l646 07A5                      l638 077B                      l670 07DD  
                    l662 07CF                      l648 07B6                      l672 07E0  
                    l664 07D2                      l674 07E4                      l666 07D6  
                    l658 07C6                      l676 07EB                      l668 07DA  
                    l678 07EE                      _PEN 048A                      _SEN 0488  
                   _RCEN 048B                     _RSEN 0489                     _main 07C6  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ACKEN 048C                    _ACKDT 048D              i2c_read@ack 0070  
                  _PORTB 0006                    _SSPM0 00A0                    _SSPM1 00A1  
                  _SSPM2 00A2                    _SSPM3 00A3                    _TRISB 0086  
                  _SSPEN 00A5                    _SSPIF 0063                    status 0003  
                  wtemp0 007E          __initialization 07FD             __end_of_main 07FD  
       __end_of_i2c_read 07C6         __end_of_i2c_stop 078B                   ??_main 0071  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPBUF 0013          _i2c_master_init 0796  
__end_of__initialization 07FD           __pcstackCOMMON 0070        __end_of_i2c_start 0783  
      __end_of_i2c_write 0796                ?_i2c_read 0070                ?_i2c_stop 0070  
__end_of_i2c_master_init 07A4               __pmaintext 07C6                  _ACKSTAT 048E  
             ??_i2c_read 0070               ??_i2c_stop 0070                  __ptext1 078B  
                __ptext2 0783                  __ptext3 077B                  __ptext4 07A4  
                __ptext5 0796     end_of_initialization 07FD         ?_i2c_master_init 0070  
          i2c_write@data 0070      start_initialization 07FD                _i2c_start 077B  
              _i2c_write 078B                ___latbits 0001               ?_i2c_start 0070  
             ?_i2c_write 0070              ??_i2c_start 0070              ??_i2c_write 0070  
               _i2c_read 07A4                 _i2c_stop 0783        ??_i2c_master_init 0070  
