

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 01 16:54:36 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 22/03/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F883 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0009                     	;# 
    54     000A                     	;# 
    55     000B                     	;# 
    56     000C                     	;# 
    57     000D                     	;# 
    58     000E                     	;# 
    59     000E                     	;# 
    60     000F                     	;# 
    61     0010                     	;# 
    62     0011                     	;# 
    63     0012                     	;# 
    64     0013                     	;# 
    65     0014                     	;# 
    66     0015                     	;# 
    67     0015                     	;# 
    68     0016                     	;# 
    69     0017                     	;# 
    70     0018                     	;# 
    71     0019                     	;# 
    72     001A                     	;# 
    73     001B                     	;# 
    74     001B                     	;# 
    75     001C                     	;# 
    76     001D                     	;# 
    77     001E                     	;# 
    78     001F                     	;# 
    79     0081                     	;# 
    80     0085                     	;# 
    81     0086                     	;# 
    82     0087                     	;# 
    83     0089                     	;# 
    84     008C                     	;# 
    85     008D                     	;# 
    86     008E                     	;# 
    87     008F                     	;# 
    88     0090                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0093                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0095                     	;# 
    96     0096                     	;# 
    97     0097                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009A                     	;# 
   101     009B                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     0105                     	;# 
   107     0107                     	;# 
   108     0108                     	;# 
   109     0109                     	;# 
   110     010C                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     0185                     	;# 
   116     0187                     	;# 
   117     0188                     	;# 
   118     0189                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     001D                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     0087                     	;# 
   159     0089                     	;# 
   160     008C                     	;# 
   161     008D                     	;# 
   162     008E                     	;# 
   163     008F                     	;# 
   164     0090                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0093                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0095                     	;# 
   172     0096                     	;# 
   173     0097                     	;# 
   174     0098                     	;# 
   175     0099                     	;# 
   176     009A                     	;# 
   177     009B                     	;# 
   178     009C                     	;# 
   179     009D                     	;# 
   180     009E                     	;# 
   181     009F                     	;# 
   182     0105                     	;# 
   183     0107                     	;# 
   184     0108                     	;# 
   185     0109                     	;# 
   186     010C                     	;# 
   187     010C                     	;# 
   188     010D                     	;# 
   189     010E                     	;# 
   190     010F                     	;# 
   191     0185                     	;# 
   192     0187                     	;# 
   193     0188                     	;# 
   194     0189                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197     0019                     _TXREG	set	25
   198     00C7                     _SPEN	set	199
   199     0099                     _SPBRG	set	153
   200     043F                     _TRISC7	set	1087
   201     043E                     _TRISC6	set	1086
   202     04C5                     _TXEN	set	1221
   203     04C4                     _SYNC	set	1220
   204     04C2                     _BRGH	set	1218
   205     04C1                     _TRMT	set	1217
   206     0C3B                     _BRG16	set	3131
   207                           
   208                           	psect	cinit
   209     07FD                     start_initialization:	
   210                           ; #config settings
   211                           
   212     07FD                     __initialization:
   213     07FD                     end_of_initialization:	
   214                           ;End of C runtime variable initialization code
   215                           
   216     07FD                     __end_of__initialization:
   217     07FD  0183               	clrf	3
   218     07FE  118A  2FCA         	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	cstackCOMMON
   221     0070                     __pcstackCOMMON:
   222     0070                     ?_uart_write:
   223     0070                     ??_uart_write:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ?_main:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     uart_write@data:	
   230                           ; 1 bytes @ 0x0
   231                           
   232                           
   233                           ; 1 bytes @ 0x0
   234     0070                     	ds	1
   235     0071                     ??_main:
   236                           
   237                           ; 1 bytes @ 0x1
   238     0071                     	ds	3
   239     0074                     main@i:
   240                           
   241                           ; 1 bytes @ 0x4
   242     0074                     	ds	1
   243                           
   244                           	psect	maintext
   245     07CA                     __pmaintext:	
   246 ;;
   247 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   248 ;;
   249 ;; *************** function _main *****************
   250 ;; Defined at:
   251 ;;		line 14 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;  i               1    4[COMMON] unsigned char 
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : B00/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   265 ;;      Params:         0       0       0       0
   266 ;;      Locals:         1       0       0       0
   267 ;;      Temps:          3       0       0       0
   268 ;;      Totals:         4       0       0       0
   269 ;;Total ram usage:        4 bytes
   270 ;; Hardware stack levels required when called: 1
   271 ;; This function calls:
   272 ;;		_uart_write
   273 ;; This function is called by:
   274 ;;		Startup code after reset
   275 ;; This function uses a non-reentrant model
   276 ;;
   277                           
   278     07CA                     _main:	
   279                           ;psect for function _main
   280                           
   281     07CA                     l586:	
   282                           ;incstack = 0
   283                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   284                           
   285                           
   286                           ;main.c: 15:     uint8_t i;;main.c: 16:     BRGH = 1;
   287     07CA  1683               	bsf	3,5	;RP0=1, select bank1
   288     07CB  1303               	bcf	3,6	;RP1=0, select bank1
   289     07CC  1518               	bsf	24,2	;volatile
   290                           
   291                           ;main.c: 17:     BRG16 = 0;
   292     07CD  1683               	bsf	3,5	;RP0=1, select bank3
   293     07CE  1703               	bsf	3,6	;RP1=1, select bank3
   294     07CF  1187               	bcf	7,3	;volatile
   295                           
   296                           ;main.c: 18:     SYNC = 0;
   297     07D0  1683               	bsf	3,5	;RP0=1, select bank1
   298     07D1  1303               	bcf	3,6	;RP1=0, select bank1
   299     07D2  1218               	bcf	24,4	;volatile
   300     07D3                     l588:
   301                           
   302                           ;main.c: 19:     SPBRG = 25;
   303     07D3  3019               	movlw	25
   304     07D4  0099               	movwf	25	;volatile
   305     07D5                     l590:
   306                           
   307                           ;main.c: 20:     SPEN = 1;
   308     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   309     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   310     07D7  1798               	bsf	24,7	;volatile
   311     07D8                     l592:
   312                           
   313                           ;main.c: 21:     TXEN = 1;
   314     07D8  1683               	bsf	3,5	;RP0=1, select bank1
   315     07D9  1303               	bcf	3,6	;RP1=0, select bank1
   316     07DA  1698               	bsf	24,5	;volatile
   317     07DB                     l594:
   318                           
   319                           ;main.c: 23:     TRISC6 = 1;
   320     07DB  1707               	bsf	7,6	;volatile
   321     07DC                     l596:
   322                           
   323                           ;main.c: 24:     TRISC7 = 1;
   324     07DC  1787               	bsf	7,7	;volatile
   325     07DD                     l33:	
   326                           ;main.c: 27:     while(1){
   327                           
   328                           
   329                           ;main.c: 28:         for(i='a';i<='z';i++){
   330     07DD  3061               	movlw	97
   331     07DE  00F4               	movwf	main@i
   332     07DF                     l600:
   333                           
   334                           ;main.c: 29:             uart_write(i);
   335     07DF  0874               	movf	main@i,w
   336     07E0  118A  27BE  118A   	fcall	_uart_write
   337     07E3                     l602:
   338                           
   339                           ;main.c: 30:             _delay((unsigned long)((200)*(4000000/4000.0)));
   340     07E3  3002               	movlw	2
   341     07E4  00F3               	movwf	??_main+2
   342     07E5  3004               	movlw	4
   343     07E6  00F2               	movwf	??_main+1
   344     07E7  30BA               	movlw	186
   345     07E8  00F1               	movwf	??_main
   346     07E9                     u37:
   347     07E9  0BF1               	decfsz	??_main,f
   348     07EA  2FE9               	goto	u37
   349     07EB  0BF2               	decfsz	??_main+1,f
   350     07EC  2FE9               	goto	u37
   351     07ED  0BF3               	decfsz	??_main+2,f
   352     07EE  2FE9               	goto	u37
   353     07EF  0000               	nop
   354     07F0                     l604:
   355                           
   356                           ;main.c: 31:         }
   357     07F0  3001               	movlw	1
   358     07F1  00FF               	movwf	btemp+1
   359     07F2  087F               	movf	btemp+1,w
   360     07F3  07F4               	addwf	main@i,f
   361     07F4                     l606:
   362     07F4  307B               	movlw	123
   363     07F5  0274               	subwf	main@i,w
   364     07F6  1C03               	skipc
   365     07F7  2FF9               	goto	u21
   366     07F8  2FFA               	goto	u20
   367     07F9                     u21:
   368     07F9  2FDF               	goto	l600
   369     07FA                     u20:
   370     07FA  2FDD               	goto	l33
   371     07FB  118A  2800         	ljmp	start
   372     07FD                     __end_of_main:
   373                           
   374                           	psect	text1
   375     07BE                     __ptext1:	
   376 ;; *************** function _uart_write *****************
   377 ;; Defined at:
   378 ;;		line 9 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;  data            1    wreg     unsigned char 
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  data            1    0[COMMON] unsigned char 
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   392 ;;      Params:         0       0       0       0
   393 ;;      Locals:         1       0       0       0
   394 ;;      Temps:          0       0       0       0
   395 ;;      Totals:         1       0       0       0
   396 ;;Total ram usage:        1 bytes
   397 ;; Hardware stack levels used: 1
   398 ;; This function calls:
   399 ;;		Nothing
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405     07BE                     _uart_write:	
   406                           ;psect for function _uart_write
   407                           
   408                           
   409                           ;incstack = 0
   410                           ; Regs used in _uart_write: [wreg]
   411                           ;uart_write@data stored from wreg
   412     07BE  00F0               	movwf	uart_write@data
   413     07BF                     l582:
   414     07BF                     l25:	
   415                           ;main.c: 10:     while(!TRMT);
   416                           
   417     07BF  1683               	bsf	3,5	;RP0=1, select bank1
   418     07C0  1303               	bcf	3,6	;RP1=0, select bank1
   419     07C1  1C98               	btfss	24,1	;volatile
   420     07C2  2FC4               	goto	u11
   421     07C3  2FC5               	goto	u10
   422     07C4                     u11:
   423     07C4  2FBF               	goto	l25
   424     07C5                     u10:
   425     07C5                     l584:
   426                           
   427                           ;main.c: 11:     TXREG = data;
   428     07C5  0870               	movf	uart_write@data,w
   429     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   430     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   431     07C8  0099               	movwf	25	;volatile
   432     07C9                     l28:
   433     07C9  0008               	return
   434     07CA                     __end_of_uart_write:
   435     007E                     btemp	set	126	;btemp
   436     007E                     wtemp0	set	126
   437                           
   438                           	psect	config
   439                           
   440                           ;Config register CONFIG1 @ 0x2007
   441                           ;	Oscillator Selection bits
   442                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   443                           ;	Watchdog Timer Enable bit
   444                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   445                           ;	Power-up Timer Enable bit
   446                           ;	PWRTE = ON, PWRT enabled
   447                           ;	RE3/MCLR pin function select bit
   448                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   449                           ;	Code Protection bit
   450                           ;	CP = OFF, Program memory code protection is disabled
   451                           ;	Data Code Protection bit
   452                           ;	CPD = OFF, Data memory code protection is disabled
   453                           ;	Brown Out Reset Selection bits
   454                           ;	BOREN = ON, BOR enabled
   455                           ;	Internal External Switchover bit
   456                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   457                           ;	Fail-Safe Clock Monitor Enabled bit
   458                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   459                           ;	Low Voltage Programming Enable bit
   460                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   461                           ;	In-Circuit Debugger Mode bit
   462                           ;	DEBUG = 0x1, unprogrammed default
   463     2007                     	org	8199
   464     2007  23E4               	dw	9188
   465                           
   466                           ;Config register CONFIG2 @ 0x2008
   467                           ;	Brown-out Reset Selection bit
   468                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   469                           ;	Flash Program Memory Self Write Enable bits
   470                           ;	WRT = OFF, Write protection off
   471     2008                     	org	8200
   472     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_uart_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      60
                                              1 COMMON     4     4      0
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 01 16:54:36 2024

         uart_write@data 0070                       l25 07BF                       l33 07DD  
                     l28 07C9                       u10 07C5                       u11 07C4  
                     u20 07FA                       u21 07F9                       u37 07E9  
                    l600 07DF                      l602 07E3                      l604 07F0  
                    l606 07F4                      l582 07BF                      l590 07D5  
                    l584 07C5                      l592 07D8                      l594 07DB  
                    l586 07CA                      l596 07DC                      l588 07D3  
                   _BRGH 04C2                     _SPEN 00C7                     _TRMT 04C1  
                   _TXEN 04C5                     _SYNC 04C4                     _main 07CA  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _BRG16 0C3B                    _SPBRG 0099                    _TXREG 0019  
                  main@i 0074                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 07FD                   ??_main 0071  
                 _TRISC6 043E                   _TRISC7 043F  __end_of__initialization 07FD  
         __pcstackCOMMON 0070               __pmaintext 07CA                  __ptext1 07BE  
   end_of_initialization 07FD               _uart_write 07BE      start_initialization 07FD  
            ?_uart_write 0070                ___latbits 0001             ??_uart_write 0070  
     __end_of_uart_write 07CA  
