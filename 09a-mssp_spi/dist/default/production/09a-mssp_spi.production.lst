

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Mar 02 15:53:37 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F883 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0089                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     008F                     	;# 
    89     0090                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0093                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0095                     	;# 
    97     0096                     	;# 
    98     0097                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009A                     	;# 
   102     009B                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     0105                     	;# 
   108     0107                     	;# 
   109     0108                     	;# 
   110     0109                     	;# 
   111     010C                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     0185                     	;# 
   117     0187                     	;# 
   118     0188                     	;# 
   119     0189                     	;# 
   120     018C                     	;# 
   121     018D                     	;# 
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     008F                     	;# 
   165     0090                     	;# 
   166     0091                     	;# 
   167     0092                     	;# 
   168     0093                     	;# 
   169     0093                     	;# 
   170     0093                     	;# 
   171     0094                     	;# 
   172     0095                     	;# 
   173     0096                     	;# 
   174     0097                     	;# 
   175     0098                     	;# 
   176     0099                     	;# 
   177     009A                     	;# 
   178     009B                     	;# 
   179     009C                     	;# 
   180     009D                     	;# 
   181     009E                     	;# 
   182     009F                     	;# 
   183     0105                     	;# 
   184     0107                     	;# 
   185     0108                     	;# 
   186     0109                     	;# 
   187     010C                     	;# 
   188     010C                     	;# 
   189     010D                     	;# 
   190     010E                     	;# 
   191     010F                     	;# 
   192     0185                     	;# 
   193     0187                     	;# 
   194     0188                     	;# 
   195     0189                     	;# 
   196     018C                     	;# 
   197     018D                     	;# 
   198     0005                     _PORTA	set	5
   199     0013                     _SSPBUF	set	19
   200     003F                     _RC7	set	63
   201     00A4                     _CKP	set	164
   202     00A5                     _SSPEN	set	165
   203     00A0                     _SSPM0	set	160
   204     00A1                     _SSPM1	set	161
   205     00A2                     _SSPM2	set	162
   206     00A3                     _SSPM3	set	163
   207     0085                     _TRISA	set	133
   208     04A7                     _SMP	set	1191
   209     04A6                     _CKE	set	1190
   210     043B                     _TRISC3	set	1083
   211     043C                     _TRISC4	set	1084
   212     043D                     _TRISC5	set	1085
   213     043F                     _TRISC7	set	1087
   214     04A0                     _BF	set	1184
   215     0188                     _ANSEL	set	392
   216                           
   217                           	psect	cinit
   218     07FD                     start_initialization:	
   219                           ; #config settings
   220                           
   221     07FD                     __initialization:
   222     07FD                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225     07FD                     __end_of__initialization:
   226     07FD  0183               	clrf	3
   227     07FE  118A  2F9A         	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	cstackCOMMON
   230     0070                     __pcstackCOMMON:
   231     0070                     ?_spi_write:
   232     0070                     ??_spi_write:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ?_spi_read:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     ?_main:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     spi_write@data:	
   242                           ; 1 bytes @ 0x0
   243                           
   244                           
   245                           ; 1 bytes @ 0x0
   246     0070                     	ds	1
   247     0071                     ??_spi_read:
   248     0071                     spi_read@data:	
   249                           ; 1 bytes @ 0x1
   250                           
   251                           
   252                           ; 1 bytes @ 0x1
   253     0071                     	ds	1
   254     0072                     ??_main:
   255                           
   256                           ; 1 bytes @ 0x2
   257     0072                     	ds	2
   258     0074                     main@i:
   259                           
   260                           ; 1 bytes @ 0x4
   261     0074                     	ds	1
   262                           
   263                           	psect	maintext
   264     079A                     __pmaintext:	
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 24 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  i               1    4[COMMON] unsigned char 
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, pclath, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : B00/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   284 ;;      Params:         0       0       0       0
   285 ;;      Locals:         1       0       0       0
   286 ;;      Temps:          2       0       0       0
   287 ;;      Totals:         3       0       0       0
   288 ;;Total ram usage:        3 bytes
   289 ;; Hardware stack levels required when called: 2
   290 ;; This function calls:
   291 ;;		_spi_read
   292 ;;		_spi_write
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298     079A                     _main:	
   299                           ;psect for function _main
   300                           
   301     079A                     l613:	
   302                           ;incstack = 0
   303                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   304                           
   305                           
   306                           ;main.c: 25:     uint8_t i;;main.c: 26:     TRISA = 0;
   307     079A  1683               	bsf	3,5	;RP0=1, select bank1
   308     079B  1303               	bcf	3,6	;RP1=0, select bank1
   309     079C  0185               	clrf	5	;volatile
   310                           
   311                           ;main.c: 27:     ANSEL = 0;
   312     079D  1683               	bsf	3,5	;RP0=1, select bank3
   313     079E  1703               	bsf	3,6	;RP1=1, select bank3
   314     079F  0188               	clrf	8	;volatile
   315     07A0                     l615:
   316                           
   317                           ;main.c: 29:     TRISC7 = 0;
   318     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   319     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   320     07A2  1387               	bcf	7,7	;volatile
   321     07A3                     l617:
   322                           
   323                           ;main.c: 30:     TRISC5 = 0;
   324     07A3  1287               	bcf	7,5	;volatile
   325     07A4                     l619:
   326                           
   327                           ;main.c: 31:     TRISC4 = 1;
   328     07A4  1607               	bsf	7,4	;volatile
   329     07A5                     l621:
   330                           
   331                           ;main.c: 32:     TRISC3 = 0;
   332     07A5  1187               	bcf	7,3	;volatile
   333     07A6                     l623:
   334                           
   335                           ;main.c: 34:     SSPM3 = 0;
   336     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   337     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   338     07A8  1194               	bcf	20,3	;volatile
   339     07A9                     l625:
   340                           
   341                           ;main.c: 35:     SSPM2 = 0;
   342     07A9  1114               	bcf	20,2	;volatile
   343     07AA                     l627:
   344                           
   345                           ;main.c: 36:     SSPM1 = 0;
   346     07AA  1094               	bcf	20,1	;volatile
   347     07AB                     l629:
   348                           
   349                           ;main.c: 37:     SSPM0 = 0;
   350     07AB  1014               	bcf	20,0	;volatile
   351     07AC                     l631:
   352                           
   353                           ;main.c: 39:     SSPEN = 1;
   354     07AC  1694               	bsf	20,5	;volatile
   355     07AD                     l633:
   356                           
   357                           ;main.c: 41:     CKP = 0;
   358     07AD  1214               	bcf	20,4	;volatile
   359     07AE                     l635:
   360                           
   361                           ;main.c: 42:     CKE = 0;
   362     07AE  1683               	bsf	3,5	;RP0=1, select bank1
   363     07AF  1303               	bcf	3,6	;RP1=0, select bank1
   364     07B0  1314               	bcf	20,6	;volatile
   365     07B1                     l637:
   366                           
   367                           ;main.c: 44:     SMP = 0;
   368     07B1  1394               	bcf	20,7	;volatile
   369     07B2                     l639:
   370                           
   371                           ;main.c: 46:     RC7 = 1;
   372     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   373     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   374     07B4  1787               	bsf	7,7	;volatile
   375     07B5                     l641:
   376                           
   377                           ;main.c: 47:     _delay((unsigned long)((100)*(4000000/4000.0)));
   378     07B5  3082               	movlw	130
   379     07B6  00F3               	movwf	??_main+1
   380     07B7  30DD               	movlw	221
   381     07B8  00F2               	movwf	??_main
   382     07B9                     u27:
   383     07B9  0BF2               	decfsz	??_main,f
   384     07BA  2FB9               	goto	u27
   385     07BB  0BF3               	decfsz	??_main+1,f
   386     07BC  2FB9               	goto	u27
   387     07BD  2FBE               	nop2
   388     07BE                     l643:
   389                           
   390                           ;main.c: 66:     RC7=0;
   391     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   392     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   393     07C0  1387               	bcf	7,7	;volatile
   394     07C1                     l645:
   395                           
   396                           ;main.c: 67:     spi_write(0x03);
   397     07C1  3003               	movlw	3
   398     07C2  118A  2788  118A   	fcall	_spi_write
   399     07C5                     l647:
   400                           
   401                           ;main.c: 68:     _delay((unsigned long)((10)*(4000000/4000.0)));
   402     07C5  300D               	movlw	13
   403     07C6  00F3               	movwf	??_main+1
   404     07C7  30FB               	movlw	251
   405     07C8  00F2               	movwf	??_main
   406     07C9                     u37:
   407     07C9  0BF2               	decfsz	??_main,f
   408     07CA  2FC9               	goto	u37
   409     07CB  0BF3               	decfsz	??_main+1,f
   410     07CC  2FC9               	goto	u37
   411     07CD  2FCE               	nop2
   412     07CE                     l649:
   413                           
   414                           ;main.c: 69:     spi_write(0);
   415     07CE  3000               	movlw	0
   416     07CF  118A  2788  118A   	fcall	_spi_write
   417     07D2                     l651:
   418                           
   419                           ;main.c: 70:     _delay((unsigned long)((10)*(4000000/4000.0)));
   420     07D2  300D               	movlw	13
   421     07D3  00F3               	movwf	??_main+1
   422     07D4  30FB               	movlw	251
   423     07D5  00F2               	movwf	??_main
   424     07D6                     u47:
   425     07D6  0BF2               	decfsz	??_main,f
   426     07D7  2FD6               	goto	u47
   427     07D8  0BF3               	decfsz	??_main+1,f
   428     07D9  2FD6               	goto	u47
   429     07DA  2FDB               	nop2
   430     07DB                     l653:
   431                           
   432                           ;main.c: 71:     spi_write(0);
   433     07DB  3000               	movlw	0
   434     07DC  118A  2788  118A   	fcall	_spi_write
   435     07DF                     l655:
   436                           
   437                           ;main.c: 72:     _delay((unsigned long)((10)*(4000000/4000.0)));
   438     07DF  300D               	movlw	13
   439     07E0  00F3               	movwf	??_main+1
   440     07E1  30FB               	movlw	251
   441     07E2  00F2               	movwf	??_main
   442     07E3                     u57:
   443     07E3  0BF2               	decfsz	??_main,f
   444     07E4  2FE3               	goto	u57
   445     07E5  0BF3               	decfsz	??_main+1,f
   446     07E6  2FE3               	goto	u57
   447     07E7  2FE8               	nop2
   448     07E8                     l657:
   449                           
   450                           ;main.c: 73:     i=spi_read();
   451     07E8  118A  2781  118A   	fcall	_spi_read
   452     07EB  00F4               	movwf	main@i
   453     07EC                     l659:
   454                           
   455                           ;main.c: 74:     _delay((unsigned long)((10)*(4000000/4000.0)));
   456     07EC  300D               	movlw	13
   457     07ED  00F3               	movwf	??_main+1
   458     07EE  30FB               	movlw	251
   459     07EF  00F2               	movwf	??_main
   460     07F0                     u67:
   461     07F0  0BF2               	decfsz	??_main,f
   462     07F1  2FF0               	goto	u67
   463     07F2  0BF3               	decfsz	??_main+1,f
   464     07F3  2FF0               	goto	u67
   465     07F4  2FF5               	nop2
   466     07F5                     l661:
   467                           
   468                           ;main.c: 75:     RC7 = 1;
   469     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   470     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   471     07F7  1787               	bsf	7,7	;volatile
   472     07F8                     l663:
   473                           
   474                           ;main.c: 76:     PORTA = i;
   475     07F8  0874               	movf	main@i,w
   476     07F9  0085               	movwf	5	;volatile
   477     07FA                     l52:	
   478                           ;main.c: 77:     while(1){
   479                           
   480     07FA                     l53:	
   481                           ;main.c: 79:     }
   482                           
   483     07FA  2FFA               	goto	l52
   484     07FB  118A  2800         	ljmp	start
   485     07FD                     __end_of_main:
   486                           
   487                           	psect	text1
   488     0781                     __ptext1:	
   489 ;; *************** function _spi_read *****************
   490 ;; Defined at:
   491 ;;		line 18 in file "main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  data            1    1[COMMON] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      unsigned char 
   498 ;; Registers used:
   499 ;;		wreg, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   505 ;;      Params:         0       0       0       0
   506 ;;      Locals:         1       0       0       0
   507 ;;      Temps:          0       0       0       0
   508 ;;      Totals:         1       0       0       0
   509 ;;Total ram usage:        1 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; Hardware stack levels required when called: 1
   512 ;; This function calls:
   513 ;;		_spi_write
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519     0781                     _spi_read:	
   520                           ;psect for function _spi_read
   521                           
   522     0781                     l607:	
   523                           ;incstack = 0
   524                           ; Regs used in _spi_read: [wreg+pclath+cstack]
   525                           
   526                           
   527                           ;main.c: 19:   uint8_t data;;main.c: 20:   data = spi_write(0x00);
   528     0781  3000               	movlw	0
   529     0782  118A  2788  118A   	fcall	_spi_write
   530     0785  00F1               	movwf	spi_read@data
   531     0786                     l609:
   532                           
   533                           ;main.c: 21:   return data;
   534     0786  0871               	movf	spi_read@data,w
   535     0787                     l47:
   536     0787  0008               	return
   537     0788                     __end_of_spi_read:
   538                           
   539                           	psect	text2
   540     0788                     __ptext2:	
   541 ;; *************** function _spi_write *****************
   542 ;; Defined at:
   543 ;;		line 11 in file "main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;  data            1    wreg     unsigned char 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  data            1    0[COMMON] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      unsigned char 
   550 ;; Registers used:
   551 ;;		wreg
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   557 ;;      Params:         0       0       0       0
   558 ;;      Locals:         1       0       0       0
   559 ;;      Temps:          0       0       0       0
   560 ;;      Totals:         1       0       0       0
   561 ;;Total ram usage:        1 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_spi_read
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571     0788                     _spi_write:	
   572                           ;psect for function _spi_write
   573                           
   574                           
   575                           ;incstack = 0
   576                           ; Regs used in _spi_write: [wreg]
   577                           ;spi_write@data stored from wreg
   578     0788  00F0               	movwf	spi_write@data
   579     0789                     l599:
   580                           
   581                           ;main.c: 12:     BF = 0;
   582     0789  1683               	bsf	3,5	;RP0=1, select bank1
   583     078A  1303               	bcf	3,6	;RP1=0, select bank1
   584     078B  1014               	bcf	20,0	;volatile
   585     078C                     l601:
   586                           
   587                           ;main.c: 13:     SSPBUF = data;
   588     078C  0870               	movf	spi_write@data,w
   589     078D  1283               	bcf	3,5	;RP0=0, select bank0
   590     078E  1303               	bcf	3,6	;RP1=0, select bank0
   591     078F  0093               	movwf	19	;volatile
   592     0790                     l41:	
   593                           ;main.c: 14:     while(BF);
   594                           
   595     0790  1683               	bsf	3,5	;RP0=1, select bank1
   596     0791  1303               	bcf	3,6	;RP1=0, select bank1
   597     0792  1814               	btfsc	20,0	;volatile
   598     0793  2F95               	goto	u11
   599     0794  2F96               	goto	u10
   600     0795                     u11:
   601     0795  2F90               	goto	l41
   602     0796                     u10:
   603     0796                     l603:
   604                           
   605                           ;main.c: 15:     return SSPBUF;
   606     0796  1283               	bcf	3,5	;RP0=0, select bank0
   607     0797  1303               	bcf	3,6	;RP1=0, select bank0
   608     0798  0813               	movf	19,w	;volatile
   609     0799                     l44:
   610     0799  0008               	return
   611     079A                     __end_of_spi_write:
   612     007E                     btemp	set	126	;btemp
   613     007E                     wtemp0	set	126
   614                           
   615                           	psect	config
   616                           
   617                           ;Config register CONFIG1 @ 0x2007
   618                           ;	Oscillator Selection bits
   619                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   620                           ;	Watchdog Timer Enable bit
   621                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   622                           ;	Power-up Timer Enable bit
   623                           ;	PWRTE = ON, PWRT enabled
   624                           ;	RE3/MCLR pin function select bit
   625                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   626                           ;	Code Protection bit
   627                           ;	CP = OFF, Program memory code protection is disabled
   628                           ;	Data Code Protection bit
   629                           ;	CPD = OFF, Data memory code protection is disabled
   630                           ;	Brown Out Reset Selection bits
   631                           ;	BOREN = ON, BOR enabled
   632                           ;	Internal External Switchover bit
   633                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   634                           ;	Fail-Safe Clock Monitor Enabled bit
   635                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   636                           ;	Low Voltage Programming Enable bit
   637                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   638                           ;	In-Circuit Debugger Mode bit
   639                           ;	DEBUG = 0x1, unprogrammed default
   640     2007                     	org	8199
   641     2007  23E4               	dw	9188
   642                           
   643                           ;Config register CONFIG2 @ 0x2008
   644                           ;	Brown-out Reset Selection bit
   645                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   646                           ;	Flash Program Memory Self Write Enable bits
   647                           ;	WRT = OFF, Write protection off
   648     2008                     	org	8200
   649     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spi_read
    _spi_read->_spi_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      60
                                              2 COMMON     3     3      0
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _spi_read                                             1     1      0      30
                                              1 COMMON     1     1      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _spi_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spi_read
     _spi_write
   _spi_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Mar 02 15:53:37 2024

                     _BF 04A0                       l41 0790                       l44 0799  
                     l52 07FA                       l53 07FA                       l47 0787  
                     u10 0796                       u11 0795                       u27 07B9  
                     u37 07C9                       u47 07D6                       u57 07E3  
                     u67 07F0                      l601 078C                      l603 0796  
                    l621 07A5                      l613 079A                      l607 0781  
                    l631 07AC                      l623 07A6                      l615 07A0  
                    l609 0786                      l641 07B5                      l633 07AD  
                    l625 07A9                      l617 07A3                      l651 07D2  
                    l643 07BE                      l635 07AE                      l627 07AA  
                    l619 07A4                      l661 07F5                      l653 07DB  
                    l645 07C1                      l637 07B1                      l629 07AB  
                    l663 07F8                      l655 07DF                      l647 07C5  
                    l639 07B2                      l657 07E8                      l649 07CE  
                    l659 07EC                      l599 0789                      _CKE 04A6  
                    _CKP 00A4                      _RC7 003F                      _SMP 04A7  
                   _main 079A                     btemp 007E             spi_read@data 0071  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _SSPM0 00A0                    _SSPM1 00A1  
                  _SSPM2 00A2                    _SSPM3 00A3                    _TRISA 0085  
                  _SSPEN 00A5                    main@i 0074                    status 0003  
                  wtemp0 007E          __initialization 07FD             __end_of_main 07FD  
                 ??_main 0072                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _TRISC7 043F                   _SSPBUF 0013  
       __end_of_spi_read 0788  __end_of__initialization 07FD            spi_write@data 0070  
         __pcstackCOMMON 0070               __pmaintext 079A                ?_spi_read 0070  
                __ptext1 0781                  __ptext2 0788     end_of_initialization 07FD  
      __end_of_spi_write 079A               ??_spi_read 0071      start_initialization 07FD  
              ___latbits 0001                _spi_write 0788               ?_spi_write 0070  
               _spi_read 0781              ??_spi_write 0070  
