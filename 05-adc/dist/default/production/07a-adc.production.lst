

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Feb 28 07:49:25 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 22/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F883 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     008F                     	;# 
   177     0090                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0097                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009A                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     0105                     	;# 
   196     0107                     	;# 
   197     0108                     	;# 
   198     0109                     	;# 
   199     010C                     	;# 
   200     010C                     	;# 
   201     010D                     	;# 
   202     010E                     	;# 
   203     010F                     	;# 
   204     0185                     	;# 
   205     0187                     	;# 
   206     0188                     	;# 
   207     0189                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     0000                     	;# 
   211     0001                     	;# 
   212     0002                     	;# 
   213     0003                     	;# 
   214     0004                     	;# 
   215     0005                     	;# 
   216     0006                     	;# 
   217     0007                     	;# 
   218     0009                     	;# 
   219     000A                     	;# 
   220     000B                     	;# 
   221     000C                     	;# 
   222     000D                     	;# 
   223     000E                     	;# 
   224     000E                     	;# 
   225     000F                     	;# 
   226     0010                     	;# 
   227     0011                     	;# 
   228     0012                     	;# 
   229     0013                     	;# 
   230     0014                     	;# 
   231     0015                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001D                     	;# 
   242     001E                     	;# 
   243     001F                     	;# 
   244     0081                     	;# 
   245     0085                     	;# 
   246     0086                     	;# 
   247     0087                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     001E                     _ADRESH	set	30
   287     0038                     _RC0	set	56
   288     003C                     _RC4	set	60
   289     003D                     _RC5	set	61
   290     003E                     _RC6	set	62
   291     003F                     _RC7	set	63
   292     0039                     _RC1	set	57
   293     00F9                     _GO_nDONE	set	249
   294     00F8                     _ADON	set	248
   295     00FE                     _ADCS0	set	254
   296     00FF                     _ADCS1	set	255
   297     00FA                     _CHS0	set	250
   298     00FB                     _CHS1	set	251
   299     00FC                     _CHS2	set	252
   300     00FD                     _CHS3	set	253
   301     009E                     _ADRESL	set	158
   302     0087                     _TRISC	set	135
   303     04FF                     _ADFM	set	1279
   304     04FD                     _VCFG1	set	1277
   305     04FC                     _VCFG0	set	1276
   306     0428                     _TRISA0	set	1064
   307     0C40                     _ANS0	set	3136
   308                           
   309                           	psect	strings
   310     0002                     __pstrings:
   311     0002                     stringtab:
   312     0002                     __stringtab:
   313     0002                     stringcode:	
   314                           ;	String table - string pointers are 1 byte each
   315                           
   316     0002                     stringdir:
   317     0002  3000               	movlw	high stringdir
   318     0003  008A               	movwf	10
   319     0004  0804               	movf	4,w
   320     0005  0A84               	incf	4,f
   321     0006  0782               	addwf	2,f
   322     0007                     __stringbase:
   323     0007  3400               	retlw	0
   324     0008                     __end_of__stringtab:
   325     0008                     STR_2:
   326     0008  3447               	retlw	71	;'G'
   327     0009  3469               	retlw	105	;'i'
   328     000A  3461               	retlw	97	;'a'
   329     000B  3454               	retlw	84	;'T'
   330     000C  3472               	retlw	114	;'r'
   331     000D  3469               	retlw	105	;'i'
   332     000E  3420               	retlw	32	;' '
   333     000F  3441               	retlw	65	;'A'
   334     0010  3444               	retlw	68	;'D'
   335     0011  3443               	retlw	67	;'C'
   336     0012  3420               	retlw	32	;' '
   337     0013  3431               	retlw	49	;'1'
   338     0014  3430               	retlw	48	;'0'
   339     0015  3462               	retlw	98	;'b'
   340     0016  3469               	retlw	105	;'i'
   341     0017  3474               	retlw	116	;'t'
   342     0018  343A               	retlw	58	;':'
   343     0019  3420               	retlw	32	;' '
   344     001A  3400               	retlw	0
   345     001B                     STR_1:
   346     001B  344D               	retlw	77	;'M'
   347     001C  3469               	retlw	105	;'i'
   348     001D  346E               	retlw	110	;'n'
   349     001E  3468               	retlw	104	;'h'
   350     001F  3420               	retlw	32	;' '
   351     0020  3456               	retlw	86	;'V'
   352     0021  3475               	retlw	117	;'u'
   353     0022  3400               	retlw	0
   354                           
   355                           	psect	cinit
   356     07FD                     start_initialization:	
   357                           ; #config settings
   358                           
   359     07FD                     __initialization:
   360     07FD                     end_of_initialization:	
   361                           ;End of C runtime variable initialization code
   362                           
   363     07FD                     __end_of__initialization:
   364     07FD  0183               	clrf	3
   365     07FE  118A  2F90         	ljmp	_main	;jump to C main() function
   366                           
   367                           	psect	cstackCOMMON
   368     0070                     __pcstackCOMMON:
   369     0070                     ?_lcdInit:
   370     0070                     ?_lcdText:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0070                     ?_lcdClear:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0070                     ?_main:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0070                     ?_clockLcd:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0070                     ??_clockLcd:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0070                     ?_lcdWriteHigh:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0070                     ??_lcdWriteHigh:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     0070                     ?_lcdWriteLow:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0070                     ??_lcdWriteLow:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0070                     ?_lcdCmd:	
   398                           ; 1 bytes @ 0x0
   399                           
   400     0070                     ?_lcdChar:	
   401                           ; 1 bytes @ 0x0
   402                           
   403     0070                     ?___lldiv:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0070                     ?___llmod:	
   407                           ; 4 bytes @ 0x0
   408                           
   409     0070                     ___lldiv@divisor:	
   410                           ; 4 bytes @ 0x0
   411                           
   412     0070                     ___llmod@divisor:	
   413                           ; 4 bytes @ 0x0
   414                           
   415                           
   416                           ; 4 bytes @ 0x0
   417     0070                     	ds	1
   418     0071                     lcdWriteHigh@b:
   419     0071                     lcdWriteLow@b:	
   420                           ; 1 bytes @ 0x1
   421                           
   422                           
   423                           ; 1 bytes @ 0x1
   424     0071                     	ds	1
   425     0072                     ??_lcdCmd:
   426     0072                     ??_lcdChar:	
   427                           ; 1 bytes @ 0x2
   428                           
   429                           
   430                           ; 1 bytes @ 0x2
   431     0072                     	ds	1
   432     0073                     lcdChar@b:
   433                           
   434                           ; 1 bytes @ 0x3
   435     0073                     	ds	1
   436     0074                     ??_lcdText:
   437     0074                     lcdCmd@b:	
   438                           ; 1 bytes @ 0x4
   439                           
   440     0074                     lcdText@i:	
   441                           ; 1 bytes @ 0x4
   442                           
   443     0074                     ___lldiv@dividend:	
   444                           ; 1 bytes @ 0x4
   445                           
   446     0074                     ___llmod@dividend:	
   447                           ; 4 bytes @ 0x4
   448                           
   449                           
   450                           ; 4 bytes @ 0x4
   451     0074                     	ds	1
   452     0075                     ??_lcdInit:
   453     0075                     ??_lcdClear:	
   454                           ; 1 bytes @ 0x5
   455                           
   456     0075                     ?_lcdSet:	
   457                           ; 1 bytes @ 0x5
   458                           
   459     0075                     lcdSet@y:	
   460                           ; 1 bytes @ 0x5
   461                           
   462     0075                     lcdText@str:	
   463                           ; 1 bytes @ 0x5
   464                           
   465                           
   466                           ; 1 bytes @ 0x5
   467     0075                     	ds	1
   468     0076                     ??_lcdSet:
   469     0076                     lcdSet@add:	
   470                           ; 1 bytes @ 0x6
   471                           
   472                           
   473                           ; 1 bytes @ 0x6
   474     0076                     	ds	1
   475     0077                     lcdSet@x:
   476                           
   477                           ; 1 bytes @ 0x7
   478     0077                     	ds	1
   479     0078                     ??___lldiv:
   480     0078                     ??___llmod:	
   481                           ; 1 bytes @ 0x8
   482                           
   483                           
   484                           ; 1 bytes @ 0x8
   485     0078                     	ds	1
   486     0079                     ___llmod@counter:
   487     0079                     ___lldiv@quotient:	
   488                           ; 1 bytes @ 0x9
   489                           
   490                           
   491                           ; 4 bytes @ 0x9
   492     0079                     	ds	4
   493     007D                     ___lldiv@counter:
   494                           
   495                           ; 1 bytes @ 0xD
   496     007D                     	ds	1
   497                           
   498                           	psect	cstackBANK0
   499     0020                     __pcstackBANK0:
   500     0020                     ?_lcdNumber:
   501     0020                     lcdNumber@n:	
   502                           ; 1 bytes @ 0x0
   503                           
   504                           
   505                           ; 4 bytes @ 0x0
   506     0020                     	ds	4
   507     0024                     ??_lcdNumber:
   508                           
   509                           ; 1 bytes @ 0x4
   510     0024                     	ds	2
   511     0026                     lcdNumber@num:
   512                           
   513                           ; 10 bytes @ 0x6
   514     0026                     	ds	10
   515     0030                     lcdNumber@i:
   516                           
   517                           ; 1 bytes @ 0x10
   518     0030                     	ds	1
   519     0031                     lcdNumber@j:
   520                           
   521                           ; 1 bytes @ 0x11
   522     0031                     	ds	1
   523     0032                     ??_main:
   524                           
   525                           ; 1 bytes @ 0x12
   526     0032                     	ds	6
   527     0038                     main@value:
   528                           
   529                           ; 2 bytes @ 0x18
   530     0038                     	ds	2
   531                           
   532                           	psect	maintext
   533     0790                     __pmaintext:	
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 9 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  value           2   24[BANK0 ] unsigned short 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : B00/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   553 ;;      Params:         0       0       0       0
   554 ;;      Locals:         0       2       0       0
   555 ;;      Temps:          0       6       0       0
   556 ;;      Totals:         0       8       0       0
   557 ;;Total ram usage:        8 bytes
   558 ;; Hardware stack levels required when called: 3
   559 ;; This function calls:
   560 ;;		_lcdClear
   561 ;;		_lcdInit
   562 ;;		_lcdNumber
   563 ;;		_lcdSet
   564 ;;		_lcdText
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570     0790                     _main:	
   571                           ;psect for function _main
   572                           
   573     0790                     l1049:	
   574                           ;incstack = 0
   575                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   576                           
   577                           
   578                           ;main.c: 10:     uint16_t value;;main.c: 11:     TRISC = 0;
   579     0790  1683               	bsf	3,5	;RP0=1, select bank1
   580     0791  1303               	bcf	3,6	;RP1=0, select bank1
   581     0792  0187               	clrf	7	;volatile
   582     0793                     l1051:
   583                           
   584                           ;main.c: 12:     TRISA0 = 1;
   585     0793  1405               	bsf	5,0	;volatile
   586     0794                     l1053:
   587                           
   588                           ;main.c: 13:     ANS0 = 1;
   589     0794  1683               	bsf	3,5	;RP0=1, select bank3
   590     0795  1703               	bsf	3,6	;RP1=1, select bank3
   591     0796  1408               	bsf	8,0	;volatile
   592     0797                     l1055:
   593                           
   594                           ;main.c: 15:     CHS3 = 0;
   595     0797  1283               	bcf	3,5	;RP0=0, select bank0
   596     0798  1303               	bcf	3,6	;RP1=0, select bank0
   597     0799  129F               	bcf	31,5	;volatile
   598     079A                     l1057:
   599                           
   600                           ;main.c: 16:     CHS2 = 0;
   601     079A  121F               	bcf	31,4	;volatile
   602     079B                     l1059:
   603                           
   604                           ;main.c: 17:     CHS1 = 0;
   605     079B  119F               	bcf	31,3	;volatile
   606     079C                     l1061:
   607                           
   608                           ;main.c: 18:     CHS0 = 0;
   609     079C  111F               	bcf	31,2	;volatile
   610     079D                     l1063:
   611                           
   612                           ;main.c: 20:     VCFG0 = 0;
   613     079D  1683               	bsf	3,5	;RP0=1, select bank1
   614     079E  1303               	bcf	3,6	;RP1=0, select bank1
   615     079F  121F               	bcf	31,4	;volatile
   616     07A0                     l1065:
   617                           
   618                           ;main.c: 21:     VCFG1 = 0;
   619     07A0  129F               	bcf	31,5	;volatile
   620     07A1                     l1067:
   621                           
   622                           ;main.c: 23:     ADFM = 1;
   623     07A1  179F               	bsf	31,7	;volatile
   624     07A2                     l1069:
   625                           
   626                           ;main.c: 25:     ADCS1 = 0;
   627     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   628     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   629     07A4  139F               	bcf	31,7	;volatile
   630     07A5                     l1071:
   631                           
   632                           ;main.c: 26:     ADCS0 = 0;
   633     07A5  131F               	bcf	31,6	;volatile
   634     07A6                     l1073:
   635                           
   636                           ;main.c: 28:     ADON = 1;
   637     07A6  141F               	bsf	31,0	;volatile
   638     07A7                     l1075:
   639                           
   640                           ;main.c: 30:     lcdInit();
   641     07A7  118A  2621  118A   	fcall	_lcdInit
   642     07AA                     l1077:
   643                           
   644                           ;main.c: 31:     lcdText("Minh Vu");
   645     07AA  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   646     07AB  118A  2579  118A   	fcall	_lcdText
   647     07AE                     l1079:
   648                           
   649                           ;main.c: 33:         if(GO_nDONE ==0 )
   650     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   651     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   652     07B0  189F               	btfsc	31,1	;volatile
   653     07B1  2FB3               	goto	u921
   654     07B2  2FB4               	goto	u920
   655     07B3                     u921:
   656     07B3  2FB5               	goto	l51
   657     07B4                     u920:
   658     07B4                     l1081:
   659                           
   660                           ;main.c: 34:             GO_nDONE = 1;
   661     07B4  149F               	bsf	31,1	;volatile
   662     07B5                     l51:
   663     07B5  189F               	btfsc	31,1	;volatile
   664     07B6  2FB8               	goto	u931
   665     07B7  2FB9               	goto	u930
   666     07B8                     u931:
   667     07B8  2FB5               	goto	l51
   668     07B9                     u930:
   669     07B9                     l1083:
   670                           
   671                           ;main.c: 36:         value = ADRESH;
   672     07B9  081E               	movf	30,w	;volatile
   673     07BA  00B2               	movwf	??_main
   674     07BB  01B3               	clrf	??_main+1
   675     07BC  0832               	movf	??_main,w
   676     07BD  00B8               	movwf	main@value
   677     07BE  0833               	movf	??_main+1,w
   678     07BF  00B9               	movwf	main@value+1
   679                           
   680                           ;main.c: 37:         value = (value<<8)|ADRESL;
   681     07C0  1683               	bsf	3,5	;RP0=1, select bank1
   682     07C1  1303               	bcf	3,6	;RP1=0, select bank1
   683     07C2  081E               	movf	30,w	;volatile
   684     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   685     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   686     07C5  00B2               	movwf	??_main
   687     07C6  01B3               	clrf	??_main+1
   688     07C7  0838               	movf	main@value,w
   689     07C8  00B5               	movwf	??_main+3
   690     07C9  01B4               	clrf	??_main+2
   691     07CA  0832               	movf	??_main,w
   692     07CB  0434               	iorwf	??_main+2,w
   693     07CC  00B6               	movwf	??_main+4
   694     07CD  0833               	movf	??_main+1,w
   695     07CE  0435               	iorwf	??_main+3,w
   696     07CF  00B7               	movwf	??_main+5
   697     07D0  0836               	movf	??_main+4,w
   698     07D1  00B8               	movwf	main@value
   699     07D2  0837               	movf	??_main+5,w
   700     07D3  00B9               	movwf	main@value+1
   701     07D4                     l1085:
   702                           
   703                           ;main.c: 38:         lcdClear();
   704     07D4  118A  2516  118A   	fcall	_lcdClear
   705     07D7                     l1087:
   706                           
   707                           ;main.c: 39:         lcdText("GiaTri ADC 10bit: ");
   708     07D7  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   709     07D8  118A  2579  118A   	fcall	_lcdText
   710     07DB                     l1089:
   711                           
   712                           ;main.c: 40:         lcdSet(2,6);
   713     07DB  3006               	movlw	6
   714     07DC  00F5               	movwf	lcdSet@y
   715     07DD  3002               	movlw	2
   716     07DE  118A  2542  118A   	fcall	_lcdSet
   717     07E1                     l1091:
   718                           
   719                           ;main.c: 41:         lcdNumber(value);
   720     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   721     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   722     07E3  0838               	movf	main@value,w
   723     07E4  00A0               	movwf	lcdNumber@n
   724     07E5  0839               	movf	main@value+1,w
   725     07E6  00A1               	movwf	lcdNumber@n+1
   726     07E7  01A2               	clrf	lcdNumber@n+2
   727     07E8  01A3               	clrf	lcdNumber@n+3
   728     07E9  118A  2729  118A   	fcall	_lcdNumber
   729     07EC                     l1093:
   730                           
   731                           ;main.c: 42:         _delay((unsigned long)((700)*(4000000/4000.0)));
   732     07EC  3004               	movlw	4
   733     07ED  1283               	bcf	3,5	;RP0=0, select bank0
   734     07EE  1303               	bcf	3,6	;RP1=0, select bank0
   735     07EF  00B4               	movwf	??_main+2
   736     07F0  308E               	movlw	142
   737     07F1  00B3               	movwf	??_main+1
   738     07F2  3012               	movlw	18
   739     07F3  00B2               	movwf	??_main
   740     07F4                     u1017:
   741     07F4  0BB2               	decfsz	??_main,f
   742     07F5  2FF4               	goto	u1017
   743     07F6  0BB3               	decfsz	??_main+1,f
   744     07F7  2FF4               	goto	u1017
   745     07F8  0BB4               	decfsz	??_main+2,f
   746     07F9  2FF4               	goto	u1017
   747     07FA  2FAE               	goto	l1079
   748     07FB  118A  2800         	ljmp	start
   749     07FD                     __end_of_main:
   750                           
   751                           	psect	text1
   752     0579                     __ptext1:	
   753 ;; *************** function _lcdText *****************
   754 ;; Defined at:
   755 ;;		line 82 in file "lcd_4bit.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  str             1    wreg     PTR unsigned char 
   758 ;;		 -> STR_2(19), STR_1(8), 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  str             1    5[COMMON] PTR unsigned char 
   761 ;;		 -> STR_2(19), STR_1(8), 
   762 ;;  i               1    4[COMMON] unsigned char 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   772 ;;      Params:         0       0       0       0
   773 ;;      Locals:         2       0       0       0
   774 ;;      Temps:          0       0       0       0
   775 ;;      Totals:         2       0       0       0
   776 ;;Total ram usage:        2 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; Hardware stack levels required when called: 2
   779 ;; This function calls:
   780 ;;		_lcdChar
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786     0579                     _lcdText:	
   787                           ;psect for function _lcdText
   788                           
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in _lcdText: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   792                           ;lcdText@str stored from wreg
   793     0579  00F5               	movwf	lcdText@str
   794     057A                     l1009:
   795                           
   796                           ;lcd_4bit.c: 83:  uint8_t i;;lcd_4bit.c: 84:  for(i=0;str[i]!=0;i++){
   797     057A  01F4               	clrf	lcdText@i
   798     057B  2D89               	goto	l1015
   799     057C                     l1011:
   800                           
   801                           ;lcd_4bit.c: 85:    lcdChar(str[i]);
   802     057C  0874               	movf	lcdText@i,w
   803     057D  0775               	addwf	lcdText@str,w
   804     057E  0084               	movwf	4
   805     057F  118A  2002  118A   	fcall	stringdir
   806     0582  118A  252B  118A   	fcall	_lcdChar
   807     0585                     l1013:
   808                           
   809                           ;lcd_4bit.c: 86:  }
   810     0585  3001               	movlw	1
   811     0586  00FF               	movwf	btemp+1
   812     0587  087F               	movf	btemp+1,w
   813     0588  07F4               	addwf	lcdText@i,f
   814     0589                     l1015:
   815     0589  0874               	movf	lcdText@i,w
   816     058A  0775               	addwf	lcdText@str,w
   817     058B  0084               	movwf	4
   818     058C  118A  2002  118A   	fcall	stringdir
   819     058F  3A00               	xorlw	0
   820     0590  1D03               	skipz
   821     0591  2D93               	goto	u871
   822     0592  2D94               	goto	u870
   823     0593                     u871:
   824     0593  2D7C               	goto	l1011
   825     0594                     u870:
   826     0594                     l103:
   827     0594  0008               	return
   828     0595                     __end_of_lcdText:
   829                           
   830                           	psect	text2
   831     0542                     __ptext2:	
   832 ;; *************** function _lcdSet *****************
   833 ;; Defined at:
   834 ;;		line 65 in file "lcd_4bit.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  x               1    wreg     unsigned char 
   837 ;;  y               1    5[COMMON] unsigned char 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  x               1    7[COMMON] unsigned char 
   840 ;;  add             1    6[COMMON] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   850 ;;      Params:         1       0       0       0
   851 ;;      Locals:         2       0       0       0
   852 ;;      Temps:          0       0       0       0
   853 ;;      Totals:         3       0       0       0
   854 ;;Total ram usage:        3 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 2
   857 ;; This function calls:
   858 ;;		_lcdCmd
   859 ;; This function is called by:
   860 ;;		_main
   861 ;;		_lcdCustom
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865     0542                     _lcdSet:	
   866                           ;psect for function _lcdSet
   867                           
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _lcdSet: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   871                           ;lcdSet@x stored from wreg
   872     0542  00F7               	movwf	lcdSet@x
   873     0543                     l1019:
   874                           
   875                           ;lcd_4bit.c: 66:  uint8_t add;;lcd_4bit.c: 67:  if(x==1)
   876     0543  0377               	decf	lcdSet@x,w
   877     0544  1D03               	btfss	3,2
   878     0545  2D47               	goto	u881
   879     0546  2D48               	goto	u880
   880     0547                     u881:
   881     0547  2D4B               	goto	l1023
   882     0548                     u880:
   883     0548                     l1021:
   884                           
   885                           ;lcd_4bit.c: 68:   add=0x80;
   886     0548  3080               	movlw	128
   887     0549  00F6               	movwf	lcdSet@add
   888     054A  2D53               	goto	l1027
   889     054B                     l1023:
   890     054B  3002               	movlw	2
   891     054C  0677               	xorwf	lcdSet@x,w
   892     054D  1D03               	btfss	3,2
   893     054E  2D50               	goto	u891
   894     054F  2D51               	goto	u890
   895     0550                     u891:
   896     0550  2D53               	goto	l1027
   897     0551                     u890:
   898     0551                     l1025:
   899                           
   900                           ;lcd_4bit.c: 70:   add=0xc0;
   901     0551  30C0               	movlw	192
   902     0552  00F6               	movwf	lcdSet@add
   903     0553                     l1027:
   904                           
   905                           ;lcd_4bit.c: 71:  add+=y-1;
   906     0553  0875               	movf	lcdSet@y,w
   907     0554  3EFF               	addlw	255
   908     0555  00FF               	movwf	btemp+1
   909     0556  087F               	movf	btemp+1,w
   910     0557  07F6               	addwf	lcdSet@add,f
   911     0558                     l1029:
   912                           
   913                           ;lcd_4bit.c: 72:  lcdCmd(add);
   914     0558  0876               	movf	lcdSet@add,w
   915     0559  118A  255D  118A   	fcall	_lcdCmd
   916     055C                     l94:
   917     055C  0008               	return
   918     055D                     __end_of_lcdSet:
   919                           
   920                           	psect	text3
   921     0729                     __ptext3:	
   922 ;; *************** function _lcdNumber *****************
   923 ;; Defined at:
   924 ;;		line 104 in file "lcd_4bit.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  n               4    0[BANK0 ] unsigned long 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  num            10    6[BANK0 ] unsigned char [10]
   929 ;;  j               1   17[BANK0 ] unsigned char 
   930 ;;  i               1   16[BANK0 ] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   940 ;;      Params:         0       4       0       0
   941 ;;      Locals:         0      12       0       0
   942 ;;      Temps:          0       2       0       0
   943 ;;      Totals:         0      18       0       0
   944 ;;Total ram usage:       18 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; Hardware stack levels required when called: 2
   947 ;; This function calls:
   948 ;;		___lldiv
   949 ;;		___llmod
   950 ;;		_lcdChar
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956     0729                     _lcdNumber:	
   957                           ;psect for function _lcdNumber
   958                           
   959     0729                     l1031:	
   960                           ;incstack = 0
   961                           ; Regs used in _lcdNumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   962                           
   963                           
   964                           ;lcd_4bit.c: 105:  uint8_t i,num[10],j=0;
   965     0729  1283               	bcf	3,5	;RP0=0, select bank0
   966     072A  1303               	bcf	3,6	;RP1=0, select bank0
   967     072B  01B1               	clrf	lcdNumber@j
   968                           
   969                           ;lcd_4bit.c: 106:  while(n){
   970     072C  2F69               	goto	l1039
   971     072D                     l1033:
   972                           
   973                           ;lcd_4bit.c: 107:    num[j]=n%10;
   974     072D  0831               	movf	lcdNumber@j,w
   975     072E  3E26               	addlw	(low (lcdNumber@num| 0))& (0+255)
   976     072F  0084               	movwf	4
   977     0730  3000               	movlw	0
   978     0731  00F3               	movwf	___llmod@divisor+3
   979     0732  3000               	movlw	0
   980     0733  00F2               	movwf	___llmod@divisor+2
   981     0734  3000               	movlw	0
   982     0735  00F1               	movwf	___llmod@divisor+1
   983     0736  300A               	movlw	10
   984     0737  00F0               	movwf	___llmod@divisor
   985     0738  0823               	movf	lcdNumber@n+3,w
   986     0739  00F7               	movwf	___llmod@dividend+3
   987     073A  0822               	movf	lcdNumber@n+2,w
   988     073B  00F6               	movwf	___llmod@dividend+2
   989     073C  0821               	movf	lcdNumber@n+1,w
   990     073D  00F5               	movwf	___llmod@dividend+1
   991     073E  0820               	movf	lcdNumber@n,w
   992     073F  00F4               	movwf	___llmod@dividend
   993     0740  118A  266F  118A   	fcall	___llmod
   994     0743  0870               	movf	?___llmod,w
   995     0744  1383               	bcf	3,7	;select IRP bank0
   996     0745  0080               	movwf	0
   997     0746                     l1035:
   998                           
   999                           ;lcd_4bit.c: 108:   n/=10;
  1000     0746  3000               	movlw	0
  1001     0747  00F3               	movwf	___lldiv@divisor+3
  1002     0748  3000               	movlw	0
  1003     0749  00F2               	movwf	___lldiv@divisor+2
  1004     074A  3000               	movlw	0
  1005     074B  00F1               	movwf	___lldiv@divisor+1
  1006     074C  300A               	movlw	10
  1007     074D  00F0               	movwf	___lldiv@divisor
  1008     074E  1283               	bcf	3,5	;RP0=0, select bank0
  1009     074F  1303               	bcf	3,6	;RP1=0, select bank0
  1010     0750  0823               	movf	lcdNumber@n+3,w
  1011     0751  00F7               	movwf	___lldiv@dividend+3
  1012     0752  0822               	movf	lcdNumber@n+2,w
  1013     0753  00F6               	movwf	___lldiv@dividend+2
  1014     0754  0821               	movf	lcdNumber@n+1,w
  1015     0755  00F5               	movwf	___lldiv@dividend+1
  1016     0756  0820               	movf	lcdNumber@n,w
  1017     0757  00F4               	movwf	___lldiv@dividend
  1018     0758  118A  26C3  118A   	fcall	___lldiv
  1019     075B  0873               	movf	?___lldiv+3,w
  1020     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1021     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1022     075E  00A3               	movwf	lcdNumber@n+3
  1023     075F  0872               	movf	?___lldiv+2,w
  1024     0760  00A2               	movwf	lcdNumber@n+2
  1025     0761  0871               	movf	?___lldiv+1,w
  1026     0762  00A1               	movwf	lcdNumber@n+1
  1027     0763  0870               	movf	?___lldiv,w
  1028     0764  00A0               	movwf	lcdNumber@n
  1029     0765                     l1037:
  1030                           
  1031                           ;lcd_4bit.c: 109:   j++;
  1032     0765  3001               	movlw	1
  1033     0766  00FF               	movwf	btemp+1
  1034     0767  087F               	movf	btemp+1,w
  1035     0768  07B1               	addwf	lcdNumber@j,f
  1036     0769                     l1039:
  1037                           
  1038                           ;lcd_4bit.c: 106:  while(n){
  1039     0769  0823               	movf	lcdNumber@n+3,w
  1040     076A  0422               	iorwf	lcdNumber@n+2,w
  1041     076B  0421               	iorwf	lcdNumber@n+1,w
  1042     076C  0420               	iorwf	lcdNumber@n,w
  1043     076D  1D03               	skipz
  1044     076E  2F70               	goto	u901
  1045     076F  2F71               	goto	u900
  1046     0770                     u901:
  1047     0770  2F2D               	goto	l1033
  1048     0771                     u900:
  1049     0771                     l1041:
  1050                           
  1051                           ;lcd_4bit.c: 111:  for(i=0;i<j;i++){
  1052     0771  01B0               	clrf	lcdNumber@i
  1053     0772  2F89               	goto	l1047
  1054     0773                     l1043:
  1055                           
  1056                           ;lcd_4bit.c: 112:    lcdChar(num[j-i-1]+48);
  1057     0773  3026               	movlw	(low (lcdNumber@num| 0))& (0+255)
  1058     0774  00A4               	movwf	??_lcdNumber
  1059     0775  0830               	movf	lcdNumber@i,w
  1060     0776  02A4               	subwf	??_lcdNumber,f
  1061     0777  0831               	movf	lcdNumber@j,w
  1062     0778  0724               	addwf	??_lcdNumber,w
  1063     0779  00A5               	movwf	??_lcdNumber+1
  1064     077A  0825               	movf	??_lcdNumber+1,w
  1065     077B  3EFF               	addlw	255
  1066     077C  0084               	movwf	4
  1067     077D  1383               	bcf	3,7	;select IRP bank0
  1068     077E  0800               	movf	0,w
  1069     077F  3E30               	addlw	48
  1070     0780  118A  252B  118A   	fcall	_lcdChar
  1071     0783                     l1045:
  1072                           
  1073                           ;lcd_4bit.c: 113:  }
  1074     0783  3001               	movlw	1
  1075     0784  00FF               	movwf	btemp+1
  1076     0785  087F               	movf	btemp+1,w
  1077     0786  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0787  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0788  07B0               	addwf	lcdNumber@i,f
  1080     0789                     l1047:
  1081     0789  0831               	movf	lcdNumber@j,w
  1082     078A  0230               	subwf	lcdNumber@i,w
  1083     078B  1C03               	skipc
  1084     078C  2F8E               	goto	u911
  1085     078D  2F8F               	goto	u910
  1086     078E                     u911:
  1087     078E  2F73               	goto	l1043
  1088     078F                     u910:
  1089     078F                     l122:
  1090     078F  0008               	return
  1091     0790                     __end_of_lcdNumber:
  1092                           
  1093                           	psect	text4
  1094     052B                     __ptext4:	
  1095 ;; *************** function _lcdChar *****************
  1096 ;; Defined at:
  1097 ;;		line 74 in file "lcd_4bit.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  b               1    wreg     unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  b               1    3[COMMON] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, pclath, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1111 ;;      Params:         0       0       0       0
  1112 ;;      Locals:         1       0       0       0
  1113 ;;      Temps:          1       0       0       0
  1114 ;;      Totals:         2       0       0       0
  1115 ;;Total ram usage:        2 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; Hardware stack levels required when called: 1
  1118 ;; This function calls:
  1119 ;;		_clockLcd
  1120 ;;		_lcdWriteHigh
  1121 ;;		_lcdWriteLow
  1122 ;; This function is called by:
  1123 ;;		_lcdText
  1124 ;;		_lcdNumber
  1125 ;;		_lcdCustom
  1126 ;;		_lcdNumberHex
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130     052B                     _lcdChar:	
  1131                           ;psect for function _lcdChar
  1132                           
  1133                           
  1134                           ;incstack = 0
  1135                           ; Regs used in _lcdChar: [wreg+status,2+status,0+pclath+cstack]
  1136                           ;lcdChar@b stored from wreg
  1137     052B  00F3               	movwf	lcdChar@b
  1138     052C                     l927:
  1139                           
  1140                           ;lcd_4bit.c: 75:  RC0=1;
  1141     052C  1283               	bcf	3,5	;RP0=0, select bank0
  1142     052D  1303               	bcf	3,6	;RP1=0, select bank0
  1143     052E  1407               	bsf	7,0	;volatile
  1144     052F                     l929:
  1145                           
  1146                           ;lcd_4bit.c: 76:  lcdWriteHigh(b);
  1147     052F  0873               	movf	lcdChar@b,w
  1148     0530  118A  25D7  118A   	fcall	_lcdWriteHigh
  1149                           
  1150                           ;lcd_4bit.c: 77:  clockLcd();
  1151     0533  118A  251B  118A   	fcall	_clockLcd
  1152                           
  1153                           ;lcd_4bit.c: 78:  lcdWriteLow(b);
  1154     0536  0873               	movf	lcdChar@b,w
  1155     0537  118A  2595  118A   	fcall	_lcdWriteLow
  1156                           
  1157                           ;lcd_4bit.c: 79:  clockLcd();
  1158     053A  118A  251B  118A   	fcall	_clockLcd
  1159     053D                     l931:
  1160                           
  1161                           ;lcd_4bit.c: 80:  _delay((unsigned long)((40)*(4000000/4000000.0)));
  1162     053D  300D               	movlw	13
  1163     053E  00F2               	movwf	??_lcdChar
  1164     053F                     u1027:
  1165     053F  0BF2               	decfsz	??_lcdChar,f
  1166     0540  2D3F               	goto	u1027
  1167     0541                     l97:
  1168     0541  0008               	return
  1169     0542                     __end_of_lcdChar:
  1170                           
  1171                           	psect	text5
  1172     066F                     __ptext5:	
  1173 ;; *************** function ___llmod *****************
  1174 ;; Defined at:
  1175 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  divisor         4    0[COMMON] unsigned long 
  1178 ;;  dividend        4    4[COMMON] unsigned long 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  counter         1    9[COMMON] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  4    0[COMMON] unsigned long 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0, btemp+1
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1190 ;;      Params:         8       0       0       0
  1191 ;;      Locals:         1       0       0       0
  1192 ;;      Temps:          1       0       0       0
  1193 ;;      Totals:        10       0       0       0
  1194 ;;Total ram usage:       10 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_lcdNumber
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203     066F                     ___llmod:	
  1204                           ;psect for function ___llmod
  1205                           
  1206     066F                     l959:	
  1207                           ;incstack = 0
  1208                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  1209                           
  1210     066F  0873               	movf	___llmod@divisor+3,w
  1211     0670  0472               	iorwf	___llmod@divisor+2,w
  1212     0671  0471               	iorwf	___llmod@divisor+1,w
  1213     0672  0470               	iorwf	___llmod@divisor,w
  1214     0673  1903               	skipnz
  1215     0674  2E76               	goto	u811
  1216     0675  2E77               	goto	u810
  1217     0676                     u811:
  1218     0676  2EBA               	goto	l977
  1219     0677                     u810:
  1220     0677                     l961:
  1221     0677  01F9               	clrf	___llmod@counter
  1222     0678  0AF9               	incf	___llmod@counter,f
  1223     0679  2E87               	goto	l967
  1224     067A                     l963:
  1225     067A  3001               	movlw	1
  1226     067B  00F8               	movwf	??___llmod
  1227     067C                     u825:
  1228     067C  1003               	clrc
  1229     067D  0DF0               	rlf	___llmod@divisor,f
  1230     067E  0DF1               	rlf	___llmod@divisor+1,f
  1231     067F  0DF2               	rlf	___llmod@divisor+2,f
  1232     0680  0DF3               	rlf	___llmod@divisor+3,f
  1233     0681  0BF8               	decfsz	??___llmod,f
  1234     0682  2E7C               	goto	u825
  1235     0683                     l965:
  1236     0683  3001               	movlw	1
  1237     0684  00FF               	movwf	btemp+1
  1238     0685  087F               	movf	btemp+1,w
  1239     0686  07F9               	addwf	___llmod@counter,f
  1240     0687                     l967:
  1241     0687  1FF3               	btfss	___llmod@divisor+3,7
  1242     0688  2E8A               	goto	u831
  1243     0689  2E8B               	goto	u830
  1244     068A                     u831:
  1245     068A  2E7A               	goto	l963
  1246     068B                     u830:
  1247     068B                     l969:
  1248     068B  0873               	movf	___llmod@divisor+3,w
  1249     068C  0277               	subwf	___llmod@dividend+3,w
  1250     068D  1D03               	skipz
  1251     068E  2E99               	goto	u845
  1252     068F  0872               	movf	___llmod@divisor+2,w
  1253     0690  0276               	subwf	___llmod@dividend+2,w
  1254     0691  1D03               	skipz
  1255     0692  2E99               	goto	u845
  1256     0693  0871               	movf	___llmod@divisor+1,w
  1257     0694  0275               	subwf	___llmod@dividend+1,w
  1258     0695  1D03               	skipz
  1259     0696  2E99               	goto	u845
  1260     0697  0870               	movf	___llmod@divisor,w
  1261     0698  0274               	subwf	___llmod@dividend,w
  1262     0699                     u845:
  1263     0699  1C03               	skipc
  1264     069A  2E9C               	goto	u841
  1265     069B  2E9D               	goto	u840
  1266     069C                     u841:
  1267     069C  2EAB               	goto	l973
  1268     069D                     u840:
  1269     069D                     l971:
  1270     069D  0870               	movf	___llmod@divisor,w
  1271     069E  02F4               	subwf	___llmod@dividend,f
  1272     069F  0871               	movf	___llmod@divisor+1,w
  1273     06A0  1C03               	skipc
  1274     06A1  0F71               	incfsz	___llmod@divisor+1,w
  1275     06A2  02F5               	subwf	___llmod@dividend+1,f
  1276     06A3  0872               	movf	___llmod@divisor+2,w
  1277     06A4  1C03               	skipc
  1278     06A5  0F72               	incfsz	___llmod@divisor+2,w
  1279     06A6  02F6               	subwf	___llmod@dividend+2,f
  1280     06A7  0873               	movf	___llmod@divisor+3,w
  1281     06A8  1C03               	skipc
  1282     06A9  0F73               	incfsz	___llmod@divisor+3,w
  1283     06AA  02F7               	subwf	___llmod@dividend+3,f
  1284     06AB                     l973:
  1285     06AB  3001               	movlw	1
  1286     06AC                     u855:
  1287     06AC  1003               	clrc
  1288     06AD  0CF3               	rrf	___llmod@divisor+3,f
  1289     06AE  0CF2               	rrf	___llmod@divisor+2,f
  1290     06AF  0CF1               	rrf	___llmod@divisor+1,f
  1291     06B0  0CF0               	rrf	___llmod@divisor,f
  1292     06B1  3EFF               	addlw	-1
  1293     06B2  1D03               	skipz
  1294     06B3  2EAC               	goto	u855
  1295     06B4                     l975:
  1296     06B4  3001               	movlw	1
  1297     06B5  02F9               	subwf	___llmod@counter,f
  1298     06B6  1D03               	btfss	3,2
  1299     06B7  2EB9               	goto	u861
  1300     06B8  2EBA               	goto	u860
  1301     06B9                     u861:
  1302     06B9  2E8B               	goto	l969
  1303     06BA                     u860:
  1304     06BA                     l977:
  1305     06BA  0877               	movf	___llmod@dividend+3,w
  1306     06BB  00F3               	movwf	?___llmod+3
  1307     06BC  0876               	movf	___llmod@dividend+2,w
  1308     06BD  00F2               	movwf	?___llmod+2
  1309     06BE  0875               	movf	___llmod@dividend+1,w
  1310     06BF  00F1               	movwf	?___llmod+1
  1311     06C0  0874               	movf	___llmod@dividend,w
  1312     06C1  00F0               	movwf	?___llmod
  1313     06C2                     l449:
  1314     06C2  0008               	return
  1315     06C3                     __end_of___llmod:
  1316                           
  1317                           	psect	text6
  1318     06C3                     __ptext6:	
  1319 ;; *************** function ___lldiv *****************
  1320 ;; Defined at:
  1321 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  divisor         4    0[COMMON] unsigned long 
  1324 ;;  dividend        4    4[COMMON] unsigned long 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  quotient        4    9[COMMON] unsigned long 
  1327 ;;  counter         1   13[COMMON] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  4    0[COMMON] unsigned long 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0, btemp+1
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1337 ;;      Params:         8       0       0       0
  1338 ;;      Locals:         5       0       0       0
  1339 ;;      Temps:          1       0       0       0
  1340 ;;      Totals:        14       0       0       0
  1341 ;;Total ram usage:       14 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_lcdNumber
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350     06C3                     ___lldiv:	
  1351                           ;psect for function ___lldiv
  1352                           
  1353     06C3                     l933:	
  1354                           ;incstack = 0
  1355                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1356                           
  1357     06C3  3000               	movlw	0
  1358     06C4  00FC               	movwf	___lldiv@quotient+3
  1359     06C5  3000               	movlw	0
  1360     06C6  00FB               	movwf	___lldiv@quotient+2
  1361     06C7  3000               	movlw	0
  1362     06C8  00FA               	movwf	___lldiv@quotient+1
  1363     06C9  3000               	movlw	0
  1364     06CA  00F9               	movwf	___lldiv@quotient
  1365     06CB  0873               	movf	___lldiv@divisor+3,w
  1366     06CC  0472               	iorwf	___lldiv@divisor+2,w
  1367     06CD  0471               	iorwf	___lldiv@divisor+1,w
  1368     06CE  0470               	iorwf	___lldiv@divisor,w
  1369     06CF  1903               	skipnz
  1370     06D0  2ED2               	goto	u741
  1371     06D1  2ED3               	goto	u740
  1372     06D2                     u741:
  1373     06D2  2F20               	goto	l955
  1374     06D3                     u740:
  1375     06D3                     l935:
  1376     06D3  01FD               	clrf	___lldiv@counter
  1377     06D4  0AFD               	incf	___lldiv@counter,f
  1378     06D5  2EE3               	goto	l941
  1379     06D6                     l937:
  1380     06D6  3001               	movlw	1
  1381     06D7  00F8               	movwf	??___lldiv
  1382     06D8                     u755:
  1383     06D8  1003               	clrc
  1384     06D9  0DF0               	rlf	___lldiv@divisor,f
  1385     06DA  0DF1               	rlf	___lldiv@divisor+1,f
  1386     06DB  0DF2               	rlf	___lldiv@divisor+2,f
  1387     06DC  0DF3               	rlf	___lldiv@divisor+3,f
  1388     06DD  0BF8               	decfsz	??___lldiv,f
  1389     06DE  2ED8               	goto	u755
  1390     06DF                     l939:
  1391     06DF  3001               	movlw	1
  1392     06E0  00FF               	movwf	btemp+1
  1393     06E1  087F               	movf	btemp+1,w
  1394     06E2  07FD               	addwf	___lldiv@counter,f
  1395     06E3                     l941:
  1396     06E3  1FF3               	btfss	___lldiv@divisor+3,7
  1397     06E4  2EE6               	goto	u761
  1398     06E5  2EE7               	goto	u760
  1399     06E6                     u761:
  1400     06E6  2ED6               	goto	l937
  1401     06E7                     u760:
  1402     06E7                     l943:
  1403     06E7  3001               	movlw	1
  1404     06E8  00F8               	movwf	??___lldiv
  1405     06E9                     u775:
  1406     06E9  1003               	clrc
  1407     06EA  0DF9               	rlf	___lldiv@quotient,f
  1408     06EB  0DFA               	rlf	___lldiv@quotient+1,f
  1409     06EC  0DFB               	rlf	___lldiv@quotient+2,f
  1410     06ED  0DFC               	rlf	___lldiv@quotient+3,f
  1411     06EE  0BF8               	decfsz	??___lldiv,f
  1412     06EF  2EE9               	goto	u775
  1413     06F0                     l945:
  1414     06F0  0873               	movf	___lldiv@divisor+3,w
  1415     06F1  0277               	subwf	___lldiv@dividend+3,w
  1416     06F2  1D03               	skipz
  1417     06F3  2EFE               	goto	u785
  1418     06F4  0872               	movf	___lldiv@divisor+2,w
  1419     06F5  0276               	subwf	___lldiv@dividend+2,w
  1420     06F6  1D03               	skipz
  1421     06F7  2EFE               	goto	u785
  1422     06F8  0871               	movf	___lldiv@divisor+1,w
  1423     06F9  0275               	subwf	___lldiv@dividend+1,w
  1424     06FA  1D03               	skipz
  1425     06FB  2EFE               	goto	u785
  1426     06FC  0870               	movf	___lldiv@divisor,w
  1427     06FD  0274               	subwf	___lldiv@dividend,w
  1428     06FE                     u785:
  1429     06FE  1C03               	skipc
  1430     06FF  2F01               	goto	u781
  1431     0700  2F02               	goto	u780
  1432     0701                     u781:
  1433     0701  2F11               	goto	l951
  1434     0702                     u780:
  1435     0702                     l947:
  1436     0702  0870               	movf	___lldiv@divisor,w
  1437     0703  02F4               	subwf	___lldiv@dividend,f
  1438     0704  0871               	movf	___lldiv@divisor+1,w
  1439     0705  1C03               	skipc
  1440     0706  0F71               	incfsz	___lldiv@divisor+1,w
  1441     0707  02F5               	subwf	___lldiv@dividend+1,f
  1442     0708  0872               	movf	___lldiv@divisor+2,w
  1443     0709  1C03               	skipc
  1444     070A  0F72               	incfsz	___lldiv@divisor+2,w
  1445     070B  02F6               	subwf	___lldiv@dividend+2,f
  1446     070C  0873               	movf	___lldiv@divisor+3,w
  1447     070D  1C03               	skipc
  1448     070E  0F73               	incfsz	___lldiv@divisor+3,w
  1449     070F  02F7               	subwf	___lldiv@dividend+3,f
  1450     0710                     l949:
  1451     0710  1479               	bsf	___lldiv@quotient,0
  1452     0711                     l951:
  1453     0711  3001               	movlw	1
  1454     0712                     u795:
  1455     0712  1003               	clrc
  1456     0713  0CF3               	rrf	___lldiv@divisor+3,f
  1457     0714  0CF2               	rrf	___lldiv@divisor+2,f
  1458     0715  0CF1               	rrf	___lldiv@divisor+1,f
  1459     0716  0CF0               	rrf	___lldiv@divisor,f
  1460     0717  3EFF               	addlw	-1
  1461     0718  1D03               	skipz
  1462     0719  2F12               	goto	u795
  1463     071A                     l953:
  1464     071A  3001               	movlw	1
  1465     071B  02FD               	subwf	___lldiv@counter,f
  1466     071C  1D03               	btfss	3,2
  1467     071D  2F1F               	goto	u801
  1468     071E  2F20               	goto	u800
  1469     071F                     u801:
  1470     071F  2EE7               	goto	l943
  1471     0720                     u800:
  1472     0720                     l955:
  1473     0720  087C               	movf	___lldiv@quotient+3,w
  1474     0721  00F3               	movwf	?___lldiv+3
  1475     0722  087B               	movf	___lldiv@quotient+2,w
  1476     0723  00F2               	movwf	?___lldiv+2
  1477     0724  087A               	movf	___lldiv@quotient+1,w
  1478     0725  00F1               	movwf	?___lldiv+1
  1479     0726  0879               	movf	___lldiv@quotient,w
  1480     0727  00F0               	movwf	?___lldiv
  1481     0728                     l255:
  1482     0728  0008               	return
  1483     0729                     __end_of___lldiv:
  1484                           
  1485                           	psect	text7
  1486     0621                     __ptext7:	
  1487 ;; *************** function _lcdInit *****************
  1488 ;; Defined at:
  1489 ;;		line 40 in file "lcd_4bit.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0, pclath, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1503 ;;      Params:         0       0       0       0
  1504 ;;      Locals:         0       0       0       0
  1505 ;;      Temps:          2       0       0       0
  1506 ;;      Totals:         2       0       0       0
  1507 ;;Total ram usage:        2 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 2
  1510 ;; This function calls:
  1511 ;;		_clockLcd
  1512 ;;		_lcdCmd
  1513 ;;		_lcdWriteHigh
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519     0621                     _lcdInit:	
  1520                           ;psect for function _lcdInit
  1521                           
  1522     0621                     l981:	
  1523                           ;incstack = 0
  1524                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  1525                           
  1526                           
  1527                           ;lcd_4bit.c: 41:  RC0=0;
  1528     0621  1283               	bcf	3,5	;RP0=0, select bank0
  1529     0622  1303               	bcf	3,6	;RP1=0, select bank0
  1530     0623  1007               	bcf	7,0	;volatile
  1531                           
  1532                           ;lcd_4bit.c: 42:  RC1=0;
  1533     0624  1087               	bcf	7,1	;volatile
  1534     0625                     l983:
  1535                           
  1536                           ;lcd_4bit.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1537     0625  301A               	movlw	26
  1538     0626  00F6               	movwf	??_lcdInit+1
  1539     0627  30F8               	movlw	248
  1540     0628  00F5               	movwf	??_lcdInit
  1541     0629                     u1037:
  1542     0629  0BF5               	decfsz	??_lcdInit,f
  1543     062A  2E29               	goto	u1037
  1544     062B  0BF6               	decfsz	??_lcdInit+1,f
  1545     062C  2E29               	goto	u1037
  1546     062D  0000               	nop
  1547     062E                     l985:
  1548                           
  1549                           ;lcd_4bit.c: 45:  lcdWriteHigh(0x30);
  1550     062E  3030               	movlw	48
  1551     062F  118A  25D7  118A   	fcall	_lcdWriteHigh
  1552     0632                     l987:
  1553                           
  1554                           ;lcd_4bit.c: 46:  clockLcd();
  1555     0632  118A  251B  118A   	fcall	_clockLcd
  1556                           
  1557                           ;lcd_4bit.c: 47:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1558     0635  3007               	movlw	7
  1559     0636  00F6               	movwf	??_lcdInit+1
  1560     0637  307D               	movlw	125
  1561     0638  00F5               	movwf	??_lcdInit
  1562     0639                     u1047:
  1563     0639  0BF5               	decfsz	??_lcdInit,f
  1564     063A  2E39               	goto	u1047
  1565     063B  0BF6               	decfsz	??_lcdInit+1,f
  1566     063C  2E39               	goto	u1047
  1567     063D                     l989:
  1568                           
  1569                           ;lcd_4bit.c: 49:  lcdWriteHigh(0x30);
  1570     063D  3030               	movlw	48
  1571     063E  118A  25D7  118A   	fcall	_lcdWriteHigh
  1572     0641                     l991:
  1573                           
  1574                           ;lcd_4bit.c: 50:  clockLcd();
  1575     0641  118A  251B  118A   	fcall	_clockLcd
  1576                           
  1577                           ;lcd_4bit.c: 51:  _delay((unsigned long)((150)*(4000000/4000000.0)));
  1578     0644  3031               	movlw	49
  1579     0645  00F5               	movwf	??_lcdInit
  1580     0646                     u1057:
  1581     0646  0BF5               	decfsz	??_lcdInit,f
  1582     0647  2E46               	goto	u1057
  1583     0648  2E49               	nop2
  1584     0649                     l993:
  1585                           
  1586                           ;lcd_4bit.c: 53:     lcdWriteHigh(0x30);
  1587     0649  3030               	movlw	48
  1588     064A  118A  25D7  118A   	fcall	_lcdWriteHigh
  1589     064D                     l995:
  1590                           
  1591                           ;lcd_4bit.c: 54:  clockLcd();
  1592     064D  118A  251B  118A   	fcall	_clockLcd
  1593     0650                     l997:
  1594                           
  1595                           ;lcd_4bit.c: 56:  lcdWriteHigh(0x20);
  1596     0650  3020               	movlw	32
  1597     0651  118A  25D7  118A   	fcall	_lcdWriteHigh
  1598     0654                     l999:
  1599                           
  1600                           ;lcd_4bit.c: 57:  clockLcd();
  1601     0654  118A  251B  118A   	fcall	_clockLcd
  1602                           
  1603                           ;lcd_4bit.c: 58:  _delay((unsigned long)((1)*(4000000/4000.0)));
  1604     0657  30C7               	movlw	199
  1605     0658  00F5               	movwf	??_lcdInit
  1606     0659                     u1067:
  1607     0659  2E5A               	nop2
  1608     065A  0BF5               	decfsz	??_lcdInit,f
  1609     065B  2E59               	goto	u1067
  1610     065C  2E5D               	nop2
  1611     065D  2E5E               	nop2
  1612     065E                     l1001:
  1613                           
  1614                           ;lcd_4bit.c: 60:  lcdCmd(0x28);
  1615     065E  3028               	movlw	40
  1616     065F  118A  255D  118A   	fcall	_lcdCmd
  1617     0662                     l1003:
  1618                           
  1619                           ;lcd_4bit.c: 61:  lcdCmd(0x0c);
  1620     0662  300C               	movlw	12
  1621     0663  118A  255D  118A   	fcall	_lcdCmd
  1622     0666                     l1005:
  1623                           
  1624                           ;lcd_4bit.c: 62:  lcdCmd(0x01);
  1625     0666  3001               	movlw	1
  1626     0667  118A  255D  118A   	fcall	_lcdCmd
  1627     066A                     l1007:
  1628                           
  1629                           ;lcd_4bit.c: 63:  lcdCmd(0x06);
  1630     066A  3006               	movlw	6
  1631     066B  118A  255D  118A   	fcall	_lcdCmd
  1632     066E                     l88:
  1633     066E  0008               	return
  1634     066F                     __end_of_lcdInit:
  1635                           
  1636                           	psect	text8
  1637     0516                     __ptext8:	
  1638 ;; *************** function _lcdClear *****************
  1639 ;; Defined at:
  1640 ;;		line 37 in file "lcd_4bit.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, pclath, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1654 ;;      Params:         0       0       0       0
  1655 ;;      Locals:         0       0       0       0
  1656 ;;      Temps:          0       0       0       0
  1657 ;;      Totals:         0       0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 2
  1661 ;; This function calls:
  1662 ;;		_lcdCmd
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668     0516                     _lcdClear:	
  1669                           ;psect for function _lcdClear
  1670                           
  1671     0516                     l1017:	
  1672                           ;incstack = 0
  1673                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  1674                           
  1675                           
  1676                           ;lcd_4bit.c: 38:  lcdCmd(0x01);
  1677     0516  3001               	movlw	1
  1678     0517  118A  255D  118A   	fcall	_lcdCmd
  1679     051A                     l85:
  1680     051A  0008               	return
  1681     051B                     __end_of_lcdClear:
  1682                           
  1683                           	psect	text9
  1684     055D                     __ptext9:	
  1685 ;; *************** function _lcdCmd *****************
  1686 ;; Defined at:
  1687 ;;		line 29 in file "lcd_4bit.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  b               1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  b               1    4[COMMON] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, pclath, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1701 ;;      Params:         0       0       0       0
  1702 ;;      Locals:         1       0       0       0
  1703 ;;      Temps:          2       0       0       0
  1704 ;;      Totals:         3       0       0       0
  1705 ;;Total ram usage:        3 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 1
  1708 ;; This function calls:
  1709 ;;		_clockLcd
  1710 ;;		_lcdWriteHigh
  1711 ;;		_lcdWriteLow
  1712 ;; This function is called by:
  1713 ;;		_lcdClear
  1714 ;;		_lcdInit
  1715 ;;		_lcdSet
  1716 ;;		_lcdContro
  1717 ;;		_lcdCustom
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721     055D                     _lcdCmd:	
  1722                           ;psect for function _lcdCmd
  1723                           
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  1727                           ;lcdCmd@b stored from wreg
  1728     055D  00F4               	movwf	lcdCmd@b
  1729     055E                     l921:
  1730                           
  1731                           ;lcd_4bit.c: 30:  RC0=0;
  1732     055E  1283               	bcf	3,5	;RP0=0, select bank0
  1733     055F  1303               	bcf	3,6	;RP1=0, select bank0
  1734     0560  1007               	bcf	7,0	;volatile
  1735     0561                     l923:
  1736                           
  1737                           ;lcd_4bit.c: 31:  lcdWriteHigh(b);
  1738     0561  0874               	movf	lcdCmd@b,w
  1739     0562  118A  25D7  118A   	fcall	_lcdWriteHigh
  1740                           
  1741                           ;lcd_4bit.c: 32:  clockLcd();
  1742     0565  118A  251B  118A   	fcall	_clockLcd
  1743                           
  1744                           ;lcd_4bit.c: 33:  lcdWriteLow(b);
  1745     0568  0874               	movf	lcdCmd@b,w
  1746     0569  118A  2595  118A   	fcall	_lcdWriteLow
  1747                           
  1748                           ;lcd_4bit.c: 34:  clockLcd();
  1749     056C  118A  251B  118A   	fcall	_clockLcd
  1750     056F                     l925:
  1751                           
  1752                           ;lcd_4bit.c: 35:  _delay((unsigned long)((2)*(4000000/4000.0)));
  1753     056F  3003               	movlw	3
  1754     0570  00F3               	movwf	??_lcdCmd+1
  1755     0571  3097               	movlw	151
  1756     0572  00F2               	movwf	??_lcdCmd
  1757     0573                     u1077:
  1758     0573  0BF2               	decfsz	??_lcdCmd,f
  1759     0574  2D73               	goto	u1077
  1760     0575  0BF3               	decfsz	??_lcdCmd+1,f
  1761     0576  2D73               	goto	u1077
  1762     0577  2D78               	nop2
  1763     0578                     l82:
  1764     0578  0008               	return
  1765     0579                     __end_of_lcdCmd:
  1766                           
  1767                           	psect	text10
  1768     0595                     __ptext10:	
  1769 ;; *************** function _lcdWriteLow *****************
  1770 ;; Defined at:
  1771 ;;		line 23 in file "lcd_4bit.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  b               1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  b               1    1[COMMON] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1785 ;;      Params:         0       0       0       0
  1786 ;;      Locals:         1       0       0       0
  1787 ;;      Temps:          1       0       0       0
  1788 ;;      Totals:         2       0       0       0
  1789 ;;Total ram usage:        2 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_lcdCmd
  1795 ;;		_lcdChar
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799     0595                     _lcdWriteLow:	
  1800                           ;psect for function _lcdWriteLow
  1801                           
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _lcdWriteLow: [wreg+status,2+status,0]
  1805                           ;lcdWriteLow@b stored from wreg
  1806     0595  00F1               	movwf	lcdWriteLow@b
  1807     0596                     l917:
  1808                           
  1809                           ;lcd_4bit.c: 24:  RC7=(b&0x08)>>3;
  1810     0596  0871               	movf	lcdWriteLow@b,w
  1811     0597  00F0               	movwf	??_lcdWriteLow
  1812     0598  3003               	movlw	3
  1813     0599                     u635:
  1814     0599  1003               	clrc
  1815     059A  0CF0               	rrf	??_lcdWriteLow,f
  1816     059B  3EFF               	addlw	-1
  1817     059C  1D03               	skipz
  1818     059D  2D99               	goto	u635
  1819     059E  1870               	btfsc	??_lcdWriteLow,0
  1820     059F  2DA1               	goto	u641
  1821     05A0  2DA5               	goto	u640
  1822     05A1                     u641:
  1823     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1824     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1825     05A3  1787               	bsf	7,7	;volatile
  1826     05A4  2DA8               	goto	u654
  1827     05A5                     u640:
  1828     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1829     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1830     05A7  1387               	bcf	7,7	;volatile
  1831     05A8                     u654:
  1832                           
  1833                           ;lcd_4bit.c: 25:  RC6=(b&0x04)>>2;
  1834     05A8  0871               	movf	lcdWriteLow@b,w
  1835     05A9  00F0               	movwf	??_lcdWriteLow
  1836     05AA  3002               	movlw	2
  1837     05AB                     u665:
  1838     05AB  1003               	clrc
  1839     05AC  0CF0               	rrf	??_lcdWriteLow,f
  1840     05AD  3EFF               	addlw	-1
  1841     05AE  1D03               	skipz
  1842     05AF  2DAB               	goto	u665
  1843     05B0  1870               	btfsc	??_lcdWriteLow,0
  1844     05B1  2DB3               	goto	u671
  1845     05B2  2DB7               	goto	u670
  1846     05B3                     u671:
  1847     05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1848     05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1849     05B5  1707               	bsf	7,6	;volatile
  1850     05B6  2DBA               	goto	u684
  1851     05B7                     u670:
  1852     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1853     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1854     05B9  1307               	bcf	7,6	;volatile
  1855     05BA                     u684:
  1856                           
  1857                           ;lcd_4bit.c: 26:  RC5=(b&0x02)>>1;
  1858     05BA  0871               	movf	lcdWriteLow@b,w
  1859     05BB  00F0               	movwf	??_lcdWriteLow
  1860     05BC  3001               	movlw	1
  1861     05BD                     u695:
  1862     05BD  1003               	clrc
  1863     05BE  0CF0               	rrf	??_lcdWriteLow,f
  1864     05BF  3EFF               	addlw	-1
  1865     05C0  1D03               	skipz
  1866     05C1  2DBD               	goto	u695
  1867     05C2  1870               	btfsc	??_lcdWriteLow,0
  1868     05C3  2DC5               	goto	u701
  1869     05C4  2DC9               	goto	u700
  1870     05C5                     u701:
  1871     05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1872     05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1873     05C7  1687               	bsf	7,5	;volatile
  1874     05C8  2DCC               	goto	u714
  1875     05C9                     u700:
  1876     05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1877     05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1878     05CB  1287               	bcf	7,5	;volatile
  1879     05CC                     u714:
  1880     05CC                     l919:
  1881                           
  1882                           ;lcd_4bit.c: 27:  RC4=b&0x01;
  1883     05CC  1871               	btfsc	lcdWriteLow@b,0
  1884     05CD  2DCF               	goto	u721
  1885     05CE  2DD3               	goto	u720
  1886     05CF                     u721:
  1887     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1888     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1889     05D1  1607               	bsf	7,4	;volatile
  1890     05D2  2DD6               	goto	u734
  1891     05D3                     u720:
  1892     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1893     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1894     05D5  1207               	bcf	7,4	;volatile
  1895     05D6                     u734:
  1896     05D6                     l79:
  1897     05D6  0008               	return
  1898     05D7                     __end_of_lcdWriteLow:
  1899                           
  1900                           	psect	text11
  1901     05D7                     __ptext11:	
  1902 ;; *************** function _lcdWriteHigh *****************
  1903 ;; Defined at:
  1904 ;;		line 17 in file "lcd_4bit.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  b               1    wreg     unsigned char 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  b               1    1[COMMON] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1918 ;;      Params:         0       0       0       0
  1919 ;;      Locals:         1       0       0       0
  1920 ;;      Temps:          1       0       0       0
  1921 ;;      Totals:         2       0       0       0
  1922 ;;Total ram usage:        2 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_lcdCmd
  1928 ;;		_lcdInit
  1929 ;;		_lcdChar
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933     05D7                     _lcdWriteHigh:	
  1934                           ;psect for function _lcdWriteHigh
  1935                           
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _lcdWriteHigh: [wreg+status,2+status,0]
  1939                           ;lcdWriteHigh@b stored from wreg
  1940     05D7  00F1               	movwf	lcdWriteHigh@b
  1941     05D8                     l915:
  1942                           
  1943                           ;lcd_4bit.c: 18:  RC7=(b&0x80)>>7;
  1944     05D8  0871               	movf	lcdWriteHigh@b,w
  1945     05D9  00F0               	movwf	??_lcdWriteHigh
  1946     05DA  3007               	movlw	7
  1947     05DB                     u515:
  1948     05DB  1003               	clrc
  1949     05DC  0CF0               	rrf	??_lcdWriteHigh,f
  1950     05DD  3EFF               	addlw	-1
  1951     05DE  1D03               	skipz
  1952     05DF  2DDB               	goto	u515
  1953     05E0  1870               	btfsc	??_lcdWriteHigh,0
  1954     05E1  2DE3               	goto	u521
  1955     05E2  2DE7               	goto	u520
  1956     05E3                     u521:
  1957     05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1958     05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1959     05E5  1787               	bsf	7,7	;volatile
  1960     05E6  2DEA               	goto	u534
  1961     05E7                     u520:
  1962     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1963     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1964     05E9  1387               	bcf	7,7	;volatile
  1965     05EA                     u534:
  1966                           
  1967                           ;lcd_4bit.c: 19:  RC6=(b&0x40)>>6;
  1968     05EA  0871               	movf	lcdWriteHigh@b,w
  1969     05EB  00F0               	movwf	??_lcdWriteHigh
  1970     05EC  3006               	movlw	6
  1971     05ED                     u545:
  1972     05ED  1003               	clrc
  1973     05EE  0CF0               	rrf	??_lcdWriteHigh,f
  1974     05EF  3EFF               	addlw	-1
  1975     05F0  1D03               	skipz
  1976     05F1  2DED               	goto	u545
  1977     05F2  1870               	btfsc	??_lcdWriteHigh,0
  1978     05F3  2DF5               	goto	u551
  1979     05F4  2DF9               	goto	u550
  1980     05F5                     u551:
  1981     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1982     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1983     05F7  1707               	bsf	7,6	;volatile
  1984     05F8  2DFC               	goto	u564
  1985     05F9                     u550:
  1986     05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1987     05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1988     05FB  1307               	bcf	7,6	;volatile
  1989     05FC                     u564:
  1990                           
  1991                           ;lcd_4bit.c: 20:  RC5=(b&0x20)>>5;
  1992     05FC  0871               	movf	lcdWriteHigh@b,w
  1993     05FD  00F0               	movwf	??_lcdWriteHigh
  1994     05FE  3005               	movlw	5
  1995     05FF                     u575:
  1996     05FF  1003               	clrc
  1997     0600  0CF0               	rrf	??_lcdWriteHigh,f
  1998     0601  3EFF               	addlw	-1
  1999     0602  1D03               	skipz
  2000     0603  2DFF               	goto	u575
  2001     0604  1870               	btfsc	??_lcdWriteHigh,0
  2002     0605  2E07               	goto	u581
  2003     0606  2E0B               	goto	u580
  2004     0607                     u581:
  2005     0607  1283               	bcf	3,5	;RP0=0, select bank0
  2006     0608  1303               	bcf	3,6	;RP1=0, select bank0
  2007     0609  1687               	bsf	7,5	;volatile
  2008     060A  2E0E               	goto	u594
  2009     060B                     u580:
  2010     060B  1283               	bcf	3,5	;RP0=0, select bank0
  2011     060C  1303               	bcf	3,6	;RP1=0, select bank0
  2012     060D  1287               	bcf	7,5	;volatile
  2013     060E                     u594:
  2014                           
  2015                           ;lcd_4bit.c: 21:  RC4=(b&0x10)>>4;
  2016     060E  0871               	movf	lcdWriteHigh@b,w
  2017     060F  00F0               	movwf	??_lcdWriteHigh
  2018     0610  3004               	movlw	4
  2019     0611                     u605:
  2020     0611  1003               	clrc
  2021     0612  0CF0               	rrf	??_lcdWriteHigh,f
  2022     0613  3EFF               	addlw	-1
  2023     0614  1D03               	skipz
  2024     0615  2E11               	goto	u605
  2025     0616  1870               	btfsc	??_lcdWriteHigh,0
  2026     0617  2E19               	goto	u611
  2027     0618  2E1D               	goto	u610
  2028     0619                     u611:
  2029     0619  1283               	bcf	3,5	;RP0=0, select bank0
  2030     061A  1303               	bcf	3,6	;RP1=0, select bank0
  2031     061B  1607               	bsf	7,4	;volatile
  2032     061C  2E20               	goto	u624
  2033     061D                     u610:
  2034     061D  1283               	bcf	3,5	;RP0=0, select bank0
  2035     061E  1303               	bcf	3,6	;RP1=0, select bank0
  2036     061F  1207               	bcf	7,4	;volatile
  2037     0620                     u624:
  2038     0620                     l76:
  2039     0620  0008               	return
  2040     0621                     __end_of_lcdWriteHigh:
  2041                           
  2042                           	psect	text12
  2043     051B                     __ptext12:	
  2044 ;; *************** function _clockLcd *****************
  2045 ;; Defined at:
  2046 ;;		line 12 in file "lcd_4bit.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2060 ;;      Params:         0       0       0       0
  2061 ;;      Locals:         0       0       0       0
  2062 ;;      Temps:          2       0       0       0
  2063 ;;      Totals:         2       0       0       0
  2064 ;;Total ram usage:        2 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_lcdCmd
  2070 ;;		_lcdInit
  2071 ;;		_lcdChar
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075     051B                     _clockLcd:	
  2076                           ;psect for function _clockLcd
  2077                           
  2078     051B                     l909:	
  2079                           ;incstack = 0
  2080                           ; Regs used in _clockLcd: [wreg]
  2081                           
  2082                           
  2083                           ;lcd_4bit.c: 13:  RC1=1;
  2084     051B  1283               	bcf	3,5	;RP0=0, select bank0
  2085     051C  1303               	bcf	3,6	;RP1=0, select bank0
  2086     051D  1487               	bsf	7,1	;volatile
  2087     051E                     l911:
  2088                           
  2089                           ;lcd_4bit.c: 14:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2090     051E  3006               	movlw	6
  2091     051F  00F1               	movwf	??_clockLcd+1
  2092     0520  3030               	movlw	48
  2093     0521  00F0               	movwf	??_clockLcd
  2094     0522                     u1087:
  2095     0522  0BF0               	decfsz	??_clockLcd,f
  2096     0523  2D22               	goto	u1087
  2097     0524  0BF1               	decfsz	??_clockLcd+1,f
  2098     0525  2D22               	goto	u1087
  2099     0526  0000               	nop
  2100     0527                     l913:
  2101                           
  2102                           ;lcd_4bit.c: 15:  RC1=0;
  2103     0527  1283               	bcf	3,5	;RP0=0, select bank0
  2104     0528  1303               	bcf	3,6	;RP1=0, select bank0
  2105     0529  1087               	bcf	7,1	;volatile
  2106     052A                     l73:
  2107     052A  0008               	return
  2108     052B                     __end_of_clockLcd:
  2109     007E                     btemp	set	126	;btemp
  2110     007E                     wtemp0	set	126
  2111                           
  2112                           	psect	config
  2113                           
  2114                           ;Config register CONFIG1 @ 0x2007
  2115                           ;	Oscillator Selection bits
  2116                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2117                           ;	Watchdog Timer Enable bit
  2118                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2119                           ;	Power-up Timer Enable bit
  2120                           ;	PWRTE = OFF, PWRT disabled
  2121                           ;	RE3/MCLR pin function select bit
  2122                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2123                           ;	Code Protection bit
  2124                           ;	CP = OFF, Program memory code protection is disabled
  2125                           ;	Data Code Protection bit
  2126                           ;	CPD = OFF, Data memory code protection is disabled
  2127                           ;	Brown Out Reset Selection bits
  2128                           ;	BOREN = OFF, BOR disabled
  2129                           ;	Internal External Switchover bit
  2130                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2131                           ;	Fail-Safe Clock Monitor Enabled bit
  2132                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2133                           ;	Low Voltage Programming Enable bit
  2134                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2135                           ;	In-Circuit Debugger Mode bit
  2136                           ;	DEBUG = 0x1, unprogrammed default
  2137     2007                     	org	8199
  2138     2007  20F4               	dw	8436
  2139                           
  2140                           ;Config register CONFIG2 @ 0x2008
  2141                           ;	Brown-out Reset Selection bit
  2142                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2143                           ;	Flash Program Memory Self Write Enable bits
  2144                           ;	WRT = OFF, Write protection off
  2145     2008                     	org	8200
  2146     2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      26
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    lcdText@str	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[8]), STR_2(CODE[19]), 


Critical Paths under _main in COMMON

    _lcdText->_lcdChar
    _lcdSet->_lcdCmd
    _lcdNumber->___lldiv
    _lcdChar->_clockLcd
    _lcdChar->_lcdWriteHigh
    _lcdChar->_lcdWriteLow
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_clockLcd
    _lcdCmd->_lcdWriteHigh
    _lcdCmd->_lcdWriteLow

Critical Paths under _main in BANK0

    _main->_lcdNumber

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2562
                                             18 BANK0      8     8      0
                           _lcdClear
                            _lcdInit
                          _lcdNumber
                             _lcdSet
                            _lcdText
 ---------------------------------------------------------------------------------
 (1) _lcdText                                              2     2      0     376
                                              4 COMMON     2     2      0
                            _lcdChar
 ---------------------------------------------------------------------------------
 (1) _lcdSet                                               3     2      1     463
                                              5 COMMON     3     2      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdNumber                                           18    14      4    1149
                                              0 BANK0     18    14      4
                            ___lldiv
                            ___llmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              2     2      0     220
                                              2 COMMON     2     2      0
                           _clockLcd
                       _lcdWriteHigh
                        _lcdWriteLow
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     308
                                              5 COMMON     2     2      0
                           _clockLcd
                             _lcdCmd
                       _lcdWriteHigh
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     220
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     220
                                              2 COMMON     3     3      0
                           _clockLcd
                       _lcdWriteHigh
                        _lcdWriteLow
 ---------------------------------------------------------------------------------
 (3) _lcdWriteLow                                          2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcdWriteHigh                                         2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _clockLcd                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdClear
     _lcdCmd
       _clockLcd
       _lcdWriteHigh
       _lcdWriteLow
   _lcdInit
     _clockLcd
     _lcdCmd
     _lcdWriteHigh
   _lcdNumber
     ___lldiv
     ___llmod
     _lcdChar
       _clockLcd
       _lcdWriteHigh
       _lcdWriteLow
   _lcdSet
     _lcdCmd
   _lcdText
     _lcdChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     1A      1A       3       32.5%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Feb 28 07:49:25 2024

                      pc 0002                       l51 07B5                       l73 052A  
                     l82 0578                       l76 0620                       l85 051A  
                     l94 055C                       l79 05D6                       l88 066E  
                     l97 0541                       fsr 0004                      l103 0594  
                    l122 078F                      l255 0728                      l449 06C2  
                    l911 051E                      l913 0527                      l921 055E  
                    l915 05D8                      l923 0561                      l931 053D  
                    l909 051B                      l917 0596                      l925 056F  
                    l941 06E3                      l933 06C3                      l919 05CC  
                    l951 0711                      l943 06E7                      l935 06D3  
                    l927 052C             lcdWriteLow@b 0071                      l953 071A  
                    l945 06F0                      l937 06D6                      l961 0677  
                    l929 052F                      l947 0702                      l939 06DF  
                    l955 0720                      l971 069D                      l963 067A  
                    l981 0621                      l949 0710                      l973 06AB  
                    l965 0683                      l991 0641                      l983 0625  
                    l975 06B4                      l967 0687                      l959 066F  
                    l993 0649                      l985 062E                      l969 068B  
                    l977 06BA                      l995 064D                      l987 0632  
                    l997 0650                      l989 063D                      l999 0654  
                    _RC0 0038                      _RC1 0039                      _RC4 003C  
                    _RC5 003D                      _RC6 003E                      _RC7 003F  
                    u520 05E7                      u521 05E3                      u610 061D  
                    u611 0619                      u515 05DB                      u700 05C9  
                    u605 0611                      u701 05C5                      u550 05F9  
                    u534 05EA                      u551 05F5                      u624 0620  
                    u720 05D3                      u640 05A5                      u800 0720  
                    u545 05ED                      u721 05CF                      u641 05A1  
                    u801 071F                      u714 05CC                      u810 0677  
                    u635 0599                      u811 0676                      u580 060B  
                    u564 05FC                      u740 06D3                      u900 0771  
                    u581 0607                      u741 06D2                      u901 0770  
                    u734 05D6                      u670 05B7                      u654 05A8  
                    u830 068B                      u910 078F                      u575 05FF  
                    u671 05B3                      u831 068A                      u911 078E  
                    u760 06E7                      u840 069D                      u920 07B4  
                    u665 05AB                      u761 06E6                      u841 069C  
                    u825 067C                      u921 07B3                      u594 060E  
                    u930 07B9                      u755 06D8                      u931 07B8  
                    u684 05BA                      u780 0702                      u860 06BA  
                    u781 0701                      u861 06B9                      u845 0699  
                    u870 0594                      u695 05BD                      u775 06E9  
                    u855 06AC                      u871 0593                      u880 0548  
                    u785 06FE                      u881 0547                      u890 0551  
                    u795 0712                      u891 0550                      fsr0 0004  
                    indf 0000           ??_lcdWriteHigh 0070            lcdWriteHigh@b 0071  
                   l1001 065E                     l1003 0662                     l1011 057C  
                   l1005 0666                     l1021 0548                     l1013 0585  
                   l1007 066A                     l1031 0729                     l1023 054B  
                   l1015 0589                     l1017 0516                     l1041 0771  
                   l1033 072D                     l1025 0551                     l1009 057A  
                   l1043 0773                     l1035 0746                     l1027 0553  
                   l1019 0543                     l1051 0793                     l1045 0783  
                   l1037 0765                     l1029 0558                     l1061 079C  
                   l1053 0794                     l1047 0789                     l1039 0769  
                   l1071 07A5                     l1063 079D                     l1055 0797  
                   l1081 07B4                     l1073 07A6                     l1065 07A0  
                   l1057 079A                     l1049 0790                     l1091 07E1  
                   l1083 07B9                     l1075 07A7                     l1067 07A1  
                   l1059 079B                     l1093 07EC                     l1085 07D4  
                   l1077 07AA                     l1069 07A2                     l1087 07D7  
                   l1079 07AE                     l1089 07DB                     _ADFM 04FF  
                   _ADON 00F8                     _CHS0 00FA                     _CHS1 00FB  
                   _CHS2 00FC                     _CHS3 00FD                     _ANS0 0C40  
                   STR_1 001B                     STR_2 0008                     u1017 07F4  
                   u1027 053F                     u1037 0629                     u1047 0639  
                   u1057 0646                     u1067 0659                     u1077 0573  
                   u1087 0522                     _main 0790                     btemp 007E  
                   start 0000                    _ADCS0 00FE                    _ADCS1 00FF  
                  ?_main 0070          __end_of___lldiv 0729          __end_of___llmod 06C3  
                  _VCFG0 04FC                    _VCFG1 04FD                    _TRISC 0087  
        __end_of_lcdChar 0542          __end_of_lcdInit 066F          __end_of_lcdText 0595  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 07FD                   ??_main 0032  
       ___llmod@dividend 0074                   _ADRESH 001E                   _ADRESL 009E  
                 _TRISA0 0428         __end_of_lcdClear 051B         __end_of_clockLcd 052B  
   __end_of_lcdWriteHigh 0621                ??___lldiv 0078                   _lcdCmd 055D  
              ??___llmod 0078                   _lcdSet 0542                ??_lcdChar 0072  
              ??_lcdInit 0075                ??_lcdText 0074  __end_of__initialization 07FD  
         __pcstackCOMMON 0070               __pmaintext 0790                  ?_lcdCmd 0070  
                ?_lcdSet 0075                ?_lcdClear 0070                ?_clockLcd 0070  
             __stringtab 0002        __end_of_lcdNumber 0790                  ___lldiv 06C3  
                ___llmod 066F                  _lcdChar 052B                  _lcdInit 0621  
                __ptext1 0579                  __ptext2 0542                  __ptext3 0729  
                __ptext4 052B                  __ptext5 066F                  __ptext6 06C3  
                __ptext7 0621                  __ptext8 0516                  __ptext9 055D  
                _lcdText 0579                  lcdCmd@b 0074               ??_lcdClear 0075  
                lcdSet@x 0077                  lcdSet@y 0075               ??_clockLcd 0070  
           _lcdWriteHigh 05D7     end_of_initialization 07FD          ___lldiv@divisor 0070  
        ___lldiv@counter 007D               lcdNumber@i 0030               lcdNumber@j 0031  
             lcdNumber@n 0020               lcdText@str 0075            ??_lcdWriteLow 0070  
         __end_of_lcdCmd 0579           __end_of_lcdSet 055D      start_initialization 07FD  
        ___llmod@divisor 0070          ___llmod@counter 0079      __end_of_lcdWriteLow 05D7  
               ??_lcdCmd 0072                 ??_lcdSet 0076                ___latbits 0001  
          __pcstackBANK0 0020                 ?___lldiv 0070                 ?___llmod 0070  
              _lcdNumber 0729                 ?_lcdChar 0070                __pstrings 0002  
               ?_lcdInit 0070                 ?_lcdText 0070              _lcdWriteLow 0595  
               _GO_nDONE 00F9                lcdSet@add 0076               ?_lcdNumber 0020  
            __stringbase 0007                main@value 0038       __end_of__stringtab 0008  
               _lcdClear 0516                 _clockLcd 051B                 __ptext10 0595  
               __ptext11 05D7                 __ptext12 051B                 lcdChar@b 0073  
               lcdText@i 0074              ??_lcdNumber 0024         ___lldiv@dividend 0074  
              stringcode 0002             lcdNumber@num 0026         ___lldiv@quotient 0079  
               stringdir 0002                 stringtab 0002            ?_lcdWriteHigh 0070  
           ?_lcdWriteLow 0070  
